(this["webpackJsonpreact-mapbox-gl-example"]=this["webpackJsonpreact-mapbox-gl-example"]||[]).push([[0],{117:function(e,t,n){e.exports=n(632)},160:function(e,t,n){var o={"./Binary_Property/ASCII.js":161,"./Binary_Property/ASCII_Hex_Digit.js":162,"./Binary_Property/Alphabetic.js":163,"./Binary_Property/Any.js":164,"./Binary_Property/Assigned.js":165,"./Binary_Property/Bidi_Control.js":166,"./Binary_Property/Bidi_Mirrored.js":167,"./Binary_Property/Case_Ignorable.js":168,"./Binary_Property/Cased.js":169,"./Binary_Property/Changes_When_Casefolded.js":170,"./Binary_Property/Changes_When_Casemapped.js":171,"./Binary_Property/Changes_When_Lowercased.js":172,"./Binary_Property/Changes_When_NFKC_Casefolded.js":173,"./Binary_Property/Changes_When_Titlecased.js":174,"./Binary_Property/Changes_When_Uppercased.js":175,"./Binary_Property/Dash.js":176,"./Binary_Property/Default_Ignorable_Code_Point.js":177,"./Binary_Property/Deprecated.js":178,"./Binary_Property/Diacritic.js":179,"./Binary_Property/Emoji.js":180,"./Binary_Property/Emoji_Component.js":181,"./Binary_Property/Emoji_Modifier.js":182,"./Binary_Property/Emoji_Modifier_Base.js":183,"./Binary_Property/Emoji_Presentation.js":184,"./Binary_Property/Extended_Pictographic.js":185,"./Binary_Property/Extender.js":186,"./Binary_Property/Grapheme_Base.js":187,"./Binary_Property/Grapheme_Extend.js":188,"./Binary_Property/Hex_Digit.js":189,"./Binary_Property/IDS_Binary_Operator.js":190,"./Binary_Property/IDS_Trinary_Operator.js":191,"./Binary_Property/ID_Continue.js":192,"./Binary_Property/ID_Start.js":193,"./Binary_Property/Ideographic.js":194,"./Binary_Property/Join_Control.js":195,"./Binary_Property/Logical_Order_Exception.js":196,"./Binary_Property/Lowercase.js":197,"./Binary_Property/Math.js":198,"./Binary_Property/Noncharacter_Code_Point.js":199,"./Binary_Property/Pattern_Syntax.js":200,"./Binary_Property/Pattern_White_Space.js":201,"./Binary_Property/Quotation_Mark.js":202,"./Binary_Property/Radical.js":203,"./Binary_Property/Regional_Indicator.js":204,"./Binary_Property/Sentence_Terminal.js":205,"./Binary_Property/Soft_Dotted.js":206,"./Binary_Property/Terminal_Punctuation.js":207,"./Binary_Property/Unified_Ideograph.js":208,"./Binary_Property/Uppercase.js":209,"./Binary_Property/Variation_Selector.js":210,"./Binary_Property/White_Space.js":211,"./Binary_Property/XID_Continue.js":212,"./Binary_Property/XID_Start.js":213,"./General_Category/Cased_Letter.js":214,"./General_Category/Close_Punctuation.js":215,"./General_Category/Connector_Punctuation.js":216,"./General_Category/Control.js":217,"./General_Category/Currency_Symbol.js":218,"./General_Category/Dash_Punctuation.js":219,"./General_Category/Decimal_Number.js":220,"./General_Category/Enclosing_Mark.js":221,"./General_Category/Final_Punctuation.js":222,"./General_Category/Format.js":223,"./General_Category/Initial_Punctuation.js":224,"./General_Category/Letter.js":225,"./General_Category/Letter_Number.js":226,"./General_Category/Line_Separator.js":227,"./General_Category/Lowercase_Letter.js":228,"./General_Category/Mark.js":229,"./General_Category/Math_Symbol.js":230,"./General_Category/Modifier_Letter.js":231,"./General_Category/Modifier_Symbol.js":232,"./General_Category/Nonspacing_Mark.js":233,"./General_Category/Number.js":234,"./General_Category/Open_Punctuation.js":235,"./General_Category/Other.js":236,"./General_Category/Other_Letter.js":237,"./General_Category/Other_Number.js":238,"./General_Category/Other_Punctuation.js":239,"./General_Category/Other_Symbol.js":240,"./General_Category/Paragraph_Separator.js":241,"./General_Category/Private_Use.js":242,"./General_Category/Punctuation.js":243,"./General_Category/Separator.js":244,"./General_Category/Space_Separator.js":245,"./General_Category/Spacing_Mark.js":246,"./General_Category/Surrogate.js":247,"./General_Category/Symbol.js":248,"./General_Category/Titlecase_Letter.js":249,"./General_Category/Unassigned.js":250,"./General_Category/Uppercase_Letter.js":251,"./Script/Adlam.js":252,"./Script/Ahom.js":253,"./Script/Anatolian_Hieroglyphs.js":254,"./Script/Arabic.js":255,"./Script/Armenian.js":256,"./Script/Avestan.js":257,"./Script/Balinese.js":258,"./Script/Bamum.js":259,"./Script/Bassa_Vah.js":260,"./Script/Batak.js":261,"./Script/Bengali.js":262,"./Script/Bhaiksuki.js":263,"./Script/Bopomofo.js":264,"./Script/Brahmi.js":265,"./Script/Braille.js":266,"./Script/Buginese.js":267,"./Script/Buhid.js":268,"./Script/Canadian_Aboriginal.js":269,"./Script/Carian.js":270,"./Script/Caucasian_Albanian.js":271,"./Script/Chakma.js":272,"./Script/Cham.js":273,"./Script/Cherokee.js":274,"./Script/Common.js":275,"./Script/Coptic.js":276,"./Script/Cuneiform.js":277,"./Script/Cypriot.js":278,"./Script/Cyrillic.js":279,"./Script/Deseret.js":280,"./Script/Devanagari.js":281,"./Script/Dogra.js":282,"./Script/Duployan.js":283,"./Script/Egyptian_Hieroglyphs.js":284,"./Script/Elbasan.js":285,"./Script/Elymaic.js":286,"./Script/Ethiopic.js":287,"./Script/Georgian.js":288,"./Script/Glagolitic.js":289,"./Script/Gothic.js":290,"./Script/Grantha.js":291,"./Script/Greek.js":292,"./Script/Gujarati.js":293,"./Script/Gunjala_Gondi.js":294,"./Script/Gurmukhi.js":295,"./Script/Han.js":296,"./Script/Hangul.js":297,"./Script/Hanifi_Rohingya.js":298,"./Script/Hanunoo.js":299,"./Script/Hatran.js":300,"./Script/Hebrew.js":301,"./Script/Hiragana.js":302,"./Script/Imperial_Aramaic.js":303,"./Script/Inherited.js":304,"./Script/Inscriptional_Pahlavi.js":305,"./Script/Inscriptional_Parthian.js":306,"./Script/Javanese.js":307,"./Script/Kaithi.js":308,"./Script/Kannada.js":309,"./Script/Katakana.js":310,"./Script/Kayah_Li.js":311,"./Script/Kharoshthi.js":312,"./Script/Khmer.js":313,"./Script/Khojki.js":314,"./Script/Khudawadi.js":315,"./Script/Lao.js":316,"./Script/Latin.js":317,"./Script/Lepcha.js":318,"./Script/Limbu.js":319,"./Script/Linear_A.js":320,"./Script/Linear_B.js":321,"./Script/Lisu.js":322,"./Script/Lycian.js":323,"./Script/Lydian.js":324,"./Script/Mahajani.js":325,"./Script/Makasar.js":326,"./Script/Malayalam.js":327,"./Script/Mandaic.js":328,"./Script/Manichaean.js":329,"./Script/Marchen.js":330,"./Script/Masaram_Gondi.js":331,"./Script/Medefaidrin.js":332,"./Script/Meetei_Mayek.js":333,"./Script/Mende_Kikakui.js":334,"./Script/Meroitic_Cursive.js":335,"./Script/Meroitic_Hieroglyphs.js":336,"./Script/Miao.js":337,"./Script/Modi.js":338,"./Script/Mongolian.js":339,"./Script/Mro.js":340,"./Script/Multani.js":341,"./Script/Myanmar.js":342,"./Script/Nabataean.js":343,"./Script/Nandinagari.js":344,"./Script/New_Tai_Lue.js":345,"./Script/Newa.js":346,"./Script/Nko.js":347,"./Script/Nushu.js":348,"./Script/Nyiakeng_Puachue_Hmong.js":349,"./Script/Ogham.js":350,"./Script/Ol_Chiki.js":351,"./Script/Old_Hungarian.js":352,"./Script/Old_Italic.js":353,"./Script/Old_North_Arabian.js":354,"./Script/Old_Permic.js":355,"./Script/Old_Persian.js":356,"./Script/Old_Sogdian.js":357,"./Script/Old_South_Arabian.js":358,"./Script/Old_Turkic.js":359,"./Script/Oriya.js":360,"./Script/Osage.js":361,"./Script/Osmanya.js":362,"./Script/Pahawh_Hmong.js":363,"./Script/Palmyrene.js":364,"./Script/Pau_Cin_Hau.js":365,"./Script/Phags_Pa.js":366,"./Script/Phoenician.js":367,"./Script/Psalter_Pahlavi.js":368,"./Script/Rejang.js":369,"./Script/Runic.js":370,"./Script/Samaritan.js":371,"./Script/Saurashtra.js":372,"./Script/Sharada.js":373,"./Script/Shavian.js":374,"./Script/Siddham.js":375,"./Script/SignWriting.js":376,"./Script/Sinhala.js":377,"./Script/Sogdian.js":378,"./Script/Sora_Sompeng.js":379,"./Script/Soyombo.js":380,"./Script/Sundanese.js":381,"./Script/Syloti_Nagri.js":382,"./Script/Syriac.js":383,"./Script/Tagalog.js":384,"./Script/Tagbanwa.js":385,"./Script/Tai_Le.js":386,"./Script/Tai_Tham.js":387,"./Script/Tai_Viet.js":388,"./Script/Takri.js":389,"./Script/Tamil.js":390,"./Script/Tangut.js":391,"./Script/Telugu.js":392,"./Script/Thaana.js":393,"./Script/Thai.js":394,"./Script/Tibetan.js":395,"./Script/Tifinagh.js":396,"./Script/Tirhuta.js":397,"./Script/Ugaritic.js":398,"./Script/Vai.js":399,"./Script/Wancho.js":400,"./Script/Warang_Citi.js":401,"./Script/Yi.js":402,"./Script/Zanabazar_Square.js":403,"./Script_Extensions/Adlam.js":404,"./Script_Extensions/Ahom.js":405,"./Script_Extensions/Anatolian_Hieroglyphs.js":406,"./Script_Extensions/Arabic.js":407,"./Script_Extensions/Armenian.js":408,"./Script_Extensions/Avestan.js":409,"./Script_Extensions/Balinese.js":410,"./Script_Extensions/Bamum.js":411,"./Script_Extensions/Bassa_Vah.js":412,"./Script_Extensions/Batak.js":413,"./Script_Extensions/Bengali.js":414,"./Script_Extensions/Bhaiksuki.js":415,"./Script_Extensions/Bopomofo.js":416,"./Script_Extensions/Brahmi.js":417,"./Script_Extensions/Braille.js":418,"./Script_Extensions/Buginese.js":419,"./Script_Extensions/Buhid.js":420,"./Script_Extensions/Canadian_Aboriginal.js":421,"./Script_Extensions/Carian.js":422,"./Script_Extensions/Caucasian_Albanian.js":423,"./Script_Extensions/Chakma.js":424,"./Script_Extensions/Cham.js":425,"./Script_Extensions/Cherokee.js":426,"./Script_Extensions/Common.js":427,"./Script_Extensions/Coptic.js":428,"./Script_Extensions/Cuneiform.js":429,"./Script_Extensions/Cypriot.js":430,"./Script_Extensions/Cyrillic.js":431,"./Script_Extensions/Deseret.js":432,"./Script_Extensions/Devanagari.js":433,"./Script_Extensions/Dogra.js":434,"./Script_Extensions/Duployan.js":435,"./Script_Extensions/Egyptian_Hieroglyphs.js":436,"./Script_Extensions/Elbasan.js":437,"./Script_Extensions/Elymaic.js":438,"./Script_Extensions/Ethiopic.js":439,"./Script_Extensions/Georgian.js":440,"./Script_Extensions/Glagolitic.js":441,"./Script_Extensions/Gothic.js":442,"./Script_Extensions/Grantha.js":443,"./Script_Extensions/Greek.js":444,"./Script_Extensions/Gujarati.js":445,"./Script_Extensions/Gunjala_Gondi.js":446,"./Script_Extensions/Gurmukhi.js":447,"./Script_Extensions/Han.js":448,"./Script_Extensions/Hangul.js":449,"./Script_Extensions/Hanifi_Rohingya.js":450,"./Script_Extensions/Hanunoo.js":451,"./Script_Extensions/Hatran.js":452,"./Script_Extensions/Hebrew.js":453,"./Script_Extensions/Hiragana.js":454,"./Script_Extensions/Imperial_Aramaic.js":455,"./Script_Extensions/Inherited.js":456,"./Script_Extensions/Inscriptional_Pahlavi.js":457,"./Script_Extensions/Inscriptional_Parthian.js":458,"./Script_Extensions/Javanese.js":459,"./Script_Extensions/Kaithi.js":460,"./Script_Extensions/Kannada.js":461,"./Script_Extensions/Katakana.js":462,"./Script_Extensions/Kayah_Li.js":463,"./Script_Extensions/Kharoshthi.js":464,"./Script_Extensions/Khmer.js":465,"./Script_Extensions/Khojki.js":466,"./Script_Extensions/Khudawadi.js":467,"./Script_Extensions/Lao.js":468,"./Script_Extensions/Latin.js":469,"./Script_Extensions/Lepcha.js":470,"./Script_Extensions/Limbu.js":471,"./Script_Extensions/Linear_A.js":472,"./Script_Extensions/Linear_B.js":473,"./Script_Extensions/Lisu.js":474,"./Script_Extensions/Lycian.js":475,"./Script_Extensions/Lydian.js":476,"./Script_Extensions/Mahajani.js":477,"./Script_Extensions/Makasar.js":478,"./Script_Extensions/Malayalam.js":479,"./Script_Extensions/Mandaic.js":480,"./Script_Extensions/Manichaean.js":481,"./Script_Extensions/Marchen.js":482,"./Script_Extensions/Masaram_Gondi.js":483,"./Script_Extensions/Medefaidrin.js":484,"./Script_Extensions/Meetei_Mayek.js":485,"./Script_Extensions/Mende_Kikakui.js":486,"./Script_Extensions/Meroitic_Cursive.js":487,"./Script_Extensions/Meroitic_Hieroglyphs.js":488,"./Script_Extensions/Miao.js":489,"./Script_Extensions/Modi.js":490,"./Script_Extensions/Mongolian.js":491,"./Script_Extensions/Mro.js":492,"./Script_Extensions/Multani.js":493,"./Script_Extensions/Myanmar.js":494,"./Script_Extensions/Nabataean.js":495,"./Script_Extensions/Nandinagari.js":496,"./Script_Extensions/New_Tai_Lue.js":497,"./Script_Extensions/Newa.js":498,"./Script_Extensions/Nko.js":499,"./Script_Extensions/Nushu.js":500,"./Script_Extensions/Nyiakeng_Puachue_Hmong.js":501,"./Script_Extensions/Ogham.js":502,"./Script_Extensions/Ol_Chiki.js":503,"./Script_Extensions/Old_Hungarian.js":504,"./Script_Extensions/Old_Italic.js":505,"./Script_Extensions/Old_North_Arabian.js":506,"./Script_Extensions/Old_Permic.js":507,"./Script_Extensions/Old_Persian.js":508,"./Script_Extensions/Old_Sogdian.js":509,"./Script_Extensions/Old_South_Arabian.js":510,"./Script_Extensions/Old_Turkic.js":511,"./Script_Extensions/Oriya.js":512,"./Script_Extensions/Osage.js":513,"./Script_Extensions/Osmanya.js":514,"./Script_Extensions/Pahawh_Hmong.js":515,"./Script_Extensions/Palmyrene.js":516,"./Script_Extensions/Pau_Cin_Hau.js":517,"./Script_Extensions/Phags_Pa.js":518,"./Script_Extensions/Phoenician.js":519,"./Script_Extensions/Psalter_Pahlavi.js":520,"./Script_Extensions/Rejang.js":521,"./Script_Extensions/Runic.js":522,"./Script_Extensions/Samaritan.js":523,"./Script_Extensions/Saurashtra.js":524,"./Script_Extensions/Sharada.js":525,"./Script_Extensions/Shavian.js":526,"./Script_Extensions/Siddham.js":527,"./Script_Extensions/SignWriting.js":528,"./Script_Extensions/Sinhala.js":529,"./Script_Extensions/Sogdian.js":530,"./Script_Extensions/Sora_Sompeng.js":531,"./Script_Extensions/Soyombo.js":532,"./Script_Extensions/Sundanese.js":533,"./Script_Extensions/Syloti_Nagri.js":534,"./Script_Extensions/Syriac.js":535,"./Script_Extensions/Tagalog.js":536,"./Script_Extensions/Tagbanwa.js":537,"./Script_Extensions/Tai_Le.js":538,"./Script_Extensions/Tai_Tham.js":539,"./Script_Extensions/Tai_Viet.js":540,"./Script_Extensions/Takri.js":541,"./Script_Extensions/Tamil.js":542,"./Script_Extensions/Tangut.js":543,"./Script_Extensions/Telugu.js":544,"./Script_Extensions/Thaana.js":545,"./Script_Extensions/Thai.js":546,"./Script_Extensions/Tibetan.js":547,"./Script_Extensions/Tifinagh.js":548,"./Script_Extensions/Tirhuta.js":549,"./Script_Extensions/Ugaritic.js":550,"./Script_Extensions/Vai.js":551,"./Script_Extensions/Wancho.js":552,"./Script_Extensions/Warang_Citi.js":553,"./Script_Extensions/Yi.js":554,"./Script_Extensions/Zanabazar_Square.js":555,"./index.js":556,"./unicode-version.js":557};function a(e){var t=r(e);return n(t)}function r(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}a.keys=function(){return Object.keys(o)},a.resolve=r,e.exports=a,a.id=160},18:function(e){e.exports=JSON.parse('{"token":"pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA","styles":{"londonCycle":"mapbox://styles/mapbox/light-v9","light":"mapbox://styles/mapbox/light-v9","dark":"mapbox://styles/mapbox/dark-v9","basic":"mapbox://styles/mapbox/basic-v9","outdoor":"mapbox://styles/mapbox/outdoors-v10"}}')},593:function(e,t){},595:function(e,t){},607:function(e){e.exports=JSON.parse('{"version":8,"name":"Mapbox Streets","metadata":{"mapbox:autocomposite":true,"mapbox:groups":{"1444934828655.3389":{"name":"Aeroways","collapsed":true},"1444933322393.2852":{"name":"POI labels  (scalerank 1)","collapsed":true},"1444855898284.2651":{"name":"Aeroways","collapsed":true},"1444862578782.6787":{"name":"Road labels","collapsed":true},"1444934749452.0452":{"name":"Wetlands","collapsed":true},"1444862074717.8372":{"name":"Waterways","collapsed":true},"1444855868004.2437":{"name":"Landuse","collapsed":false},"1444855786460.0557":{"name":"Roads","collapsed":true},"1444856968392.4368":{"name":"Contour lines","collapsed":true},"1444856071629.7817":{"name":"Place labels","collapsed":true},"1444933575858.6992":{"name":"Highway shields","collapsed":true},"1444934295202.7542":{"name":"Admin boundaries","collapsed":true},"1444856904773.373":{"name":"Land barriers","collapsed":true},"1444856931506.5164":{"name":"Barriers","collapsed":true},"1444856151690.9143":{"name":"State labels","collapsed":true},"1444933721429.3076":{"name":"Road labels","collapsed":true},"1444933358918.2366":{"name":"POI labels (scalerank 2)","collapsed":true},"1444933808272.805":{"name":"Water labels","collapsed":true},"1444855815295.714":{"name":"Hillshading","collapsed":true},"1444855831248.8289":{"name":"Landcover","collapsed":true},"1444933372896.5967":{"name":"POI labels (scalerank 3)","collapsed":true},"1444855799204.86":{"name":"Bridges","collapsed":true},"1444856087950.3635":{"name":"Marine labels","collapsed":true},"1444856869758.2375":{"name":"Wetlands","collapsed":true},"1444862510685.128":{"name":"City labels","collapsed":true},"1444856954425.4016":{"name":"Buildings","collapsed":true},"1444855769305.6016":{"name":"Tunnels","collapsed":true},"1444856144497.7825":{"name":"Country labels","collapsed":true},"1444856712129.5933":{"name":"Waterways","collapsed":true},"1444856677484.5256":{"name":"High zoom level labels","collapsed":true},"1444933456003.5437":{"name":"POI labels (scalerank 4)","collapsed":true},"1444933837268.9458":{"name":"Contour lines","collapsed":true}}},"sources":{"composite":{"url":"mapbox://mapbox.mapbox-terrain-v2,mapbox.mapbox-streets-v7","type":"vector"},"route":{"type":"geojson","data":{"type":"Feature","properties":{},"geometry":{"type":"LineString","coordinates":[[-122.48369693756104,37.83381888486939],[-122.48348236083984,37.83317489144141],[-122.48339653015138,37.83270036637107],[-122.48356819152832,37.832056363179625],[-122.48404026031496,37.83114119107971],[-122.48404026031496,37.83049717427869],[-122.48348236083984,37.829920943955045],[-122.48356819152832,37.82954808664175],[-122.48507022857666,37.82944639795659],[-122.48610019683838,37.82880236636284],[-122.48695850372314,37.82931081282506],[-122.48700141906738,37.83080223556934],[-122.48751640319824,37.83168351665737],[-122.48803138732912,37.832158048267786],[-122.48888969421387,37.83297152392784],[-122.48987674713133,37.83263257682617],[-122.49043464660643,37.832937629287755],[-122.49125003814696,37.832429207817725],[-122.49163627624512,37.832564787218985],[-122.49223709106445,37.83337825839438],[-122.49378204345702,37.83368330777276]]}}}},"sprite":"mapbox://sprites/mapbox/streets-v8","glyphs":"mapbox://fonts/mapbox/{fontstack}/{range}.pbf","layers":[{"id":"background","type":"background","layout":{"visibility":"visible"},"paint":{"background-color":"#ede9d9"},"interactive":true},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855831248.8289"},"maxzoom":14,"filter":["==","class","crop"],"type":"fill","source":"composite","id":"landcover_crop","paint":{"fill-color":"#ddecb1","fill-opacity":{"base":1.5,"stops":[[2,0.3],[14,0]]},"fill-antialias":false},"source-layer":"landcover"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855831248.8289"},"maxzoom":14,"filter":["==","class","grass"],"type":"fill","source":"composite","id":"landcover_grass","paint":{"fill-color":"#ddecb1","fill-opacity":{"base":1.5,"stops":[[2,0.3],[14,0]]},"fill-antialias":false},"source-layer":"landcover"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855831248.8289"},"maxzoom":14,"filter":["==","class","scrub"],"type":"fill","source":"composite","id":"landcover_scrub","paint":{"fill-color":"#ddecb1","fill-opacity":{"base":1.5,"stops":[[2,0.3],[14,0]]},"fill-antialias":false},"source-layer":"landcover"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855831248.8289"},"maxzoom":14,"filter":["==","class","wood"],"type":"fill","source":"composite","id":"landcover_wood","paint":{"fill-color":"#ddecb1","fill-opacity":{"base":1.5,"stops":[[2,0.3],[14,0]]},"fill-antialias":false},"source-layer":"landcover"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855831248.8289"},"filter":["==","class","snow"],"type":"fill","source":"composite","id":"landcover_snow","paint":{"fill-color":"#fff","fill-opacity":0.2,"fill-antialias":false},"source-layer":"landcover"},{"interactive":true,"layout":{"visibility":"visible"},"filter":["==","class","national_park"],"type":"fill","source":"composite","id":"national_park","paint":{"fill-color":"#cde8a2","fill-opacity":{"base":1,"stops":[[5,0],[6,0.5]]}},"source-layer":"landuse_overlay"},{"interactive":true,"minzoom":9,"layout":{"visibility":"visible"},"filter":["==","class","scrub"],"type":"fill","source":"composite","id":"scrub","paint":{"fill-color":"#ddecb1","fill-opacity":{"base":1,"stops":[[9,0],[16,0.2]]}},"source-layer":"landuse"},{"interactive":true,"minzoom":9,"layout":{"visibility":"visible"},"filter":["==","class","grass"],"type":"fill","source":"composite","id":"grass","paint":{"fill-color":"#ddecb1","fill-opacity":{"base":1,"stops":[[9,0],[16,0.4]]}},"source-layer":"landuse"},{"interactive":true,"minzoom":6,"layout":{"visibility":"visible"},"filter":["==","class","wood"],"type":"fill","source":"composite","id":"wood","paint":{"fill-color":"#ddecb1","fill-opacity":{"base":1,"stops":[[6,0],[16,0.5]]}},"source-layer":"landuse"},{"interactive":true,"layout":{"visibility":"visible"},"filter":["==","class","hospital"],"type":"fill","source":"composite","id":"hospital","paint":{"fill-color":"#f4dcdc"},"source-layer":"landuse"},{"interactive":true,"layout":{"visibility":"visible"},"filter":["==","class","school"],"type":"fill","source":"composite","id":"school","paint":{"fill-color":"#f3ebb4"},"source-layer":"landuse"},{"interactive":true,"layout":{"visibility":"visible"},"filter":["==","class","park"],"type":"fill","source":"composite","id":"parks","paint":{"fill-color":"#cde8a2","fill-opacity":{"base":1,"stops":[[5,0],[6,1]]}},"source-layer":"landuse"},{"interactive":true,"minzoom":9,"layout":{"visibility":"visible"},"filter":["==","class","glacier"],"type":"fill","source":"composite","id":"glaciers","paint":{"fill-color":"#dcedf9","fill-opacity":{"base":1,"stops":[[9,0],[10,0.25]]}},"source-layer":"landuse"},{"interactive":true,"layout":{"visibility":"visible"},"filter":["==","class","pitch"],"type":"fill","source":"composite","id":"pitch","paint":{"fill-color":"#c3e194"},"source-layer":"landuse"},{"interactive":true,"minzoom":15,"layout":{"line-join":"miter"},"filter":["==","class","pitch"],"type":"line","source":"composite","id":"pitch-line","paint":{"line-color":"#e1f2c6"},"source-layer":"landuse"},{"interactive":true,"layout":{"visibility":"visible"},"filter":["==","class","cemetery"],"type":"fill","source":"composite","id":"cemetery","paint":{"fill-color":"#dde6c2"},"source-layer":"landuse"},{"interactive":true,"layout":{"visibility":"visible"},"filter":["==","class","industrial"],"type":"fill","source":"composite","id":"industrial","paint":{"fill-color":"#e0dae0"},"source-layer":"landuse"},{"interactive":true,"layout":{"visibility":"visible"},"filter":["==","class","sand"],"type":"fill","source":"composite","id":"sand","paint":{"fill-color":"#ededcf"},"source-layer":"landuse"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855815295.714"},"maxzoom":18,"filter":["==","level",94],"type":"fill","source":"composite","id":"hillshade_highlight_bright","paint":{"fill-color":"#fff","fill-opacity":{"stops":[[15,0.12],[18,0]]},"fill-antialias":false},"source-layer":"hillshade"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855815295.714"},"filter":["==","level",90],"type":"fill","source":"composite","id":"hillshade_highlight_med","paint":{"fill-color":"#fff","fill-opacity":{"stops":[[15,0.12],[18,0]]},"fill-antialias":false},"source-layer":"hillshade"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855815295.714"},"maxzoom":17,"filter":["==","level",89],"type":"fill","source":"composite","id":"hillshade_shadow_faint","paint":{"fill-color":"#5a5517","fill-opacity":{"stops":[[15,0.05],[17,0]]},"fill-antialias":false},"source-layer":"hillshade"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855815295.714"},"filter":["==","level",78],"type":"fill","source":"composite","id":"hillshade_shadow_med","paint":{"fill-color":"#5a5517","fill-opacity":{"stops":[[15,0.05],[17,0]]},"fill-antialias":false},"source-layer":"hillshade"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855815295.714"},"filter":["==","level",67],"type":"fill","source":"composite","id":"hillshade_shadow_dark","paint":{"fill-color":"#5a5517","fill-opacity":{"stops":[[15,0.06],[17,0]]},"fill-antialias":false},"source-layer":"hillshade"},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444855815295.714"},"maxzoom":17,"filter":["==","level",56],"type":"fill","source":"composite","id":"hillshade_shadow_extreme","paint":{"fill-color":"#5a5517","fill-opacity":{"stops":[[15,0.06],[17,0]]},"fill-antialias":false},"source-layer":"hillshade"},{"interactive":true,"minzoom":8,"layout":{"visibility":"visible","line-cap":{"base":1,"stops":[[0,"butt"],[11,"round"]]},"line-join":"round"},"filter":["any",["==","class","river"],["==","class","canal"]],"type":"line","source":"composite","id":"waterway-river-canal","paint":{"line-color":"#8ccbf7","line-width":{"base":1.3,"stops":[[8.5,0.1],[20,8]]},"line-opacity":{"base":1,"stops":[[8,0],[8.5,1]]}},"source-layer":"waterway"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-join":"round","line-cap":"round"},"filter":["all",["!=","class","river"],["!=","class","canal"]],"type":"line","source":"composite","id":"waterway-small","paint":{"line-color":"#8ccbf7","line-width":{"base":1.35,"stops":[[13.5,0.1],[20,3]]},"line-opacity":{"base":1,"stops":[[13,0],[13.5,1]]}},"source-layer":"waterway"},{"id":"water","type":"fill","source":"composite","source-layer":"water","layout":{"visibility":"visible"},"paint":{"fill-color":"#8ccbf7"},"interactive":true},{"interactive":true,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444934749452.0452"},"filter":["in","class","wetland_noveg","wetland"],"type":"fill","source":"composite","id":"wetlands","paint":{"fill-color":"#9DD3D8","fill-opacity":{"base":1,"stops":[[10,0.25],[10.5,0.15]]}},"source-layer":"landuse_overlay"},{"interactive":true,"metadata":{"mapbox:group":"1444934749452.0452"},"id":"wetlands-pattern","paint":{"fill-color":"#9DD3D8","fill-opacity":{"base":1,"stops":[[10,0],[10.5,1]]},"fill-pattern":"marsh-16","fill-translate-anchor":"viewport"},"ref":"wetlands"},{"interactive":true,"layout":{},"filter":["all",["==","$type","Polygon"],["==","class","land"]],"type":"fill","source":"composite","id":"barrier_line-land-polygon","paint":{"fill-color":"#ede9d9"},"source-layer":"barrier_line"},{"interactive":true,"layout":{"line-cap":"round"},"filter":["all",["==","$type","LineString"],["==","class","land"]],"type":"line","source":"composite","id":"barrier_line-land-line","paint":{"line-width":{"base":1.99,"stops":[[14,0.75],[20,40]]},"line-color":"#ede9d9"},"source-layer":"barrier_line"},{"interactive":true,"minzoom":15,"layout":{"visibility":"visible"},"filter":["==","underground","false"],"type":"line","source":"composite","id":"building-line","paint":{"line-color":"#d0cbbb","line-width":{"base":1.5,"stops":[[15,0.75],[20,3]]},"line-opacity":{"base":1,"stops":[[15.5,0],[16,1]]}},"source-layer":"building"},{"interactive":true,"minzoom":15,"layout":{"visibility":"visible"},"filter":["==","underground","false"],"type":"fill","source":"composite","id":"building","paint":{"fill-color":{"base":1,"stops":[[15,"#ede9d9"],[16,"#e8e0cc"]]},"fill-opacity":{"base":1,"stops":[[15.5,0],[16,1]]},"fill-outline-color":"#d0cbbb"},"source-layer":"building"},{"interactive":true,"minzoom":11,"layout":{},"metadata":{"mapbox:group":"1444934828655.3389"},"filter":["all",["==","$type","Polygon"],["!=","type","apron"]],"type":"fill","source":"composite","id":"aeroway-polygon","paint":{"fill-color":"#dbcedb","fill-opacity":{"base":1,"stops":[[11,0],[11.5,1]]}},"source-layer":"aeroway"},{"interactive":true,"minzoom":9,"layout":{"visibility":"visible","line-cap":"butt"},"metadata":{"mapbox:group":"1444934828655.3389"},"filter":["all",["==","$type","LineString"],["==","type","runway"]],"type":"line","source":"composite","id":"aeroway-runway","paint":{"line-color":"#dbcedb","line-width":{"base":1.5,"stops":[[9,1],[18,80]]}},"source-layer":"aeroway"},{"interactive":true,"minzoom":9,"layout":{"visibility":"visible","line-cap":"butt"},"metadata":{"mapbox:group":"1444934828655.3389"},"filter":["all",["==","$type","LineString"],["==","type","taxiway"]],"type":"line","source":"composite","id":"aeroway-taxiway","paint":{"line-color":"#dbcedb","line-width":{"base":1.5,"stops":[[10,0.5],[18,20]]}},"source-layer":"aeroway"},{"interactive":true,"minzoom":11,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","street"]],"type":"line","source":"composite","id":"tunnel-street-low","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#fff","line-opacity":{"stops":[[11.5,0],[12,1],[14,1],[14.01,0]]}},"source-layer":"road"},{"interactive":true,"minzoom":11,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","street_limited"]],"type":"line","source":"composite","id":"tunnel-street_limited-low","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#fff","line-opacity":{"stops":[[11.5,0],[12,1],[14,1],[14.01,0]]}},"source-layer":"road"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["in","class","service","link","track"],["!=","type","trunk_link"]],"type":"line","source":"composite","id":"tunnel-service-link-track-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#c4beb7","line-gap-width":{"base":1.5,"stops":[[14,0.5],[18,12]]},"line-dasharray":[3,3]},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-street_limited-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#c4beb7","line-gap-width":{"base":1.5,"stops":[[13,0],[14,2],[18,18]]},"line-dasharray":[3,3],"line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"tunnel-street_limited-low"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-street-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#c4beb7","line-gap-width":{"base":1.5,"stops":[[13,0],[14,2],[18,18]]},"line-dasharray":[3,3],"line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"tunnel-street-low"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["in","class","secondary","tertiary"]],"type":"line","source":"composite","id":"tunnel-secondary-tertiary-case","paint":{"line-width":{"base":1.2,"stops":[[10,0.75],[18,2]]},"line-dasharray":[3,3],"line-gap-width":{"base":1.5,"stops":[[8.5,0.5],[10,0.75],[18,26]]},"line-color":"#c4beb7"},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","primary"]],"type":"line","source":"composite","id":"tunnel-primary-case","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[16,2]]},"line-dasharray":[3,3],"line-gap-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-color":"#c4beb7"},"source-layer":"road"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","type","trunk_link"]],"type":"line","source":"composite","id":"tunnel-trunk_link-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-dasharray":[3,3]},"source-layer":"road"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","motorway"]],"type":"line","source":"composite","id":"tunnel-motorway_link-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-dasharray":[3,3]},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","type","trunk"]],"type":"line","source":"composite","id":"tunnel-trunk-case","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[16,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-opacity":1,"line-dasharray":[3,3]},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","motorway"]],"type":"line","source":"composite","id":"tunnel-motorway-case","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[16,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-opacity":1,"line-dasharray":[3,3]},"source-layer":"road"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible","line-cap":"butt","line-join":"miter"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","street_limited"]],"type":"line","source":"composite","id":"tunnel-construction","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#d9d3c9","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]},"line-dasharray":{"base":1,"stops":[[14,[0.4,0.8]],[15,[0.3,0.6]],[16,[0.2,0.3]],[17,[0.2,0.25]],[18,[0.15,0.15]]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","path"]],"type":"line","source":"composite","id":"tunnel-path","paint":{"line-width":{"base":1.5,"stops":[[15,1],[18,4]]},"line-dasharray":{"base":1,"stops":[[14,[1,0]],[15,[1.75,1]],[16,[1,0.75]],[17,[1,0.5]]]},"line-color":"#f5f2ee","line-opacity":{"base":1,"stops":[[14,0],[14.25,1]]}},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-trunk_link","paint":{"line-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-color":"#f2de9e","line-opacity":1,"line-dasharray":[1,0]},"ref":"tunnel-trunk_link-case"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-motorway_link","paint":{"line-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-color":"#ffbe8c","line-opacity":1,"line-dasharray":[1,0]},"ref":"tunnel-motorway_link-case"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","$type","LineString"],["all",["==","class","pedestrian"],["==","structure","tunnel"]]],"type":"line","source":"composite","id":"tunnel-pedestrian","paint":{"line-width":{"base":1.5,"stops":[[14,0.5],[18,12]]},"line-color":"#fff","line-opacity":1,"line-dasharray":{"base":1,"stops":[[14,[1,0]],[15,[1.5,0.4]],[16,[1,0.2]]]}},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-service-link-track","paint":{"line-width":{"base":1.5,"stops":[[14,0.5],[18,12]]},"line-color":"#fff","line-dasharray":[1,0]},"ref":"tunnel-service-link-track-case"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-street_limited","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#EFEDEB","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"tunnel-street_limited-low"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-street","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#fff","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"tunnel-street-low"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-secondary-tertiary","paint":{"line-width":{"base":1.5,"stops":[[8.5,0.5],[10,0.75],[18,26]]},"line-color":"#fff","line-opacity":1,"line-dasharray":[1,0],"line-blur":0},"ref":"tunnel-secondary-tertiary-case"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-primary","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-color":"#fff","line-opacity":1,"line-dasharray":[1,0],"line-blur":0},"ref":"tunnel-primary-case"},{"interactive":true,"minzoom":15,"layout":{"symbol-placement":"line","icon-image":{"base":1,"stops":[[16,"oneway-spaced-small"],[17,"oneway-spaced-large"]]},"icon-ignore-placement":false,"symbol-spacing":250,"icon-allow-overlap":false,"icon-padding":2},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","street_limited"],["==","oneway","true"]],"type":"symbol","source":"composite","id":"tunnel-oneway-arrows-other","paint":{},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","trunk"]],"type":"line","source":"composite","id":"tunnel-trunk","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-color":"#f2de9e"},"source-layer":"road"},{"interactive":true,"minzoom":15,"layout":{"symbol-placement":"line","icon-image":{"base":1,"stops":[[16,"oneway-spaced-white-small"],[17,"oneway-spaced-white-large"]]},"icon-ignore-placement":false,"symbol-spacing":250,"icon-allow-overlap":false,"icon-padding":2},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","type","trunk"],["==","oneway","true"]],"type":"symbol","source":"composite","id":"tunnel-oneway-arrows-trunk","paint":{},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-motorway","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-dasharray":[1,0],"line-opacity":1,"line-color":"#ffbe8c","line-blur":0},"ref":"tunnel-motorway-case"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["in","class","major_rail","minor_rail"]],"type":"line","source":"composite","id":"tunnel-rail","paint":{"line-color":{"stops":[[13,"#d8d5c8"],[16,"#c0beb2"]]},"line-width":{"base":1.5,"stops":[[14,0.5],[20,1]]}},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855769305.6016"},"id":"tunnel-rail-tracks","paint":{"line-color":{"stops":[[13,"#d8d5c8"],[16,"#c0beb2"]]},"line-width":{"base":1.5,"stops":[[14,4],[20,8]]},"line-dasharray":[0.1,15],"line-opacity":{"base":1,"stops":[[13.75,0],[20,1]]}},"ref":"tunnel-rail"},{"interactive":true,"minzoom":15,"layout":{"symbol-placement":"line","icon-image":{"base":1,"stops":[[16,"oneway-spaced-white-small"],[17,"oneway-spaced-white-large"]]},"icon-ignore-placement":false,"symbol-spacing":250,"icon-allow-overlap":false,"icon-padding":2},"metadata":{"mapbox:group":"1444855769305.6016"},"filter":["all",["==","structure","tunnel"],["==","class","motorway"],["==","oneway","true"]],"type":"symbol","source":"composite","id":"tunnel-oneway-arrows-motorway","paint":{},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["==","class","ferry"],"type":"line","source":"composite","id":"ferry","paint":{"line-color":"#5eace5","line-opacity":1,"line-width":{"base":1.5,"stops":[[14,0.5],[20,1]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","class","path"],["!in","structure","bridge","tunnel"]],"type":"line","source":"composite","id":"road-path-bg","paint":{"line-width":{"base":1.5,"stops":[[15,2],[18,7]]},"line-dasharray":[1,0],"line-color":"#d9d3c9","line-blur":0,"line-opacity":{"base":1,"stops":[[14,0],[14.25,0.5]]}},"source-layer":"road"},{"interactive":true,"minzoom":12,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","$type","LineString"],["all",["==","class","pedestrian"],["==","structure","none"]]],"type":"line","source":"composite","id":"road-pedestrian-case","paint":{"line-width":{"base":1.5,"stops":[[14,2],[18,14.5]]},"line-color":"#d9d3c9","line-gap-width":0,"line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"source-layer":"road"},{"interactive":true,"minzoom":11,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","$type","LineString"],["all",["==","class","street"],["==","structure","none"]]],"type":"line","source":"composite","id":"road-street-low","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#fff","line-opacity":{"stops":[[11,0],[11.25,1],[14,1],[14.01,0]]}},"source-layer":"road"},{"interactive":true,"minzoom":11,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","$type","LineString"],["all",["==","class","street_limited"],["==","structure","none"]]],"type":"line","source":"composite","id":"road-street_limited-low","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#fff","line-opacity":{"stops":[[11,0],[11.25,1],[14,1],[14.01,0]]}},"source-layer":"road"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["in","class","service","link","track"],["!in","structure","bridge","tunnel"],["!=","type","trunk_link"]],"type":"line","source":"composite","id":"road-service-link-track-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#d9d3c9","line-gap-width":{"base":1.5,"stops":[[14,0.5],[18,12]]}},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-street_limited-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#d9d3c9","line-gap-width":{"base":1.5,"stops":[[13,0],[14,2],[18,18]]},"line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"road-street_limited-low"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-street-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#d9d3c9","line-gap-width":{"base":1.5,"stops":[[13,0],[14,2],[18,18]]},"line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"road-street-low"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["in","class","secondary","tertiary"],["!in","structure","bridge","tunnel"]],"type":"line","source":"composite","id":"road-main-case","paint":{"line-width":{"base":1.2,"stops":[[10,0.75],[18,2]]},"line-color":"#d9d3c9","line-gap-width":{"base":1.5,"stops":[[8.5,0.5],[10,0.75],[18,26]]},"line-opacity":{"base":1,"stops":[[9.99,0],[10,1]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","class","primary"],["!in","structure","bridge","tunnel"]],"type":"line","source":"composite","id":"road-primary-case","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[16,2]]},"line-color":"#d9d3c9","line-gap-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-opacity":{"base":1,"stops":[[9.99,0],[10,1]]}},"source-layer":"road"},{"interactive":true,"minzoom":10,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","class","motorway_link"],["!in","structure","bridge","tunnel"]],"type":"line","source":"composite","id":"road-motorway_link-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-opacity":{"base":1,"stops":[[10.99,0],[11,1]]}},"source-layer":"road"},{"interactive":true,"minzoom":11,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["!in","structure","bridge","tunnel"],["==","type","trunk_link"]],"type":"line","source":"composite","id":"road-trunk_link-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-opacity":{"base":1,"stops":[[10.99,0],[11,1]]}},"source-layer":"road"},{"interactive":true,"minzoom":5,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","class","trunk"],["!in","structure","bridge","tunnel"]],"type":"line","source":"composite","id":"road-trunk-case","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[16,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-opacity":{"base":1,"stops":[[5.9,0],[6,1]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","class","motorway"],["!in","structure","bridge","tunnel"]],"type":"line","source":"composite","id":"road-motorway-case","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[16,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-opacity":{"base":1.2,"stops":[[5.9,0],[6,1]]}},"source-layer":"road"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible","line-cap":"butt","line-join":"miter"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","$type","LineString"],["all",["==","class","construction"],["==","structure","none"]]],"type":"line","source":"composite","id":"road-construction","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#d9d3c9","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]},"line-dasharray":{"base":1,"stops":[[14,[0.4,0.8]],[15,[0.3,0.6]],[16,[0.2,0.3]],[17,[0.2,0.25]],[18,[0.15,0.15]]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","class","path"],["!in","structure","bridge","tunnel"]],"type":"line","source":"composite","id":"road-path","paint":{"line-width":{"base":1.5,"stops":[[15,1],[18,4]]},"line-color":"#fff","line-dasharray":{"base":1,"stops":[[14,[1,0]],[15,[1.75,1]],[16,[1,0.75]],[17,[1,0.5]]]},"line-opacity":{"base":1,"stops":[[14,0],[14.25,1]]}},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-trunk_link","paint":{"line-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-color":"#f2cf60","line-opacity":1},"ref":"road-trunk_link-case"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-motorway_link","paint":{"line-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-color":"#ffa159","line-opacity":1},"ref":"road-motorway_link-case"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-pedestrian","paint":{"line-width":{"base":1.5,"stops":[[14,0.5],[18,12]]},"line-color":"#fff","line-opacity":1,"line-dasharray":{"base":1,"stops":[[14,[1,0]],[15,[1.5,0.4]],[16,[1,0.2]]]}},"ref":"road-pedestrian-case"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["in","class","service","link","track"],["!in","structure","bridge","tunnel"],["!=","type","trunk_link"]],"type":"line","source":"composite","id":"road-service-link-track","paint":{"line-width":{"base":1.5,"stops":[[14,0.5],[18,12]]},"line-color":"#fff"},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-street_limited","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#EFEDEB","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"road-street_limited-low"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-street","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#fff","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"road-street-low"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-secondary-tertiary","paint":{"line-width":{"base":1.5,"stops":[[8.5,0.5],[10,0.75],[18,26]]},"line-color":{"base":1,"stops":[[5,"#ede9d9"],[8,"#fff"]]},"line-opacity":{"base":1.2,"stops":[[5,0],[5.5,1]]}},"ref":"road-main-case"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-primary","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-color":{"base":1,"stops":[[5,"#ede9d9"],[8,"#fff"]]},"line-opacity":{"base":1.2,"stops":[[5,0],[5.5,1]]}},"ref":"road-primary-case"},{"interactive":true,"minzoom":15,"layout":{"symbol-placement":"line","icon-image":{"base":1,"stops":[[16,"oneway-spaced-small"],[17,"oneway-spaced-large"]]},"icon-ignore-placement":false,"icon-rotation-alignment":"map","icon-padding":2,"symbol-spacing":250,"icon-allow-overlap":false},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","oneway","true"],["in","class","primary","secondary","tertiary","street","street_limited"],["!in","structure","bridge","tunnel"]],"type":"symbol","source":"composite","id":"road-oneway-arrows-other","paint":{},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-trunk","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-color":{"base":1,"stops":[[5.9,"#fff"],[6,"#f2cf60"]]},"line-opacity":{"base":1.2,"stops":[[5,0],[5.5,1]]}},"ref":"road-trunk-case"},{"interactive":true,"minzoom":15,"layout":{"symbol-placement":"line","icon-image":{"base":1,"stops":[[16,"oneway-spaced-white-small"],[17,"oneway-spaced-white-large"]]},"icon-ignore-placement":false,"icon-padding":2,"symbol-spacing":250,"icon-allow-overlap":false},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","oneway","true"],["==","class","trunk"],["!in","structure","bridge","tunnel"]],"type":"symbol","source":"composite","id":"road-oneway-arrows-trunk","paint":{},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-motorway","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-color":{"base":1,"stops":[[5.9,"#fff"],[6,"#ffa159"]]},"line-opacity":{"base":1.2,"stops":[[5,0],[5.5,1]]}},"ref":"road-motorway-case"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["in","class","major_rail","minor_rail"],["!in","structure","bridge","tunnel"]],"type":"line","source":"composite","id":"road-rail","paint":{"line-color":{"stops":[[13,"#d8d5c8"],[16,"#b3b1a6"]]},"line-width":{"base":1.5,"stops":[[14,0.5],[20,1]]}},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855786460.0557"},"id":"road-rail-tracks","paint":{"line-color":{"stops":[[13,"#d8d5c8"],[16,"#b3b1a6"]]},"line-width":{"base":1.5,"stops":[[14,4],[20,8]]},"line-dasharray":[0.1,15],"line-opacity":{"base":1,"stops":[[13.75,0],[14,1]]}},"ref":"road-rail"},{"interactive":true,"minzoom":15,"layout":{"symbol-placement":"line","icon-image":{"base":1,"stops":[[16,"oneway-spaced-white-small"],[17,"oneway-spaced-white-large"]]},"icon-ignore-placement":false,"icon-padding":2,"symbol-spacing":250,"icon-allow-overlap":false},"metadata":{"mapbox:group":"1444855786460.0557"},"filter":["all",["==","oneway","true"],["in","class","motorway","motorway_link","trunk"],["!in","structure","bridge","tunnel"]],"type":"symbol","source":"composite","id":"road-oneway-arrows-motorway","paint":{},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","path"]],"type":"line","source":"composite","id":"bridge-path-bg","paint":{"line-width":{"base":1.5,"stops":[[15,2],[18,7]]},"line-dasharray":[1,0],"line-color":"#d9d3c9","line-blur":0,"line-opacity":{"base":1,"stops":[[15,0],[15.25,0.75]]}},"source-layer":"road"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","$type","LineString"],["all",["==","class","pedestrian"],["==","structure","bridge"]]],"type":"line","source":"composite","id":"bridge-pedestrian-case","paint":{"line-width":{"base":1.5,"stops":[[14,2],[18,14.5]]},"line-color":"#d9d3c9","line-gap-width":0,"line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"source-layer":"road"},{"interactive":true,"minzoom":11,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","street"]],"type":"line","source":"composite","id":"bridge-street-low","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#fff","line-opacity":{"stops":[[11.5,0],[12,1],[14,1],[14.01,0]]}},"source-layer":"road"},{"interactive":true,"minzoom":11,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","street_limited"]],"type":"line","source":"composite","id":"bridge-street_limited-low","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#fff","line-opacity":{"stops":[[11.5,0],[12,1],[14,1],[14.01,0]]}},"source-layer":"road"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["in","class","service","link","track"],["!=","type","trunk_link"]],"type":"line","source":"composite","id":"bridge-service-link-track-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#d9d3c9","line-gap-width":{"base":1.5,"stops":[[14,0.5],[18,12]]}},"source-layer":"road"},{"interactive":true,"minzoom":11,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","street_limited"]],"type":"line","source":"composite","id":"bridge-street_limited-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#d9d3c9","line-gap-width":{"base":1.5,"stops":[[13,0],[14,2],[18,18]]}},"source-layer":"road"},{"interactive":true,"minzoom":11,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","street"]],"type":"line","source":"composite","id":"bridge-street-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#d9d3c9","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]},"line-gap-width":{"base":1.5,"stops":[[13,0],[14,2],[18,18]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["in","class","secondary","tertiary"]],"type":"line","source":"composite","id":"bridge-secondary-tertiary-case","paint":{"line-width":{"base":1.2,"stops":[[10,0.75],[18,2]]},"line-color":"#d9d3c9","line-gap-width":{"base":1.5,"stops":[[8.5,0.5],[10,0.75],[18,26]]},"line-translate":[0,0]},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","primary"]],"type":"line","source":"composite","id":"bridge-primary-case","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[16,2]]},"line-color":"#d9d3c9","line-gap-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-translate":[0,0]},"source-layer":"road"},{"interactive":true,"minzoom":15,"layout":{"symbol-placement":"line","icon-image":{"base":1,"stops":[[16,"oneway-spaced-small"],[17,"oneway-spaced-large"]]},"icon-ignore-placement":false,"symbol-spacing":250,"icon-allow-overlap":false,"icon-rotation-alignment":"map","icon-padding":2},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["in","class","street","street_limited","service","path","pedestrian","track","link"],["==","oneway","true"]],"type":"symbol","source":"composite","id":"bridge-oneway-arrows-other","paint":{},"source-layer":"road"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","type","trunk_link"]],"type":"line","source":"composite","id":"bridge-trunk_link-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-opacity":{"base":1,"stops":[[10.99,0],[11,1]]}},"source-layer":"road"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","motorway_link"]],"type":"line","source":"composite","id":"bridge-motorway_link-case","paint":{"line-width":{"base":1.5,"stops":[[12,0.75],[20,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-opacity":1},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","trunk"]],"type":"line","source":"composite","id":"bridge-trunk-case","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[16,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[5,0.75],[18,32]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","motorway"]],"type":"line","source":"composite","id":"bridge-motorway-case","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[16,2]]},"line-color":"#fff","line-gap-width":{"base":1.5,"stops":[[5,0.75],[18,32]]}},"source-layer":"road"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible","line-cap":"butt","line-join":"miter"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["in","class","street","street_limited","service","path","pedestrian","track","link"],["==","class","construction"]],"type":"line","source":"composite","id":"bridge-construction","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#d9d3c9","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]},"line-dasharray":{"base":1,"stops":[[14,[0.4,0.8]],[15,[0.3,0.6]],[16,[0.2,0.3]],[17,[0.2,0.25]],[18,[0.15,0.15]]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","path"]],"type":"line","source":"composite","id":"bridge-path","paint":{"line-width":{"base":1.5,"stops":[[15,1],[18,4]]},"line-color":"#fff","line-dasharray":{"base":1,"stops":[[14,[1,0]],[15,[1.75,1]],[16,[1,0.75]],[17,[1,0.5]]]},"line-opacity":{"base":1,"stops":[[14,0],[14.25,1]]}},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855799204.86"},"id":"bridge-trunk_link","paint":{"line-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-color":"#f2cf60"},"ref":"bridge-trunk_link-case"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","motorway_link"]],"type":"line","source":"composite","id":"bridge-motorway_link","paint":{"line-width":{"base":1.5,"stops":[[12,0.5],[14,2],[18,18]]},"line-color":"#ffa159"},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855799204.86"},"id":"bridge-pedestrian","paint":{"line-width":{"base":1.5,"stops":[[14,0.5],[18,12]]},"line-color":"#fff","line-opacity":1,"line-dasharray":{"base":1,"stops":[[14,[1,0]],[15,[1.5,0.4]],[16,[1,0.2]]]}},"ref":"bridge-pedestrian-case"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["in","class","service","link","track"],["!=","type","trunk_link"]],"type":"line","source":"composite","id":"bridge-service-link-track","paint":{"line-width":{"base":1.5,"stops":[[14,0.5],[18,12]]},"line-color":"#fff"},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855799204.86"},"id":"bridge-street_limited","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#EFEDEB","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"bridge-street_limited-low"},{"interactive":true,"metadata":{"mapbox:group":"1444855799204.86"},"id":"bridge-street","paint":{"line-width":{"base":1.5,"stops":[[12.5,0.5],[14,2],[18,18]]},"line-color":"#fff","line-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"ref":"bridge-street-low"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["in","type","secondary","tertiary"]],"type":"line","source":"composite","id":"bridge-secondary-tertiary","paint":{"line-width":{"base":1.5,"stops":[[8.5,0.5],[10,0.75],[18,26]]},"line-color":"#fff","line-opacity":{"base":1.2,"stops":[[5,0],[5.5,1]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","type","primary"]],"type":"line","source":"composite","id":"bridge-primary","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-color":"#fff","line-opacity":{"base":1.2,"stops":[[5,0],[5.5,1]]}},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","trunk"]],"type":"line","source":"composite","id":"bridge-trunk","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-color":"#f2cf60"},"source-layer":"road"},{"interactive":true,"minzoom":15,"layout":{"symbol-placement":"line","icon-image":{"base":1,"stops":[[16,"oneway-spaced-white-small"],[17,"oneway-spaced-white-large"]]},"icon-ignore-placement":false,"symbol-spacing":250,"icon-allow-overlap":false,"icon-padding":2},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","type","trunk"],["==","oneway","true"]],"type":"symbol","source":"composite","id":"bridge-oneway-arrows-trunk","paint":{},"source-layer":"road"},{"interactive":true,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","motorway"]],"type":"line","source":"composite","id":"bridge-motorway","paint":{"line-width":{"base":1.5,"stops":[[5,0.75],[18,32]]},"line-color":"#ffa159"},"source-layer":"road"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["in","class","major_rail","minor_rail"]],"type":"line","source":"composite","id":"bridge-rail","paint":{"line-color":{"stops":[[13,"#d8d5c8"],[16,"#b3b1a6"]]},"line-width":{"base":1.5,"stops":[[14,0.5],[20,1]]}},"source-layer":"road"},{"interactive":true,"metadata":{"mapbox:group":"1444855799204.86"},"id":"bridge-rail-tracks","paint":{"line-color":{"stops":[[13,"#d8d5c8"],[16,"#b3b1a6"]]},"line-width":{"base":1.5,"stops":[[14,4],[20,8]]},"line-dasharray":[0.1,15],"line-opacity":{"base":1,"stops":[[13.75,0],[20,1]]}},"ref":"bridge-rail"},{"interactive":true,"minzoom":13,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["==","class","aerialway"]],"type":"line","source":"composite","id":"bridge-aerialway","paint":{"line-color":"#b3ada6","line-width":{"base":1.5,"stops":[[14,0.5],[20,1]]}},"source-layer":"road"},{"interactive":true,"minzoom":15,"layout":{"symbol-placement":"line","icon-image":{"base":1,"stops":[[16,"oneway-spaced-white-small"],[17,"oneway-spaced-white-large"]]},"icon-ignore-placement":false,"symbol-spacing":250,"icon-allow-overlap":false,"icon-padding":2},"metadata":{"mapbox:group":"1444855799204.86"},"filter":["all",["==","structure","bridge"],["in","class","motorway","trunk"],["==","oneway","true"]],"type":"symbol","source":"composite","id":"bridge-oneway-arrows-motorway","paint":{},"source-layer":"road"},{"interactive":true,"minzoom":16,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"filter":["==","class","hedge"],"type":"line","source":"composite","id":"hedges","paint":{"line-color":"#e2f4c2","line-width":{"base":1,"stops":[[16,1],[20,3]]},"line-opacity":1,"line-dasharray":[1,2,5,2,1,2]},"source-layer":"barrier_line"},{"interactive":true,"minzoom":16,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"filter":["==","class","fence"],"type":"line","source":"composite","id":"fences","paint":{"line-color":"#cbc6b7","line-width":{"base":1,"stops":[[16,1],[20,3]]},"line-opacity":1,"line-dasharray":[1,2,5,2,1,2]},"source-layer":"barrier_line"},{"interactive":true,"minzoom":17,"layout":{"visibility":"visible","line-cap":"round","line-join":"round"},"filter":["==","class","gate"],"type":"line","source":"composite","id":"gates","paint":{"line-color":"#cbc6b7","line-width":{"base":1,"stops":[[16,1],[20,3]]},"line-opacity":0.5,"line-dasharray":[1,2,5,2,1,2]},"source-layer":"barrier_line"},{"interactive":true,"layout":{"visibility":"visible","line-join":"bevel"},"metadata":{"mapbox:group":"1444934295202.7542"},"filter":["all",[">=","admin_level",3],["==","maritime",0]],"type":"line","source":"composite","id":"admin-3-4-boundaries-bg","paint":{"line-color":{"base":1,"stops":[[8,"#ede9d9"],[16,"#f6e8e1"]]},"line-width":{"base":1,"stops":[[3,3.5],[10,8]]},"line-opacity":{"base":1,"stops":[[7,0],[8,0.75]]},"line-dasharray":[1,0],"line-translate":[0,0],"line-blur":{"base":1,"stops":[[3,0],[8,3]]}},"source-layer":"admin"},{"interactive":true,"minzoom":1,"layout":{"visibility":"visible","line-join":"miter","line-cap":"butt"},"metadata":{"mapbox:group":"1444934295202.7542"},"filter":["all",["==","admin_level",2],["==","maritime",0]],"type":"line","source":"composite","id":"admin-2-boundaries-bg","paint":{"line-width":{"base":1,"stops":[[3,3.5],[10,10]]},"line-color":{"base":1,"stops":[[6,"#ede9d9"],[8,"#f6e8e1"]]},"line-opacity":{"base":1,"stops":[[3,0],[4,0.5]]},"line-translate":[0,0],"line-blur":{"base":1,"stops":[[3,0],[10,2]]}},"source-layer":"admin"},{"interactive":true,"layout":{"visibility":"visible","line-join":"round","line-cap":"round"},"metadata":{"mapbox:group":"1444934295202.7542"},"filter":["all",[">=","admin_level",3],["==","maritime",0]],"type":"line","source":"composite","id":"admin-3-4-boundaries","paint":{"line-dasharray":{"base":1,"stops":[[6,[2,0]],[7,[2,2,6,2]]]},"line-width":{"base":1,"stops":[[7,0.75],[12,1.5]]},"line-opacity":{"base":1,"stops":[[2,0],[3,1]]},"line-color":{"base":1,"stops":[[3,"#c3bfcc"],[7,"#aba8b3"]]}},"source-layer":"admin"},{"interactive":true,"minzoom":1,"layout":{"visibility":"visible","line-join":"round","line-cap":"round"},"metadata":{"mapbox:group":"1444934295202.7542"},"filter":["all",["==","admin_level",2],["==","maritime",0],["==","disputed",0]],"type":"line","source":"composite","id":"admin-2-boundaries","paint":{"line-color":"#787680","line-width":{"base":1,"stops":[[3,0.5],[10,2]]}},"source-layer":"admin"},{"interactive":true,"minzoom":1,"layout":{"visibility":"visible","line-cap":"butt","line-join":"round"},"metadata":{"mapbox:group":"1444934295202.7542"},"filter":["all",["==","admin_level",2],["==","maritime",0],["==","disputed",1]],"type":"line","source":"composite","id":"admin-2-boundaries-dispute","paint":{"line-dasharray":[1.5,1.5],"line-color":"#787680","line-width":{"base":1,"stops":[[3,0.5],[10,2]]}},"source-layer":"admin"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444933837268.9458"},"filter":["!in","index",5,10],"type":"line","source":"composite","id":"contour","paint":{"line-opacity":0.07,"line-color":"#66601a"},"source-layer":"contour"},{"interactive":true,"minzoom":14,"layout":{"visibility":"visible"},"metadata":{"mapbox:group":"1444933837268.9458"},"filter":["in","index",5,10],"type":"line","source":"composite","id":"contour-index","paint":{"line-opacity":0.12,"line-color":"#66601a"},"source-layer":"contour"},{"id":"housenum-label","type":"symbol","source":"composite","source-layer":"housenum_label","minzoom":17,"layout":{"visibility":"visible","text-field":"{house_num}","text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":4,"text-max-width":7,"text-size":9.5},"paint":{"text-color":"#b2aca5","text-halo-color":"#e8e0cc","text-halo-width":1.5,"text-halo-blur":0},"interactive":true},{"interactive":true,"minzoom":14,"layout":{"text-field":"{ele} m","symbol-placement":"line","text-max-angle":25,"visibility":"visible","text-padding":5,"text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"text-size":9.5},"filter":["in","index",5,10],"type":"symbol","source":"composite","id":"contour-index-label","paint":{"text-color":"#a7a696","text-halo-width":1,"text-halo-blur":1,"text-halo-color":"rgba(237,233,217, 0.25)"},"source-layer":"contour"},{"interactive":true,"minzoom":12,"layout":{"text-field":"{name_en}","visibility":"visible","text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line","text-max-angle":30,"text-size":{"base":1,"stops":[[13,12],[18,16]]}},"filter":["==","class","river"],"type":"symbol","source":"composite","id":"waterway-label","paint":{"text-halo-width":0.5,"text-halo-color":"#ffffff","text-color":"#004087","text-halo-blur":0.5},"source-layer":"waterway_label"},{"interactive":true,"minzoom":17,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[16,11],[20,13]]},"text-allow-overlap":false,"icon-image":"{maki}-11","text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,"visibility":"visible","text-offset":[0,1],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"metadata":{"mapbox:group":"1444933456003.5437"},"filter":["all",["!in","maki","park","golf","cemetery","zoo","campsite","swimming","dog-park"],["==","scalerank",4],[">=","localrank",15]],"type":"symbol","source":"composite","id":"poi-scalerank4-l15","paint":{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"poi_label"},{"interactive":true,"minzoom":16,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[16,11],[20,13]]},"text-allow-overlap":false,"icon-image":"{maki}-11","text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":1,"visibility":"visible","text-offset":[0,1],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"metadata":{"mapbox:group":"1444933456003.5437"},"filter":["all",["!in","maki","park","golf","cemetery","zoo","campsite","swimming","dog-park"],["==","scalerank",4],["<=","localrank",14]],"type":"symbol","source":"composite","id":"poi-scalerank4-l1","paint":{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"poi_label"},{"interactive":true,"minzoom":16,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[16,11],[20,13]]},"text-allow-overlap":false,"icon-image":"{maki}-11","text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":1,"visibility":"visible","text-offset":[0,1],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"metadata":{"mapbox:group":"1444933456003.5437"},"filter":["all",["in","maki","park","cemetery","golf","zoo","playground"],["==","scalerank",4]],"type":"symbol","source":"composite","id":"poi-parks_scalerank4","paint":{"text-color":"#4c661f","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"poi_label"},{"interactive":true,"minzoom":15,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[16,11],[20,13]]},"text-allow-overlap":false,"icon-image":"{maki}-11","text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":1,"visibility":"visible","text-offset":[0,1],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"metadata":{"mapbox:group":"1444933372896.5967"},"filter":["all",["!in","maki","park","golf","cemetery","zoo","campsite","swimming","dog-park"],["==","scalerank",3]],"type":"symbol","source":"composite","id":"poi-scalerank3","paint":{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"poi_label"},{"interactive":true,"minzoom":15,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[16,11],[20,13]]},"text-allow-overlap":false,"icon-image":"{maki}-11","text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,"visibility":"visible","text-offset":[0,1],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"metadata":{"mapbox:group":"1444933372896.5967"},"filter":["all",["in","maki","park","cemetery","golf","zoo"],["==","scalerank",3]],"type":"symbol","source":"composite","id":"poi-parks-scalerank3","paint":{"text-color":"#4c661f","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"poi_label"},{"interactive":true,"minzoom":15,"layout":{"text-size":{"base":1,"stops":[[15,10],[20,13]]},"text-ignore-placement":false,"text-max-angle":30,"symbol-spacing":250,"text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"visibility":"visible","text-rotation-alignment":"map","text-field":"{name_en}","text-letter-spacing":0.01},"metadata":{"mapbox:group":"1444933721429.3076"},"filter":["all",["==","$type","LineString"],["!in","class","motorway","street_limited","street","trunk","primary","secondary","tertiary","link","pedestrian"]],"type":"symbol","source":"composite","id":"road-label-small","paint":{"text-color":"#3a3836","text-halo-color":"#ffffff","text-halo-width":1.25,"text-halo-blur":1},"source-layer":"road_label"},{"interactive":true,"minzoom":11,"layout":{"text-size":{"base":1,"stops":[[11,10],[20,14]]},"text-max-angle":30,"symbol-spacing":250,"text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"visibility":"visible","text-rotation-alignment":"map","text-field":"{name_en}","text-letter-spacing":0.01},"metadata":{"mapbox:group":"1444933721429.3076"},"filter":["all",["==","$type","LineString"],["in","class","street","street_limited","link","pedestrian"]],"type":"symbol","source":"composite","id":"road-label-medium","paint":{"text-color":"#3a3836","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"road_label"},{"interactive":true,"layout":{"text-size":{"base":1,"stops":[[9,10],[20,16]]},"text-allow-overlap":false,"text-ignore-placement":false,"text-max-angle":30,"symbol-spacing":250,"text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"visibility":"visible","text-rotation-alignment":"map","text-keep-upright":true,"text-field":"{name_en}","text-letter-spacing":0.01},"metadata":{"mapbox:group":"1444933721429.3076"},"filter":["in","class","motorway","trunk","primary","secondary","tertiary"],"type":"symbol","source":"composite","id":"road-label-large","paint":{"text-color":"#3a3836","text-halo-color":"rgba(255,255,255, 0.75)","text-halo-width":1,"text-halo-blur":1},"source-layer":"road_label"},{"interactive":true,"layout":{"text-size":9,"text-allow-overlap":false,"icon-image":"{shield}-{reflen}","icon-rotation-alignment":"viewport","symbol-avoid-edges":false,"text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":{"base":1,"stops":[[11,150],[14,200]]},"text-font":["DIN Offc Pro Bold","Arial Unicode MS Bold"],"symbol-placement":{"base":1,"stops":[[10,"point"],[11,"line"]]},"text-padding":2,"visibility":"visible","text-rotation-alignment":"viewport","text-field":"{ref}","text-letter-spacing":0.05,"icon-padding":2},"metadata":{"mapbox:group":"1444933575858.6992"},"filter":["all",["!in","shield","us-interstate","us-interstate-business","us-interstate-duplex","se-main","at-expressway","at-motorway","at-state-b","de-motorway","ch-motorway","ch-main","e-road","hu-main","hu-motorway","gr-motorway","gr-national","bg-motorway","bg-national","hr-motorway","hr-state","cz-motorway","cz-expressway","cz-road","fi-main","nz-state","pl-motorway","pl-expressway","pl-national","ro-motorway","ro-national","ro-county","sk-highway","sk-road","si-motorway","si-expressway","za-metropolitan","za-national","za-provincial","za-regional","rs-motorway","rs-state-1b"],["<=","reflen",6]],"type":"symbol","source":"composite","id":"road-shields-black","paint":{"text-color":"#3a3836","icon-halo-color":"rgba(0, 0, 0, 1)","icon-halo-width":1,"text-opacity":1,"icon-color":"white","text-halo-color":"#ffffff","text-halo-width":0},"source-layer":"road_label"},{"interactive":true,"layout":{"text-size":9,"text-allow-overlap":false,"icon-image":"{shield}-{reflen}","icon-rotation-alignment":"viewport","symbol-avoid-edges":false,"text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":{"base":1,"stops":[[11,150],[14,200]]},"text-font":["DIN Offc Pro Bold","Arial Unicode MS Bold"],"symbol-placement":{"base":1,"stops":[[10,"point"],[11,"line"]]},"text-padding":2,"visibility":"visible","text-rotation-alignment":"viewport","text-field":"{ref}","text-letter-spacing":0.05,"icon-padding":2},"metadata":{"mapbox:group":"1444933575858.6992"},"filter":["all",["in","shield","us-interstate","us-interstate-business","us-interstate-duplex","se-main","at-expressway","at-motorway","at-state-b","de-motorway","ch-motorway","ch-main","e-road","hu-main","hu-motorway","gr-motorway","gr-national","bg-motorway","bg-national","hr-motorway","hr-state","cz-motorway","cz-expressway","cz-road","fi-main","nz-state","pl-motorway","pl-expressway","pl-national","ro-motorway","ro-national","ro-county","sk-highway","sk-road","si-motorway","si-expressway","za-metropolitan","za-national","za-provincial","za-regional","rs-motorway","rs-state-1b"],["<=","reflen",6]],"type":"symbol","source":"composite","id":"road-shields-white","paint":{"text-color":"#fff","icon-halo-color":"rgba(0, 0, 0, 1)","icon-halo-width":1,"text-opacity":1,"icon-color":"white","text-halo-color":"#ffffff","text-halo-width":0},"source-layer":"road_label"},{"interactive":true,"minzoom":13,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[14,11],[20,14]]},"text-allow-overlap":false,"icon-image":{"stops":[[14,"{maki}-11"],[15,"{maki}-15"]]},"text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,"visibility":"visible","text-offset":[0,1.25],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"metadata":{"mapbox:group":"1444933358918.2366"},"filter":["all",["!in","maki","park","golf","cemetery","zoo","campsite","swimming","dog-park"],["==","scalerank",2]],"type":"symbol","source":"composite","id":"poi-scalerank2","paint":{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1.25},"source-layer":"poi_label"},{"interactive":true,"minzoom":13,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[14,11],[20,14]]},"text-allow-overlap":false,"icon-image":{"stops":[[14,"{maki}-11"],[15,"{maki}-15"]]},"text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,"visibility":"visible","text-offset":[0,1.25],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"metadata":{"mapbox:group":"1444933358918.2366"},"filter":["all",["in","maki","park","golf","cemetery","zoo","campsite","swimming","dog-park"],["==","scalerank",2]],"type":"symbol","source":"composite","id":"poi-parks-scalerank2","paint":{"text-color":"#4c661f","text-halo-color":"#ffffff","text-halo-width":1.25},"source-layer":"poi_label"},{"interactive":true,"minzoom":12,"layout":{"text-size":{"base":1,"stops":[[16,11],[20,13]]},"icon-image":"{network}","symbol-avoid-edges":true,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"icon-allow-overlap":false,"symbol-placement":"point","text-justify":"center","visibility":"visible","text-offset":[0,1],"text-rotation-alignment":"viewport","text-anchor":"top","text-field":{"base":1,"stops":[[0,""],[13,"{name_en}"]]},"text-letter-spacing":0.02,"icon-padding":0,"text-max-width":7},"type":"symbol","source":"composite","id":"rail-label","paint":{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1.5,"icon-halo-width":4,"icon-halo-color":"#fff","text-opacity":{"base":1,"stops":[[13.99,0],[14,1]]}},"source-layer":"rail_station_label"},{"interactive":true,"minzoom":15,"layout":{"text-field":"{name_en}","visibility":"visible","text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"text-max-width":7,"text-size":{"base":1,"stops":[[16,13],[20,16]]}},"metadata":{"mapbox:group":"1444933808272.805"},"filter":["<=","area",10000],"type":"symbol","source":"composite","id":"water-label-sm","paint":{"text-halo-width":0,"text-halo-color":"#ffffff","text-color":"#004087","text-halo-blur":1.5},"source-layer":"water_label"},{"interactive":true,"minzoom":5,"layout":{"text-field":"{name_en}","visibility":"visible","text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"text-max-width":7,"text-size":{"base":1,"stops":[[13,13],[18,18]]}},"metadata":{"mapbox:group":"1444933808272.805"},"filter":[">","area",10000],"type":"symbol","source":"composite","id":"water-label","paint":{"text-halo-width":0,"text-halo-color":"#ffffff","text-color":"#004087","text-halo-blur":1.5},"source-layer":"water_label"},{"interactive":true,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[10,11],[18,14]]},"text-allow-overlap":false,"icon-image":{"stops":[[13,"{maki}-11"],[14,"{maki}-15"]]},"text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,"visibility":"visible","text-offset":[0,1],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"metadata":{"mapbox:group":"1444933322393.2852"},"filter":["all",["in","maki","park","golf","cemetery","zoo","campsite","swimming","dog-park"],["<=","scalerank",1]],"type":"symbol","source":"composite","id":"poi-parks-scalerank1","paint":{"text-color":"#4c661f","text-halo-color":"#ffffff","text-halo-width":1,"text-halo-blur":0},"source-layer":"poi_label"},{"interactive":true,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[10,11],[18,14]]},"text-allow-overlap":false,"icon-image":{"stops":[[13,"{maki}-11"],[14,"{maki}-15"]]},"text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,"visibility":"visible","text-offset":[0,1],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"metadata":{"mapbox:group":"1444933322393.2852"},"filter":["all",["!in","maki","park","golf","cemetery","zoo","campsite","swimming","dog-park"],["<=","scalerank",1]],"type":"symbol","source":"composite","id":"poi-scalerank1","paint":{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"poi_label"},{"interactive":true,"minzoom":9,"layout":{"text-size":{"base":1,"stops":[[10,12],[18,18]]},"text-allow-overlap":false,"icon-image":{"stops":[[12,"{maki}-11"],[13,"{maki}-15"]]},"text-ignore-placement":false,"symbol-spacing":250,"text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,"visibility":"visible","text-offset":{"base":1,"stops":[[12,[0,1]],[13,[0,1.25]]]},"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":{"stops":[[12,"{ref}"],[13,"{name_en}"]]},"text-letter-spacing":0.02,"text-max-width":9},"filter":["<=","scalerank",2],"type":"symbol","source":"composite","id":"airport-label","paint":{"text-color":"#000000","text-halo-color":"#ffffff","text-halo-width":1.25},"source-layer":"airport_label"},{"interactive":true,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[10,11],[14,16]]},"text-allow-overlap":false,"text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,"visibility":"visible","text-offset":[0,0],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"center","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":8},"filter":["==","type","islet"],"type":"symbol","source":"composite","id":"place-islets","paint":{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"place_label"},{"interactive":true,"minzoom":10,"layout":{"visibility":"visible","text-field":"{name_en}","text-transform":"uppercase","text-letter-spacing":0.1,"text-max-width":7,"text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"text-padding":3,"text-size":{"base":1,"stops":[[12,11],[16,16]]}},"maxzoom":16,"filter":["==","type","neighbourhood"],"type":"symbol","source":"composite","id":"place-neighbourhood","paint":{"text-halo-color":"rgba(255,255,255, 0.5)","text-halo-width":1.75,"text-color":"#805540","text-halo-blur":0},"source-layer":"place_label"},{"interactive":true,"minzoom":10,"layout":{"visibility":"visible","text-field":"{name_en}","text-transform":"uppercase","text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"text-letter-spacing":0.15,"text-max-width":7,"text-padding":3,"text-size":{"base":1,"stops":[[11,11],[15,18]]}},"maxzoom":16,"filter":["==","type","suburb"],"type":"symbol","source":"composite","id":"place-suburb","paint":{"text-halo-color":"rgba(255,255,255, 0.5)","text-halo-width":1.75,"text-color":"#805540"},"source-layer":"place_label"},{"interactive":true,"minzoom":10,"layout":{"visibility":"visible","text-field":"{name_en}","text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"text-size":{"base":1,"stops":[[12,11.5],[15,16]]}},"maxzoom":16,"filter":["==","type","hamlet"],"type":"symbol","source":"composite","id":"place-hamlet","paint":{"text-halo-color":"#ffffff","text-halo-width":1.25,"text-color":"#000000"},"source-layer":"place_label"},{"interactive":true,"minzoom":8,"layout":{"visibility":"visible","text-field":"{name_en}","text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"text-max-width":7,"text-size":{"base":1,"stops":[[10,11.5],[16,18]]}},"maxzoom":15,"filter":["==","type","village"],"type":"symbol","source":"composite","id":"place-village","paint":{"text-halo-color":"#ffffff","text-halo-width":1.25,"text-color":"#000000"},"source-layer":"place_label"},{"interactive":true,"minzoom":6,"layout":{"icon-image":"dot-9","text-font":{"base":1,"stops":[[11,["DIN Offc Pro Regular","Arial Unicode MS Regular"]],[12,["DIN Offc Pro Medium","Arial Unicode MS Regular"]]]},"visibility":"visible","text-offset":{"base":1,"stops":[[7,[0,-0.15]],[8,[0,0]]]},"text-anchor":{"base":1,"stops":[[7,"bottom"],[8,"center"]]},"text-field":"{name_en}","text-max-width":7,"text-size":{"base":1,"stops":[[7,11.5],[15,20]]}},"maxzoom":15,"filter":["==","type","town"],"type":"symbol","source":"composite","id":"place-town","paint":{"text-color":"#000000","text-halo-color":"#ffffff","text-halo-width":1.25,"icon-opacity":{"base":1,"stops":[[7.99,1],[8,0]]}},"source-layer":"place_label"},{"interactive":true,"layout":{"text-line-height":1.2,"text-size":{"base":1,"stops":[[10,11],[18,16]]},"text-allow-overlap":false,"text-ignore-placement":false,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,"visibility":"visible","text-offset":[0,0],"icon-optional":false,"text-rotation-alignment":"viewport","text-anchor":"center","text-field":"{name_en}","text-letter-spacing":0.02,"text-max-width":7},"filter":["==","type","island"],"type":"symbol","source":"composite","id":"place-islands","paint":{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"place_label"},{"interactive":true,"layout":{"text-size":{"base":1,"stops":[[6,12],[14,22]]},"icon-image":"dot-9","text-transform":"none","text-font":{"base":1,"stops":[[7,["DIN Offc Pro Regular","Arial Unicode MS Regular"]],[8,["DIN Offc Pro Medium","Arial Unicode MS Regular"]]]},"visibility":"visible","text-offset":{"base":1,"stops":[[7.99,[0,-0.2]],[8,[0,0]]]},"text-anchor":{"base":1,"stops":[[7,"bottom"],[8,"center"]]},"text-field":"{name_en}","text-max-width":7},"metadata":{"mapbox:group":"1444862510685.128"},"maxzoom":14,"filter":["all",["!in","scalerank",0,1,2,3,4,5],["==","type","city"]],"type":"symbol","source":"composite","id":"place-city-sm","paint":{"text-color":"#000000","text-halo-color":"#ffffff","text-halo-width":1.25,"icon-opacity":{"base":1,"stops":[[7.99,1],[8,0]]}},"source-layer":"place_label"},{"interactive":true,"layout":{"visibility":"visible","text-field":"{name_en}","icon-image":"dot-10","text-anchor":{"base":1,"stops":[[7,"top"],[8,"center"]]},"text-offset":{"base":1,"stops":[[7.99,[0,0.1]],[8,[0,0]]]},"text-font":{"base":1,"stops":[[7,["DIN Offc Pro Regular","Arial Unicode MS Regular"]],[8,["DIN Offc Pro Medium","Arial Unicode MS Regular"]]]},"text-size":{"base":0.9,"stops":[[5,12],[12,22]]}},"metadata":{"mapbox:group":"1444862510685.128"},"maxzoom":14,"filter":["all",["in","scalerank",3,4,5],["==","type","city"],["in","ldir","S","SE","SW","E"]],"type":"symbol","source":"composite","id":"place-city-md-s","paint":{"text-halo-width":1,"text-halo-color":"#ffffff","text-color":"#000000","text-halo-blur":1,"icon-opacity":{"base":1,"stops":[[7.99,1],[8,0]]}},"source-layer":"place_label"},{"interactive":true,"layout":{"icon-image":"dot-10","text-font":{"base":1,"stops":[[7,["DIN Offc Pro Regular","Arial Unicode MS Regular"]],[8,["DIN Offc Pro Medium","Arial Unicode MS Regular"]]]},"visibility":"visible","text-offset":{"base":1,"stops":[[7.99,[0,-0.25]],[8,[0,0]]]},"text-anchor":{"base":1,"stops":[[7,"bottom"],[8,"center"]]},"text-field":"{name_en}","text-max-width":7,"text-size":{"base":0.9,"stops":[[5,12],[12,22]]}},"metadata":{"mapbox:group":"1444862510685.128"},"maxzoom":14,"filter":["all",["in","scalerank",3,4,5],["==","type","city"],["in","ldir","N","NE","NW","W"]],"type":"symbol","source":"composite","id":"place-city-md-n","paint":{"text-color":"#000000","text-halo-color":"#ffffff","text-halo-width":1,"icon-opacity":{"base":1,"stops":[[7.99,1],[8,0]]},"text-halo-blur":1},"source-layer":"place_label"},{"interactive":true,"minzoom":1,"layout":{"icon-image":"dot-11","text-font":{"base":1,"stops":[[7,["DIN Offc Pro Regular","Arial Unicode MS Regular"]],[8,["DIN Offc Pro Medium","Arial Unicode MS Regular"]]]},"visibility":"visible","text-offset":{"base":1,"stops":[[7.99,[0,0.15]],[8,[0,0]]]},"text-anchor":{"base":1,"stops":[[7,"top"],[8,"center"]]},"text-field":"{name_en}","text-max-width":7,"text-size":{"base":0.9,"stops":[[4,12],[10,22]]}},"metadata":{"mapbox:group":"1444862510685.128"},"maxzoom":14,"filter":["all",["<=","scalerank",2],["==","type","city"],["in","ldir","S","SE","SW","E"]],"type":"symbol","source":"composite","id":"place-city-lg-s","paint":{"text-color":"#000000","text-halo-color":"#ffffff","text-halo-width":1,"icon-opacity":{"base":1,"stops":[[7.99,1],[8,0]]},"text-halo-blur":1},"source-layer":"place_label"},{"interactive":true,"minzoom":1,"layout":{"icon-image":"dot-11","text-font":{"base":1,"stops":[[7,["DIN Offc Pro Regular","Arial Unicode MS Regular"]],[8,["DIN Offc Pro Medium","Arial Unicode MS Regular"]]]},"visibility":"visible","text-offset":{"base":1,"stops":[[7.99,[0,-0.25]],[8,[0,0]]]},"text-anchor":{"base":1,"stops":[[7,"bottom"],[8,"center"]]},"text-field":"{name_en}","text-max-width":7,"text-size":{"base":0.9,"stops":[[4,12],[10,22]]}},"metadata":{"mapbox:group":"1444862510685.128"},"maxzoom":14,"filter":["all",["<=","scalerank",2],["==","type","city"],["in","ldir","N","NE","NW","W"]],"type":"symbol","source":"composite","id":"place-city-lg-n","paint":{"text-color":"#000000","text-opacity":1,"text-halo-color":"#ffffff","text-halo-width":1,"icon-opacity":{"base":1,"stops":[[7.99,1],[8,0]]},"text-halo-blur":1},"source-layer":"place_label"},{"interactive":true,"minzoom":3,"layout":{"text-line-height":1.1,"text-size":{"base":1,"stops":[[3,12],[6,16]]},"symbol-spacing":{"base":1,"stops":[[4,100],[6,400]]},"text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line","visibility":"visible","text-field":"{name_en}","text-letter-spacing":0.1,"text-max-width":5},"metadata":{"mapbox:group":"1444856087950.3635"},"maxzoom":10,"filter":["all",["==","$type","LineString"],[">=","labelrank",4]],"type":"symbol","source":"composite","id":"marine-label-sm-ln","paint":{"text-color":"#c8e5f9"},"source-layer":"marine_label"},{"interactive":true,"minzoom":3,"layout":{"visibility":"visible","text-field":"{name_en}","text-max-width":5,"text-letter-spacing":0.1,"text-line-height":1.5,"symbol-placement":"point","text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"text-size":{"base":1,"stops":[[3,12],[6,16]]}},"metadata":{"mapbox:group":"1444856087950.3635"},"maxzoom":10,"filter":["all",["==","$type","Point"],[">=","labelrank",4]],"type":"symbol","source":"composite","id":"marine-label-sm-pt","paint":{"text-color":"#c8e5f9"},"source-layer":"marine_label"},{"interactive":true,"minzoom":2,"layout":{"text-line-height":1.1,"text-size":{"base":1.1,"stops":[[2,12],[5,20]]},"symbol-spacing":250,"text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line","visibility":"visible","text-field":"{name_en}","text-letter-spacing":0.15,"text-max-width":5},"metadata":{"mapbox:group":"1444856087950.3635"},"maxzoom":8,"filter":["all",["==","$type","LineString"],["in","labelrank",2,3]],"type":"symbol","source":"composite","id":"marine-label-md-ln","paint":{"text-color":"#c8e5f9"},"source-layer":"marine_label"},{"interactive":true,"minzoom":2,"layout":{"visibility":"visible","text-field":"{name_en}","text-max-width":5,"text-letter-spacing":0.15,"text-line-height":1.5,"text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"text-size":{"base":1.1,"stops":[[2,14],[5,20]]}},"metadata":{"mapbox:group":"1444856087950.3635"},"maxzoom":8,"filter":["all",["==","$type","Point"],["in","labelrank",2,3]],"type":"symbol","source":"composite","id":"marine-label-md-pt","paint":{"text-color":"#c8e5f9"},"source-layer":"marine_label"},{"interactive":true,"minzoom":1,"layout":{"visibility":"visible","text-field":"{name_en}","text-max-width":4,"text-letter-spacing":0.25,"text-line-height":1.1,"symbol-placement":"line","text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"text-size":{"base":1,"stops":[[1,14],[4,30]]}},"metadata":{"mapbox:group":"1444856087950.3635"},"maxzoom":4,"filter":["all",["==","$type","LineString"],["==","labelrank",1]],"type":"symbol","source":"composite","id":"marine-label-lg-ln","paint":{"text-color":"#c8e5f9"},"source-layer":"marine_label"},{"interactive":true,"minzoom":1,"layout":{"visibility":"visible","text-field":"{name_en}","text-max-width":4,"text-letter-spacing":0.25,"text-line-height":1.5,"text-font":["DIN Offc Pro Italic","Arial Unicode MS Regular"],"text-size":{"base":1,"stops":[[1,14],[4,30]]}},"metadata":{"mapbox:group":"1444856087950.3635"},"maxzoom":4,"filter":["all",["==","$type","Point"],["==","labelrank",1]],"type":"symbol","source":"composite","id":"marine-label-lg-pt","paint":{"text-color":"#c8e5f9"},"source-layer":"marine_label"},{"interactive":true,"minzoom":3,"layout":{"text-size":{"base":1,"stops":[[6,10],[9,14]]},"text-allow-overlap":false,"text-ignore-placement":false,"text-transform":"uppercase","text-font":["DIN Offc Pro Bold","Arial Unicode MS Bold"],"visibility":"visible","text-field":{"base":1,"stops":[[0,"{abbr}"],[6,"{name_en}"]]},"text-letter-spacing":0.15,"text-max-width":5},"metadata":{"mapbox:group":"1444856151690.9143"},"maxzoom":9,"filter":["<","area",20000],"type":"symbol","source":"composite","id":"state-label-sm","paint":{"text-opacity":1,"text-color":"#242424","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"state_label"},{"interactive":true,"minzoom":3,"layout":{"text-size":{"base":1,"stops":[[5,10],[8,16]]},"text-allow-overlap":false,"text-ignore-placement":false,"text-transform":"uppercase","text-font":["DIN Offc Pro Bold","Arial Unicode MS Bold"],"visibility":"visible","text-field":{"base":1,"stops":[[0,"{abbr}"],[5,"{name_en}"]]},"text-letter-spacing":0.15,"text-max-width":6},"metadata":{"mapbox:group":"1444856151690.9143"},"maxzoom":8,"filter":["all",["<","area",80000],[">=","area",20000]],"type":"symbol","source":"composite","id":"state-label-md","paint":{"text-opacity":1,"text-color":"#242424","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"state_label"},{"interactive":true,"minzoom":3,"layout":{"text-size":{"base":1,"stops":[[4,10],[7,18]]},"text-allow-overlap":false,"text-ignore-placement":false,"text-transform":"uppercase","text-font":["DIN Offc Pro Bold","Arial Unicode MS Bold"],"text-padding":1,"visibility":"visible","text-field":{"base":1,"stops":[[0,"{abbr}"],[4,"{name_en}"]]},"text-letter-spacing":0.15,"text-max-width":6},"metadata":{"mapbox:group":"1444856151690.9143"},"maxzoom":7,"filter":[">=","area",80000],"type":"symbol","source":"composite","id":"state-label-lg","paint":{"text-opacity":1,"text-color":"#242424","text-halo-color":"#ffffff","text-halo-width":1},"source-layer":"state_label"},{"interactive":true,"minzoom":1,"layout":{"text-field":"{name_en}","visibility":"visible","text-max-width":6,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"text-size":{"base":0.9,"stops":[[5,14],[9,22]]}},"metadata":{"mapbox:group":"1444856144497.7825"},"maxzoom":10,"filter":[">=","scalerank",5],"type":"symbol","source":"composite","id":"country-label-sm","paint":{"text-color":"#000000","text-halo-color":{"base":1,"stops":[[2,"rgba(255,255,255,0.75)"],[3,"#ffffff"]]},"text-halo-width":1.25},"source-layer":"country_label"},{"interactive":true,"minzoom":1,"layout":{"text-field":{"base":1,"stops":[[0,"{code}"],[2,"{name_en}"]]},"visibility":"visible","text-max-width":6,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"text-size":{"base":1,"stops":[[3,10],[8,24]]}},"metadata":{"mapbox:group":"1444856144497.7825"},"maxzoom":8,"filter":["in","scalerank",3,4],"type":"symbol","source":"composite","id":"country-label-md","paint":{"text-color":"#000000","text-halo-color":{"base":1,"stops":[[2,"rgba(255,255,255,0.75)"],[3,"#ffffff"]]},"text-halo-width":1.25},"source-layer":"country_label"},{"interactive":true,"minzoom":1,"layout":{"text-field":"{name_en}","visibility":"visible","text-max-width":{"base":1,"stops":[[0,5],[3,6]]},"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"text-size":{"base":1,"stops":[[1,10],[6,24]]}},"metadata":{"mapbox:group":"1444856144497.7825"},"maxzoom":7,"filter":["in","scalerank",1,2],"type":"symbol","source":"composite","id":"country-label-lg","paint":{"text-color":"#000000","text-halo-color":{"base":1,"stops":[[2,"rgba(255,255,255,0.75)"],[3,"#ffffff"]]},"text-halo-width":1.25},"source-layer":"country_label"}],"created":0,"modified":0,"owner":"mapbox","id":"streets-v8","draft":false}')},608:function(e){e.exports=JSON.parse('{"id":"95fa59d0-063e-11e6-8042-ab12df6ec57b","name":"Test route","distance":10110.085,"duration":1307423,"transport":"car","points":[{"lng":-0.018423,"lat":51.473246},{"lng":-0.018819,"lat":51.47334},{"lng":-0.019222,"lat":51.47347},{"lng":-0.021195,"lat":51.474258},{"lng":-0.02127,"lat":51.474269},{"lng":-0.02153,"lat":51.474258},{"lng":-0.021792,"lat":51.474267},{"lng":-0.02278,"lat":51.474391},{"lng":-0.022848,"lat":51.474397},{"lng":-0.023231,"lat":51.474495},{"lng":-0.02381,"lat":51.474575},{"lng":-0.023894,"lat":51.474601},{"lng":-0.024023,"lat":51.474669},{"lng":-0.02403,"lat":51.474703},{"lng":-0.023043,"lat":51.47606},{"lng":-0.022916,"lat":51.476241},{"lng":-0.022945,"lat":51.476266},{"lng":-0.022956,"lat":51.476323},{"lng":-0.022938,"lat":51.476352},{"lng":-0.022826,"lat":51.476395},{"lng":-0.022735,"lat":51.476547},{"lng":-0.022643,"lat":51.47675},{"lng":-0.022609,"lat":51.476909},{"lng":-0.02264,"lat":51.477274},{"lng":-0.02268,"lat":51.477484},{"lng":-0.022651,"lat":51.477568},{"lng":-0.022689,"lat":51.47772},{"lng":-0.022744,"lat":51.477765},{"lng":-0.022877,"lat":51.478097},{"lng":-0.022995,"lat":51.478534},{"lng":-0.023088,"lat":51.479181},{"lng":-0.023154,"lat":51.479924},{"lng":-0.023258,"lat":51.480631},{"lng":-0.023259,"lat":51.480655},{"lng":-0.023441,"lat":51.480799},{"lng":-0.025427,"lat":51.481314},{"lng":-0.026234,"lat":51.481469},{"lng":-0.026906,"lat":51.481631},{"lng":-0.027549,"lat":51.481841},{"lng":-0.028215,"lat":51.482099},{"lng":-0.028799,"lat":51.482368},{"lng":-0.030613,"lat":51.483256},{"lng":-0.030934,"lat":51.48343},{"lng":-0.03196,"lat":51.483904},{"lng":-0.032816,"lat":51.484351},{"lng":-0.033417,"lat":51.484815},{"lng":-0.034224,"lat":51.485473},{"lng":-0.034357,"lat":51.485546},{"lng":-0.034776,"lat":51.485847},{"lng":-0.035498,"lat":51.486412},{"lng":-0.035659,"lat":51.48652},{"lng":-0.036149,"lat":51.48681},{"lng":-0.03734,"lat":51.487373},{"lng":-0.03777,"lat":51.487643},{"lng":-0.040725,"lat":51.489165},{"lng":-0.041983,"lat":51.489913},{"lng":-0.042155,"lat":51.490027},{"lng":-0.042623,"lat":51.489986},{"lng":-0.043008,"lat":51.489998},{"lng":-0.044232,"lat":51.490081},{"lng":-0.044455,"lat":51.490112},{"lng":-0.044551,"lat":51.49017},{"lng":-0.044745,"lat":51.490372},{"lng":-0.044962,"lat":51.490798},{"lng":-0.045236,"lat":51.49143},{"lng":-0.045346,"lat":51.491584},{"lng":-0.045443,"lat":51.491648},{"lng":-0.045584,"lat":51.491708},{"lng":-0.045683,"lat":51.491715},{"lng":-0.046585,"lat":51.491611},{"lng":-0.046808,"lat":51.491574},{"lng":-0.046933,"lat":51.491593},{"lng":-0.047012,"lat":51.49163},{"lng":-0.047071,"lat":51.491674},{"lng":-0.047443,"lat":51.492458},{"lng":-0.048086,"lat":51.493231},{"lng":-0.048438,"lat":51.493773},{"lng":-0.048706,"lat":51.493933},{"lng":-0.04977,"lat":51.494443},{"lng":-0.050322,"lat":51.494729},{"lng":-0.050867,"lat":51.495173},{"lng":-0.051973,"lat":51.496027},{"lng":-0.052216,"lat":51.496151},{"lng":-0.052741,"lat":51.496585},{"lng":-0.053176,"lat":51.49699},{"lng":-0.053394,"lat":51.497114},{"lng":-0.053601,"lat":51.4972},{"lng":-0.053997,"lat":51.497531},{"lng":-0.054954,"lat":51.49826},{"lng":-0.055381,"lat":51.49863},{"lng":-0.055511,"lat":51.498661},{"lng":-0.0561,"lat":51.49889},{"lng":-0.056297,"lat":51.498951},{"lng":-0.05653,"lat":51.498968},{"lng":-0.056659,"lat":51.498961},{"lng":-0.060581,"lat":51.498561},{"lng":-0.061329,"lat":51.49842},{"lng":-0.06499,"lat":51.497959},{"lng":-0.066302,"lat":51.497921},{"lng":-0.067771,"lat":51.498079},{"lng":-0.069142,"lat":51.498386},{"lng":-0.069575,"lat":51.498496},{"lng":-0.070178,"lat":51.498701},{"lng":-0.070751,"lat":51.498964},{"lng":-0.071508,"lat":51.49936},{"lng":-0.072624,"lat":51.500016},{"lng":-0.073239,"lat":51.500198},{"lng":-0.073722,"lat":51.500303},{"lng":-0.074142,"lat":51.500445},{"lng":-0.074242,"lat":51.500465},{"lng":-0.0746,"lat":51.500477},{"lng":-0.074978,"lat":51.500391},{"lng":-0.075698,"lat":51.500159},{"lng":-0.075829,"lat":51.500139},{"lng":-0.075944,"lat":51.500141},{"lng":-0.076079,"lat":51.500182},{"lng":-0.076243,"lat":51.500247},{"lng":-0.078095,"lat":51.501241},{"lng":-0.079893,"lat":51.502148},{"lng":-0.079955,"lat":51.50215},{"lng":-0.080009,"lat":51.502154},{"lng":-0.080785,"lat":51.502033},{"lng":-0.081011,"lat":51.502059},{"lng":-0.081657,"lat":51.502239},{"lng":-0.08248,"lat":51.502405},{"lng":-0.083025,"lat":51.50373},{"lng":-0.083219,"lat":51.504141},{"lng":-0.083336,"lat":51.504542},{"lng":-0.083324,"lat":51.504681},{"lng":-0.084379,"lat":51.505091},{"lng":-0.08567,"lat":51.505639},{"lng":-0.086053,"lat":51.50575},{"lng":-0.086151,"lat":51.505776},{"lng":-0.08665,"lat":51.505879},{"lng":-0.087936,"lat":51.506084},{"lng":-0.088197,"lat":51.506139},{"lng":-0.088367,"lat":51.5062},{"lng":-0.088407,"lat":51.506278},{"lng":-0.088403,"lat":51.506295},{"lng":-0.088271,"lat":51.506523},{"lng":-0.087789,"lat":51.507861},{"lng":-0.087395,"lat":51.508984},{"lng":-0.087069,"lat":51.509901},{"lng":-0.086946,"lat":51.510144},{"lng":-0.086748,"lat":51.510712},{"lng":-0.086733,"lat":51.510746},{"lng":-0.086857,"lat":51.510947},{"lng":-0.088137,"lat":51.512501}],"departureId":"95ed8890-063e-11e6-8042-ab12df6ec57b","arrivalId":"95ee9a00-063e-11e6-8042-ab12df6ec57b"}')},609:function(e){e.exports=JSON.parse('{"type":"FeatureCollection","features":[{"type":"Feature","properties":{"scalerank":2,"name":"Niagara Falls","comment":null,"name_alt":null,"lat_y":43.087653,"long_x":-79.044073,"region":"North America","subregion":null,"featureclass":"waterfall"},"geometry":{"type":"Point","coordinates":[-79.04411780507252,43.08771393436908]}},{"type":"Feature","properties":{"scalerank":2,"name":"Salto Angel","comment":null,"name_alt":"Angel Falls","lat_y":5.686836,"long_x":-62.061848,"region":"South America","subregion":null,"featureclass":"waterfall"},"geometry":{"type":"Point","coordinates":[-62.06181800038502,5.686896063275327]}},{"type":"Feature","properties":{"scalerank":2,"name":"Iguazu Falls","comment":null,"name_alt":null,"lat_y":-25.568265,"long_x":-54.582842,"region":"South America","subregion":null,"featureclass":"waterfall"},"geometry":{"type":"Point","coordinates":[-54.58299719960377,-25.568291925005923]}},{"type":"Feature","properties":{"scalerank":3,"name":"Gees Gwardafuy","comment":null,"name_alt":null,"lat_y":11.812855,"long_x":51.235173,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[51.258313644180184,11.822028799226407]}},{"type":"Feature","properties":{"scalerank":3,"name":"Victoria Falls","comment":null,"name_alt":null,"lat_y":-17.77079,"long_x":25.460133,"region":"Africa","subregion":null,"featureclass":"waterfall"},"geometry":{"type":"Point","coordinates":[25.852793816021233,-17.928033135943423]}},{"type":"Feature","properties":{"scalerank":3,"name":"Wright I.","comment":null,"name_alt":null,"lat_y":-50.959168,"long_x":-72.995002,"region":"Antarctica","subregion":null,"featureclass":"island"},"geometry":{"type":"Point","coordinates":[-116.89262854726002,-74.06670501094342]}},{"type":"Feature","properties":{"scalerank":3,"name":"Grant I.","comment":null,"name_alt":null,"lat_y":-50.959168,"long_x":-72.995002,"region":"Antarctica","subregion":null,"featureclass":"island"},"geometry":{"type":"Point","coordinates":[-131.48540198476002,-74.48272063594342]}},{"type":"Feature","properties":{"scalerank":3,"name":"Newman I.","comment":null,"name_alt":null,"lat_y":-50.959168,"long_x":-72.995002,"region":"Antarctica","subregion":null,"featureclass":"island"},"geometry":{"type":"Point","coordinates":[-145.68681800038502,-75.59185149531842]}},{"type":"Feature","properties":{"scalerank":3,"name":"Dean I.","comment":null,"name_alt":null,"lat_y":-50.959168,"long_x":-72.995002,"region":"Antarctica","subregion":null,"featureclass":"island"},"geometry":{"type":"Point","coordinates":[-127.63438880116627,-74.50066497188092]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cape Canaveral","comment":null,"name_alt":null,"lat_y":28.483713,"long_x":-80.534941,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-80.53625603636821,28.473056814472134]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cape Mendocino","comment":null,"name_alt":null,"lat_y":40.350222,"long_x":-124.323474,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-124.39201745043425,40.44222065537283]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cabo San Lucas","comment":null,"name_alt":null,"lat_y":22.887711,"long_x":-109.969843,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-109.96983801991627,22.887762762494077]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cape Churchill","comment":null,"name_alt":null,"lat_y":58.752014,"long_x":-93.182023,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-93.18211829335377,58.75208161015033]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cape Cod","comment":null,"name_alt":null,"lat_y":41.734867,"long_x":-69.964865,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-70.03687833567446,41.9914589934385]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cape May","comment":null,"name_alt":null,"lat_y":37.2017,"long_x":-75.926791,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-74.95121933164988,38.92969645987068]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cabo de Hornos","comment":null,"name_alt":"Cape Horn","lat_y":-55.862824,"long_x":-67.169425,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-67.16942298085377,-55.86284758906842]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cape of Good Hope","comment":null,"name_alt":null,"lat_y":-34.307311,"long_x":18.441206,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[18.441294792583733,-34.30718352656842]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cape Palmas","comment":null,"name_alt":null,"lat_y":4.373924,"long_x":-7.457356,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-7.457386848041267,4.373968817181577]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cape Verde","comment":null,"name_alt":null,"lat_y":14.732312,"long_x":-17.471776,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-17.471730109760017,14.732489324994077]}},{"type":"Feature","properties":{"scalerank":3,"name":"Cap Bon","comment":null,"name_alt":null,"lat_y":37.073954,"long_x":11.024061,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[11.024180534771233,37.07398102421283]}},{"type":"Feature","properties":{"scalerank":3,"name":"Oceanic pole of inaccessibility","comment":null,"name_alt":null,"lat_y":-48.865032,"long_x":-123.401986,"region":"Seven seas (open ocean)","subregion":"South Pacific Ocean","featureclass":"pole"},"geometry":{"type":"Point","coordinates":[-123.40202796132252,-48.86504485469342]}},{"type":"Feature","properties":{"scalerank":3,"name":"South Magnetic Pole 2005 (est)","comment":null,"name_alt":null,"lat_y":-48.865032,"long_x":-123.401986,"region":"Antarctica","subregion":"Southern Ocean","featureclass":"pole"},"geometry":{"type":"Point","coordinates":[137.85425865977123,-64.51824309688092]}},{"type":"Feature","properties":{"scalerank":3,"name":"North Magnetic Pole 2005 (est)","comment":null,"name_alt":null,"lat_y":-48.865032,"long_x":-123.401986,"region":"Seven seas (open ocean)","subregion":"Arctic Ocean","featureclass":"pole"},"geometry":{"type":"Point","coordinates":[-114.40569007069752,82.71008942265033]}},{"type":"Feature","properties":{"scalerank":4,"name":"Lands End","comment":null,"name_alt":null,"lat_y":50.069677,"long_x":-5.668629,"region":"Europe","subregion":"British Isles","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-5.668629523822517,50.06970856327533]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cape York","comment":null,"name_alt":null,"lat_y":76.218919,"long_x":-68.218612,"region":"North America","subregion":"Greenland","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-68.21861731679127,76.21887848515033]}},{"type":"Feature","properties":{"scalerank":4,"name":"Nunap Isua","comment":null,"name_alt":"Cape Farewell","lat_y":59.862583,"long_x":-43.90088,"region":"North America","subregion":"Greenland","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-43.90080725819752,59.86267731327533]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cape Vohimena","comment":null,"name_alt":null,"lat_y":-25.546355,"long_x":45.158683,"region":"Africa","subregion":"Indian Ocean","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[45.15870201914623,-25.546319268755923]}},{"type":"Feature","properties":{"scalerank":4,"name":"Vavau","comment":null,"name_alt":null,"lat_y":-18.590062,"long_x":-173.976769,"region":"Oceania","subregion":"Polynesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-173.97673499257252,-18.590020440630923]}},{"type":"Feature","properties":{"scalerank":4,"name":"I. de Pascua","comment":null,"name_alt":"Easter I.","lat_y":-27.102117,"long_x":-109.367953,"region":"Oceania","subregion":"Polynesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-109.36790930897877,-27.102227471880923]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cape Agulhas","comment":null,"name_alt":null,"lat_y":-34.801182,"long_x":19.993472,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[19.993418816021233,-34.80108001094342]}},{"type":"Feature","properties":{"scalerank":4,"name":"Plain of Jars","comment":null,"name_alt":null,"lat_y":20.550709,"long_x":101.890532,"region":"Asia","subregion":null,"featureclass":"plain"},"geometry":{"type":"Point","coordinates":[101.89063561289623,20.550909735150327]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cabo Corrientes","comment":null,"name_alt":null,"lat_y":20.409471,"long_x":-105.683581,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-105.67795873874799,20.420365114940253]}},{"type":"Feature","properties":{"scalerank":4,"name":"Pt. Eugenia","comment":null,"name_alt":null,"lat_y":27.861925,"long_x":-115.07629,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-115.04623945046137,27.842887092585283]}},{"type":"Feature","properties":{"scalerank":4,"name":"Point Conception","comment":null,"name_alt":null,"lat_y":34.582313,"long_x":-120.659016,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-120.46360036202867,34.46027592467621]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cape Hatteras","comment":null,"name_alt":null,"lat_y":35.437762,"long_x":-75.450543,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-75.54032952413311,35.24475263812895]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cape Sable","comment":null,"name_alt":null,"lat_y":25.124896,"long_x":-81.090442,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-81.09044348866627,25.124762274212827]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cape Hope","comment":null,"name_alt":null,"lat_y":68.35638,"long_x":-166.815582,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-166.81321268769543,68.35380207543972]}},{"type":"Feature","properties":{"scalerank":4,"name":"Point Barrow","comment":null,"name_alt":null,"lat_y":71.372637,"long_x":-156.615894,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-156.4719492091668,71.40589128763096]}},{"type":"Feature","properties":{"scalerank":4,"name":"Punta Negra","comment":null,"name_alt":null,"lat_y":-5.948875,"long_x":-81.108252,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-81.10832678944752,-5.948663018755923]}},{"type":"Feature","properties":{"scalerank":4,"name":"Punta Lavapi\xe9","comment":null,"name_alt":null,"lat_y":-37.262867,"long_x":-73.606377,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-73.60304396243782,-37.17120002933805]}},{"type":"Feature","properties":{"scalerank":4,"name":"Punta Galera","comment":null,"name_alt":null,"lat_y":0.731221,"long_x":-80.062205,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-80.06212317616627,0.731207586712827]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cap Lopez","comment":null,"name_alt":null,"lat_y":-0.604761,"long_x":8.726423,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[8.727299789450319,-0.615086490513119]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cape Bobaomby","comment":null,"name_alt":null,"lat_y":-11.966598,"long_x":49.262904,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[49.26282799570873,-11.966485284380923]}},{"type":"Feature","properties":{"scalerank":4,"name":"Cap Blanc","comment":null,"name_alt":null,"lat_y":20.822108,"long_x":-17.052856,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-17.052906867572517,20.822088934369077]}},{"type":"Feature","properties":{"scalerank":5,"name":"South West Cape","comment":null,"name_alt":null,"lat_y":-43.510984,"long_x":146.054227,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[146.03379804609568,-43.5404025683706]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Howe","comment":null,"name_alt":null,"lat_y":-37.488775,"long_x":149.95853,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[149.95838463633373,-37.48894622188092]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Otway","comment":null,"name_alt":null,"lat_y":-38.857622,"long_x":143.565403,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[143.537005108191,-38.85472383068997]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Jaffa","comment":null,"name_alt":null,"lat_y":-36.944244,"long_x":139.690866,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[139.68061977964746,-36.95624316107086]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Carnot","comment":null,"name_alt":null,"lat_y":-34.920233,"long_x":135.656027,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[135.65378326897053,-34.93870859313661]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Byron","comment":null,"name_alt":null,"lat_y":-28.658282,"long_x":153.632849,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[153.62799176015545,-28.66197417050363]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Manifold","comment":null,"name_alt":null,"lat_y":-22.702081,"long_x":150.811228,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[150.81116783945873,-22.702080987505923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape York","comment":null,"name_alt":null,"lat_y":-10.710859,"long_x":142.522018,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[142.52173912852123,-10.710747979693423]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Melville","comment":null,"name_alt":null,"lat_y":-14.163629,"long_x":144.506417,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[144.50660240977123,-14.163506768755923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Arnhem","comment":null,"name_alt":null,"lat_y":-12.337984,"long_x":136.952429,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[136.91481885262823,-12.295662864626316]}},{"type":"Feature","properties":{"scalerank":5,"name":"West Cape Howe","comment":null,"name_alt":null,"lat_y":-35.104301,"long_x":117.597011,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[117.59693444102123,-35.10430266719342]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Leeuwin","comment":null,"name_alt":null,"lat_y":-34.297841,"long_x":115.10633,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[115.1280088910596,-34.328007092559645]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Pasley","comment":null,"name_alt":null,"lat_y":-33.929054,"long_x":123.517283,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[123.51722252695873,-33.92888762813092]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Londonderry","comment":null,"name_alt":null,"lat_y":-13.713856,"long_x":126.964514,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[126.94130045687105,-13.74290642667802]}},{"type":"Feature","properties":{"scalerank":5,"name":"Steep Point","comment":null,"name_alt":null,"lat_y":-26.16822,"long_x":113.169959,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[113.14519563289093,-26.157463616878637]}},{"type":"Feature","properties":{"scalerank":5,"name":"North West Cape","comment":null,"name_alt":null,"lat_y":-21.809776,"long_x":114.117534,"region":"Oceania","subregion":"Australia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[114.16010761213809,-21.801474697071743]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo Gracias a Dios","comment":null,"name_alt":null,"lat_y":14.994242,"long_x":-83.15866,"region":"North America","subregion":"Central America","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-83.15874182851002,14.994208074994077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Brewster","comment":null,"name_alt":null,"lat_y":70.150754,"long_x":-22.122616,"region":"North America","subregion":"Greenland","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-22.122731086322517,70.15088532108783]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Morris Jesup","comment":null,"name_alt":null,"lat_y":83.626331,"long_x":-32.491541,"region":"North America","subregion":"Greenland","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-32.49150550038502,83.62628815311908]}},{"type":"Feature","properties":{"scalerank":5,"name":"Grmsey","comment":null,"name_alt":null,"lat_y":66.669359,"long_x":-18.251096,"region":"Europe","subregion":"Iceland","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-18.251088019916267,66.66937897343158]}},{"type":"Feature","properties":{"scalerank":5,"name":"Surtsey","comment":null,"name_alt":null,"lat_y":63.217764,"long_x":-20.434929,"region":"Europe","subregion":"Iceland","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-20.434803840228767,63.21771881718158]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cap Est","comment":null,"name_alt":null,"lat_y":-15.274849,"long_x":50.499889,"region":"Africa","subregion":"Indian Ocean","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[50.49976647227123,-15.274956964068423]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Cretin","comment":null,"name_alt":null,"lat_y":-6.637492,"long_x":147.852392,"region":"Oceania","subregion":"Melanesia","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[147.85242760508373,-6.637261651568423]}},{"type":"Feature","properties":{"scalerank":5,"name":"\xceles Chesterfield","comment":null,"name_alt":null,"lat_y":-19.20447,"long_x":159.95171,"region":"Oceania","subregion":"Melanesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[159.95167076914623,-19.204644464068423]}},{"type":"Feature","properties":{"scalerank":5,"name":"Pagan","comment":null,"name_alt":null,"lat_y":18.119631,"long_x":145.785087,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[145.78492272227123,18.119635321087827]}},{"type":"Feature","properties":{"scalerank":5,"name":"Wake I.","comment":null,"name_alt":null,"lat_y":19.303497,"long_x":166.63626,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[166.63624108164623,19.303595282025327]}},{"type":"Feature","properties":{"scalerank":5,"name":"Tabiteuea","comment":null,"name_alt":null,"lat_y":-1.201405,"long_x":174.755207,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[174.75513756602123,-1.201348565630923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Aranuka","comment":null,"name_alt":null,"lat_y":0.226766,"long_x":173.626286,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[173.62623131602123,0.226752020306577]}},{"type":"Feature","properties":{"scalerank":5,"name":"Nauru","comment":null,"name_alt":null,"lat_y":-0.505856,"long_x":166.930778,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[166.93067467539623,-0.505791925005923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ebon","comment":null,"name_alt":null,"lat_y":4.59977,"long_x":168.736432,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[168.73633873789623,4.599798895306577]}},{"type":"Feature","properties":{"scalerank":5,"name":"Jaluit","comment":null,"name_alt":null,"lat_y":5.964455,"long_x":169.682894,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[169.68299401133373,5.964483953900327]}},{"type":"Feature","properties":{"scalerank":5,"name":"Mili","comment":null,"name_alt":null,"lat_y":6.107334,"long_x":171.725875,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[171.72584069102123,6.107489324994077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Majuro","comment":null,"name_alt":null,"lat_y":7.118009,"long_x":171.159743,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[171.15980065195873,7.117987371869077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ailinglapalap","comment":null,"name_alt":null,"lat_y":7.276392,"long_x":168.596926,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[168.59693444102123,7.276495672650327]}},{"type":"Feature","properties":{"scalerank":5,"name":"Kwajalein","comment":null,"name_alt":null,"lat_y":8.746619,"long_x":167.735072,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[167.73511803477123,8.746710516400327]}},{"type":"Feature","properties":{"scalerank":5,"name":"Rongelap","comment":null,"name_alt":null,"lat_y":11.164329,"long_x":166.869876,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[166.86988365977123,11.164496160931577]}},{"type":"Feature","properties":{"scalerank":5,"name":"Bikini","comment":null,"name_alt":null,"lat_y":11.639231,"long_x":165.550698,"region":"Oceania","subregion":"Micronesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[165.55042565195873,11.639288641400327]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Reinga","comment":null,"name_alt":null,"lat_y":-34.432767,"long_x":172.7285,"region":"Oceania","subregion":"New Zealand","featureclass":"cape"},"geometry":{"type":"Point","coordinates":[172.70558117137455,-34.42039113947056]}},{"type":"Feature","properties":{"scalerank":5,"name":"Kanton","comment":null,"name_alt":null,"lat_y":-2.757106,"long_x":-171.71703,"region":"Oceania","subregion":"Polynesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-171.71703040272877,-2.757134698443423]}},{"type":"Feature","properties":{"scalerank":5,"name":"Tabuaeran","comment":null,"name_alt":"Fanning I.","lat_y":3.866545,"long_x":-159.326781,"region":"Oceania","subregion":"Polynesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-159.32683264882252,3.866705633587827]}},{"type":"Feature","properties":{"scalerank":5,"name":"Malden","comment":null,"name_alt":null,"lat_y":-4.042491,"long_x":-154.983478,"region":"Oceania","subregion":"Polynesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-154.98350989491627,-4.042657159380923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Rarotonga","comment":null,"name_alt":null,"lat_y":-21.201867,"long_x":-159.797637,"region":"Oceania","subregion":"Polynesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-159.79771887929127,-21.201836846880923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Rangiroa","comment":null,"name_alt":null,"lat_y":-15.2046,"long_x":-147.773967,"region":"Oceania","subregion":"Polynesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-147.77403723866627,-15.204766534380923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Funafuti","comment":null,"name_alt":null,"lat_y":-8.491577,"long_x":179.19841,"region":"Oceania","subregion":"Polynesia","featureclass":"island"},"geometry":{"type":"Point","coordinates":[179.19837487070873,-8.491631768755923]}},{"type":"Feature","properties":{"scalerank":5,"name":"St. Croix","comment":null,"name_alt":null,"lat_y":17.762944,"long_x":-64.763088,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-64.76317298085377,17.763006903119077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Grand Cayman","comment":null,"name_alt":null,"lat_y":19.315829,"long_x":-81.271416,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-81.27159583241627,19.315802313275327]}},{"type":"Feature","properties":{"scalerank":5,"name":"San  Salvador","comment":null,"name_alt":null,"lat_y":24.052793,"long_x":-74.492848,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-74.49290930897877,24.052801824994077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Grenada","comment":null,"name_alt":null,"lat_y":12.105978,"long_x":-61.723079,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-61.72319495351002,12.105963446087827]}},{"type":"Feature","properties":{"scalerank":5,"name":"Barbuda","comment":null,"name_alt":null,"lat_y":17.622525,"long_x":-61.789243,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-61.78929602772877,17.622626043744077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Antigua","comment":null,"name_alt":null,"lat_y":17.040441,"long_x":-61.775982,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-61.77592932851002,17.040594793744077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Guadeloupe","comment":null,"name_alt":null,"lat_y":16.180583,"long_x":-61.656947,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-61.65703284413502,16.180670477337827]}},{"type":"Feature","properties":{"scalerank":5,"name":"Dominica","comment":null,"name_alt":null,"lat_y":15.452943,"long_x":-61.352652,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-61.35271155507252,15.452887274212827]}},{"type":"Feature","properties":{"scalerank":5,"name":"Martinique","comment":null,"name_alt":null,"lat_y":14.672462,"long_x":-61.008715,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-61.00883948476002,14.672491766400327]}},{"type":"Feature","properties":{"scalerank":5,"name":"Saint Lucia","comment":null,"name_alt":null,"lat_y":13.918332,"long_x":-60.982225,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-60.98222815663502,13.918280340619077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Saint Vincent","comment":null,"name_alt":null,"lat_y":13.270131,"long_x":-61.207143,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-61.20720374257252,13.270209051556577]}},{"type":"Feature","properties":{"scalerank":5,"name":"Barbados","comment":null,"name_alt":null,"lat_y":13.164326,"long_x":-59.566742,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-59.56682288319752,13.164252020306577]}},{"type":"Feature","properties":{"scalerank":5,"name":"Tobago","comment":null,"name_alt":null,"lat_y":11.259334,"long_x":-60.677992,"region":"South America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-60.67808997304127,11.259283758587827]}},{"type":"Feature","properties":{"scalerank":5,"name":"Margarita","comment":null,"name_alt":null,"lat_y":10.981467,"long_x":-64.051401,"region":"South America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-64.05144202382252,10.981512762494077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Curaao","comment":null,"name_alt":null,"lat_y":12.185355,"long_x":-68.999109,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-68.99919593007252,12.185309149212827]}},{"type":"Feature","properties":{"scalerank":5,"name":"Aruba","comment":null,"name_alt":null,"lat_y":12.502849,"long_x":-69.96488,"region":"North America","subregion":"West Indies","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-69.96501624257252,12.502752996869077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ra\x92s Ban\xe4s","comment":null,"name_alt":null,"lat_y":23.950592,"long_x":35.778059,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[35.77808678477123,23.950628973431577]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ponta das Salinas","comment":null,"name_alt":null,"lat_y":-12.832908,"long_x":12.928991,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[12.968705086077254,-12.855718342716505]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ponta das Palmeirinhas","comment":null,"name_alt":null,"lat_y":-9.071387,"long_x":12.999549,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[13.033811372274608,-9.099938228394153]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo Bojador","comment":null,"name_alt":null,"lat_y":26.157836,"long_x":-14.473111,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-14.473194953510017,26.157965399212827]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Comorin","comment":null,"name_alt":null,"lat_y":8.143554,"long_x":77.471497,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[77.51210506924555,8.085338515340696]}},{"type":"Feature","properties":{"scalerank":5,"name":"Dondra Head","comment":null,"name_alt":null,"lat_y":5.947528,"long_x":80.616321,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[80.59180925571331,5.929580617022318]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Yelizavety","comment":null,"name_alt":null,"lat_y":54.416083,"long_x":142.720445,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[142.72059166758373,54.41620514530658]}},{"type":"Feature","properties":{"scalerank":5,"name":"Pt. Yuzhnyy","comment":null,"name_alt":null,"lat_y":57.733572,"long_x":156.796426,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[156.79664147227123,57.73346588749408]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Sata","comment":null,"name_alt":null,"lat_y":31.026941,"long_x":130.695089,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[130.69520104258373,31.026922918744077]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Aniva","comment":null,"name_alt":null,"lat_y":46.081706,"long_x":143.43487,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[143.43482506602123,46.08179352421283]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Terpeniya","comment":null,"name_alt":null,"lat_y":48.66928,"long_x":144.712582,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[144.71253502695873,48.66937897343158]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Lopatka","comment":null,"name_alt":null,"lat_y":50.914155,"long_x":156.651536,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[156.65162194102123,50.91412994999408]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Ozernoy","comment":null,"name_alt":null,"lat_y":57.7708,"long_x":163.246685,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[163.24683678477123,57.77088043827533]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Olyutorskiy","comment":null,"name_alt":null,"lat_y":59.960807,"long_x":170.31265,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[170.31287682383373,59.96082184452533]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Navarin","comment":null,"name_alt":null,"lat_y":62.327239,"long_x":179.074225,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[179.07422936289623,62.32727692265033]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Lopatka","comment":null,"name_alt":null,"lat_y":71.907853,"long_x":150.066042,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[150.06592858164623,71.90778229374408]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Ince","comment":null,"name_alt":null,"lat_y":42.084312,"long_x":34.983358,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[34.98328698008373,42.08417389530658]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ra\x92s Fartak","comment":null,"name_alt":null,"lat_y":15.677412,"long_x":52.229105,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[52.2389696999939,15.65795249845498]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ras Sharbatat","comment":null,"name_alt":null,"lat_y":18.164534,"long_x":56.56827,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[56.558165806017215,18.166986171245085]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ra\'s al Had","comment":null,"name_alt":null,"lat_y":22.530158,"long_x":59.849134,"region":"Asia","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[59.7995168175437,22.518675327148298]}},{"type":"Feature","properties":{"scalerank":5,"name":"Hachijjima","comment":null,"name_alt":null,"lat_y":33.109796,"long_x":139.804903,"region":"Asia","subregion":null,"featureclass":"island"},"geometry":{"type":"Point","coordinates":[139.80482018320873,33.10980866093158]}},{"type":"Feature","properties":{"scalerank":5,"name":"Nordkapp","comment":null,"name_alt":null,"lat_y":71.18337,"long_x":25.662398,"region":"Europe","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[25.66067519711473,71.15450206702127]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo de S\xe3o Vicentete","comment":null,"name_alt":null,"lat_y":37.038304,"long_x":-8.969391,"region":"Europe","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-8.969410773822517,37.03827545780658]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo Fisterra","comment":null,"name_alt":null,"lat_y":42.952418,"long_x":-9.267837,"region":"Europe","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-9.26996282865152,42.92873605781255]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape San Blas","comment":null,"name_alt":null,"lat_y":29.713967,"long_x":-85.270961,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-85.27092444569752,29.713995672650327]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Sable","comment":null,"name_alt":null,"lat_y":43.469097,"long_x":-65.610769,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-65.61082923085377,43.46900055546283]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Bauld","comment":null,"name_alt":null,"lat_y":51.568576,"long_x":-55.430306,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-55.43028723866627,51.56848786015033]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape Fear","comment":null,"name_alt":null,"lat_y":33.867949,"long_x":-77.990568,"region":"North America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-77.99058997304127,33.86798737186908]}},{"type":"Feature","properties":{"scalerank":5,"name":"I. Guadalupe","comment":null,"name_alt":null,"lat_y":29.052552,"long_x":-118.317465,"region":"Seven seas (open ocean)","subregion":"North Pacific Ocean","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-118.31749426991627,29.052496649212827]}},{"type":"Feature","properties":{"scalerank":5,"name":"Miquelon","comment":null,"name_alt":null,"lat_y":46.929526,"long_x":-56.329884,"region":"North America","subregion":null,"featureclass":"island"},"geometry":{"type":"Point","coordinates":[-56.32988440663502,46.92938873905658]}},{"type":"Feature","properties":{"scalerank":5,"name":"I. Robinson Crusoe","comment":null,"name_alt":null,"lat_y":-33.589852,"long_x":-78.872522,"region":"Seven seas (open ocean)","subregion":"South Pacific Ocean","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-78.87254798085377,-33.58965422969342]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo Orange","comment":null,"name_alt":null,"lat_y":4.125735,"long_x":-51.242144,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-51.26287766987179,4.135614177285231]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo de Santa Marta Grande","comment":null,"name_alt":null,"lat_y":-28.558078,"long_x":-48.735526,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-48.80338037734664,-28.57198267323537]}},{"type":"Feature","properties":{"scalerank":5,"name":"Punta del Este","comment":null,"name_alt":null,"lat_y":-34.975503,"long_x":-54.933154,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-54.94628769070382,-34.96658679840526]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo San Antonio","comment":null,"name_alt":null,"lat_y":-36.381052,"long_x":-56.655377,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-56.716792100626165,-36.40959917438929]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo Corrientes","comment":null,"name_alt":null,"lat_y":-38.135985,"long_x":-57.546212,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-57.56252349612641,-38.066376942128464]}},{"type":"Feature","properties":{"scalerank":5,"name":"Punta Rasa","comment":null,"name_alt":null,"lat_y":-40.834718,"long_x":-62.282201,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-62.25911745789756,-40.72626411656719]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo Dos Bah\xedas","comment":null,"name_alt":null,"lat_y":-44.9887,"long_x":-65.615952,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-65.5438334451688,-44.89439847091873]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo Delgado","comment":null,"name_alt":null,"lat_y":-10.670103,"long_x":40.624309,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[40.62440026133373,-10.670098565630923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ponta da Barra","comment":null,"name_alt":null,"lat_y":-23.829888,"long_x":35.515696,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[35.51563561289623,-23.830010675005923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ponta S\xe3o Sebastio","comment":null,"name_alt":null,"lat_y":-22.118899,"long_x":35.480417,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[35.48023522227123,-22.118829034380923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ras Cantin","comment":null,"name_alt":null,"lat_y":32.581636,"long_x":-9.273918,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-9.273915168353767,32.58161041874408]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ra\x92s Kasr","comment":null,"name_alt":null,"lat_y":18.076817,"long_x":38.573746,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[38.58027735871919,18.075167704493374]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ponta de Jericoacoara","comment":null,"name_alt":null,"lat_y":-2.85044,"long_x":-40.067208,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-39.991649927946355,-2.851822991583529]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo de S\xe3o Roque","comment":null,"name_alt":null,"lat_y":-5.193476,"long_x":-35.447654,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-35.50994900651512,-5.156866121305913]}},{"type":"Feature","properties":{"scalerank":5,"name":"Ponta da Baleia","comment":null,"name_alt":null,"lat_y":-17.710136,"long_x":-39.157619,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-39.14557867836578,-17.678753845220847]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo de S\xe3o Tom\xe9","comment":null,"name_alt":null,"lat_y":-21.996382,"long_x":-41.009692,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-40.98763990313761,-21.971754611783773]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo Frio","comment":null,"name_alt":null,"lat_y":-22.869501,"long_x":-41.962188,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-41.89015627474056,-22.759730815669258]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo San Diego","comment":null,"name_alt":null,"lat_y":-54.6406,"long_x":-65.21365,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-65.21361243397877,-54.64067962031842]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cabo Tres Puntas","comment":null,"name_alt":null,"lat_y":-47.237629,"long_x":-65.774707,"region":"South America","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[-65.74439816328368,-47.328778975372465]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cap Saint Andr\xe9","comment":null,"name_alt":null,"lat_y":-16.174457,"long_x":44.467405,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[44.46729576914623,-16.174493096880923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape St. Lucia","comment":null,"name_alt":null,"lat_y":-28.552694,"long_x":32.367221,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[32.36732018320873,-28.552666925005923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Cape St. Francis","comment":null,"name_alt":null,"lat_y":-34.171766,"long_x":24.817688,"region":"Africa","subregion":null,"featureclass":"cape"},"geometry":{"type":"Point","coordinates":[24.84143613032799,-34.18861022316314]}},{"type":"Feature","properties":{"scalerank":5,"name":"Minamitori-shima","comment":null,"name_alt":"Marcus I.","lat_y":24.319813,"long_x":153.958899,"region":"Seven seas (open ocean)","subregion":"North Pacific Ocean","featureclass":"island"},"geometry":{"type":"Point","coordinates":[153.95887291758373,24.319769598431577]}},{"type":"Feature","properties":{"scalerank":5,"name":"Is. Martin Vaz","comment":null,"name_alt":null,"lat_y":-20.559422,"long_x":-29.338439,"region":"Seven seas (open ocean)","subregion":"Southern Atlantic Ocean","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-29.338429328510017,-20.559502862505923]}},{"type":"Feature","properties":{"scalerank":5,"name":"Rockall","comment":null,"name_alt":null,"lat_y":58.163524,"long_x":-12.408715,"region":"Seven seas (open ocean)","subregion":"North Atlantic Ocean","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-12.408741828510017,58.16339752811908]}},{"type":"Feature","properties":{"scalerank":5,"name":"I. de Cozumel","comment":null,"name_alt":null,"lat_y":20.444687,"long_x":-86.880555,"region":"North America","subregion":null,"featureclass":"island"},"geometry":{"type":"Point","coordinates":[-86.88060462147877,20.444708563275327]}},{"type":"Feature","properties":{"scalerank":5,"name":"Bermuda Islands","comment":null,"name_alt":null,"lat_y":32.317339,"long_x":-64.742895,"region":"Seven seas (open ocean)","subregion":"North Atlantic Ocean","featureclass":"island"},"geometry":{"type":"Point","coordinates":[-64.74290930897877,32.31726715702533]}}]}')},610:function(e){e.exports=JSON.parse('[{"county":"KENSINGTON AND CHELSEA","numberOfHouses":248,"averagePrice":1701187,"minPrice":10000,"maxPrice":29000000,"latlng":[-0.1917,51.5009],"priceIndicator":3.8941863739060967},{"county":"BRENT","numberOfHouses":358,"averagePrice":659674,"minPrice":32180,"maxPrice":19000000,"latlng":[-0.3023,51.5531],"priceIndicator":1.5100594479149736},{"county":"GREENWICH","numberOfHouses":388,"averagePrice":497237,"minPrice":14500,"maxPrice":12005000,"latlng":[-0.0045,51.4821],"priceIndicator":1.1382249864370853},{"county":"REDBRIDGE","numberOfHouses":353,"averagePrice":491970,"minPrice":17000,"maxPrice":12270000,"latlng":[0.07,51.56],"priceIndicator":1.126168299176153},{"county":"BROMLEY","numberOfHouses":522,"averagePrice":512047,"minPrice":12000,"maxPrice":6000000,"latlng":[0.0148,51.4028],"priceIndicator":1.1721265505787988},{"county":"KINGSTON UPON THAMES","numberOfHouses":263,"averagePrice":627576,"minPrice":23000,"maxPrice":4870000,"latlng":[-0.3063,51.4096],"priceIndicator":1.4365839309790707},{"county":"TOWER HAMLETS","numberOfHouses":400,"averagePrice":625270,"minPrice":15500,"maxPrice":23000000,"latlng":[-0.0569,51.5203],"priceIndicator":1.4313052674469444},{"county":"LAMBETH","numberOfHouses":530,"averagePrice":576100,"minPrice":18500,"maxPrice":2250000,"latlng":[-0.1173,51.5013],"priceIndicator":1.3187502432168259},{"county":"HACKNEY","numberOfHouses":282,"averagePrice":631662,"minPrice":12000,"maxPrice":4950000,"latlng":[-0.0494,51.5432],"priceIndicator":1.4459371916869062},{"county":"ISLINGTON","numberOfHouses":221,"averagePrice":914474,"minPrice":10000,"maxPrice":17040000,"latlng":[-0.0999,51.5384],"priceIndicator":2.0933220099209575},{"county":"HAMMERSMITH AND FULHAM","numberOfHouses":263,"averagePrice":969879,"minPrice":29500,"maxPrice":4250000,"latlng":[-0.2288,51.4938],"priceIndicator":2.220149569763742},{"county":"CAMDEN","numberOfHouses":273,"averagePrice":1389250,"minPrice":12000,"maxPrice":36061992,"latlng":[-0.1433,51.5406],"priceIndicator":3.180131531659391},{"county":"HARROW","numberOfHouses":268,"averagePrice":785404,"minPrice":20000,"maxPrice":37550000,"latlng":[-0.3375,51.5811],"priceIndicator":1.7978679326913172},{"county":"SOUTHWARK","numberOfHouses":421,"averagePrice":774566,"minPrice":15000,"maxPrice":15000000,"latlng":[-0.1035,51.5029],"priceIndicator":1.7730586719102306},{"county":"BARNET","numberOfHouses":455,"averagePrice":713198,"minPrice":10000,"maxPrice":16600000,"latlng":[-0.2,51.65],"priceIndicator":1.632581211528821},{"county":"LEWISHAM","numberOfHouses":456,"averagePrice":446420,"minPrice":10450,"maxPrice":1915000,"latlng":[-0.0101,51.4624],"priceIndicator":1.0218998152696674},{"county":"EALING","numberOfHouses":337,"averagePrice":631723,"minPrice":13500,"maxPrice":19000000,"latlng":[-0.3052,51.5127],"priceIndicator":1.446076826758658},{"county":"RICHMOND UPON THAMES","numberOfHouses":297,"averagePrice":851700,"minPrice":15000,"maxPrice":9850000,"latlng":[-0.3021,51.4569],"priceIndicator":1.949626075590645},{"county":"HARINGEY","numberOfHouses":227,"averagePrice":657624,"minPrice":10000,"maxPrice":2650000,"latlng":[-0.0833,51.5833],"priceIndicator":1.5053667938642976},{"county":"CROYDON","numberOfHouses":561,"averagePrice":409662,"minPrice":10000,"maxPrice":3400000,"latlng":[-0.102,51.3713],"priceIndicator":0.9377570944917398},{"county":"HAVERING","numberOfHouses":383,"averagePrice":370460,"minPrice":17900,"maxPrice":2500000,"latlng":[0.1861,51.6156],"priceIndicator":0.8480198144455915},{"county":"SUTTON","numberOfHouses":315,"averagePrice":400994,"minPrice":10000,"maxPrice":2000000,"latlng":[-0.1907,51.3604],"priceIndicator":0.9179151797057592},{"county":"HILLINGDON","numberOfHouses":383,"averagePrice":683689,"minPrice":25000,"maxPrice":34700000,"latlng":[-0.4533,51.5326],"priceIndicator":1.5650321732939914},{"county":"WANDSWORTH","numberOfHouses":552,"averagePrice":890353,"minPrice":10000,"maxPrice":16000000,"latlng":[-0.1933,51.457],"priceIndicator":2.038106639991027},{"county":"CITY OF WESTMINSTER","numberOfHouses":387,"averagePrice":2184265,"minPrice":10000,"maxPrice":40250000,"latlng":[-0.1371,51.4973],"priceIndicator":5},{"county":"BARKING AND DAGENHAM","numberOfHouses":244,"averagePrice":343405,"minPrice":110000,"maxPrice":5536000,"latlng":[0.0833,51.5333],"priceIndicator":0.7860882264743518},{"county":"NEWHAM","numberOfHouses":477,"averagePrice":445765,"minPrice":12500,"maxPrice":9135714,"latlng":[-0.0057,51.5398],"priceIndicator":1.020400455072988},{"county":"HOUNSLOW","numberOfHouses":244,"averagePrice":533088,"minPrice":15000,"maxPrice":6400000,"latlng":[-0.3613,51.4686],"priceIndicator":1.2202914939350307},{"county":"WALTHAM FOREST","numberOfHouses":335,"averagePrice":468884,"minPrice":14000,"maxPrice":4930000,"latlng":[-0.0197,51.5816],"priceIndicator":1.0733221472669296},{"county":"BEXLEY","numberOfHouses":432,"averagePrice":358218,"minPrice":11000,"maxPrice":1900000,"latlng":[0.1505,51.4417],"priceIndicator":0.8199966579146761},{"county":"MERTON","numberOfHouses":310,"averagePrice":707758,"minPrice":13000,"maxPrice":30300000,"latlng":[-0.1881,51.4144],"priceIndicator":1.6201285100480025},{"county":"ENFIELD","numberOfHouses":310,"averagePrice":481882,"minPrice":15000,"maxPrice":7670000,"latlng":[-0.0832,51.6517],"priceIndicator":1.1030758630477528},{"county":"CITY OF LONDON","numberOfHouses":61,"averagePrice":5598625,"minPrice":25000,"maxPrice":179000000,"latlng":[-0.09449,51.51916],"priceIndicator":5}]')},631:function(e,t,n){},632:function(e,t,n){"use strict";n.r(t);var o=n(1),a=n(97),r=n(17),i=n(8),l=n(9),s=n(11),c=n(10),p=n(12),u=n(5),m=n(6),d='\nconst Map = ReactMapboxGl({ accessToken });\nconst zoom = [8];\n\nrender(\n  <Map\n    style="mapbox://styles/mapbox/streets-v8"\n    zoom={zoom}\n    containerStyle={{\n      height: "100%",\n      width: "500px"\n    }}>\n      <Layer\n        type="symbol"\n        id="marker"\n        layout={{ "icon-image": "marker-15" }}>\n        <Feature coordinates={[-0.481747846041145, 51.3233379650232]}/>\n      </Layer>\n  </Map>\n);\n'.trim(),y=n(13),f=n(4),g=function(){return(g=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},b={onResize:"resize",onDblClick:"dblclick",onClick:"click",onMouseMove:"mousemove",onMouseOut:"mouseout",onMoveStart:"movestart",onMove:"move",onMoveEnd:"moveend",onMouseUp:"mouseup",onMouseDown:"mousedown",onDragStart:"dragstart",onDrag:"drag",onDragEnd:"dragend",onZoomStart:"zoomstart",onZoom:"zoom",onZoomEnd:"zoomend",onPitch:"pitch",onPitchStart:"pitchstart",onPitchEnd:"pitchend",onWebGlContextLost:"webglcontextlost",onWebGlContextRestored:"webglcontextrestored",onRemove:"remove",onContextMenu:"contextmenu",onRender:"render",onError:"error",onSourceData:"sourcedata",onDataLoading:"dataloading",onStyleDataLoading:"styledataloading",onStyleImageMissing:"styleimagemissing",onTouchCancel:"touchcancel",onData:"data",onSourceDataLoading:"sourcedataloading",onTouchMove:"touchmove",onTouchEnd:"touchend",onTouchStart:"touchstart",onStyleData:"styledata",onBoxZoomStart:"boxzoomstart",onBoxZoomEnd:"boxzoomend",onBoxZoomCancel:"boxzoomcancel",onRotateStart:"rotatestart",onRotate:"rotate",onRotateEnd:"rotateend"},h=function(e,t,n){return Object.keys(e).reduce((function(o,a){var r=t[a];if(r){var i=function(e){r(n,e)};n.on(e[a],i),o[a]=i}return o}),{})},x=function(){return(x=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},v=f.createContext(void 0);function _(e){return function(t){return f.createElement(v.Consumer,null,(function(n){return f.createElement(e,x({map:n},t))}))}}var S=n(105),w=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),j=function(){return(j=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},k=n(58),P=[11],C=[-.2416815,51.5285582],O=function(e){var t,o=e.accessToken,a=e.apiUrl,r=e.minZoom,i=void 0===r?0:r,l=e.maxZoom,s=void 0===l?20:l,c=e.hash,p=void 0!==c&&c,u=e.preserveDrawingBuffer,m=void 0!==u&&u,d=e.scrollZoom,x=void 0===d||d,_=e.interactive,O=void 0===_||_,M=e.dragRotate,E=void 0===M||M,L=e.pitchWithRotate,A=void 0===L||L,I=e.attributionControl,z=void 0===I||I,F=e.customAttribution,D=e.logoPosition,R=void 0===D?"bottom-left":D,N=e.renderWorldCopies,T=void 0===N||N,B=e.trackResize,G=void 0===B||B,H=e.touchZoomRotate,U=void 0===H||H,W=e.doubleClickZoom,Z=void 0===W||W,J=e.keyboard,q=void 0===J||J,K=e.dragPan,$=void 0===K||K,Y=e.boxZoom,V=void 0===Y||Y,X=e.refreshExpiredTiles,Q=void 0===X||X,ee=e.failIfMajorPerformanceCaveat,te=void 0!==ee&&ee,ne=e.bearingSnap,oe=void 0===ne?7:ne,ae=e.injectCSS,re=void 0===ae||ae,ie=e.antialias,le=void 0!==ie&&ie,se=e.transformRequest;return re&&n(141),(t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={map:void 0,ready:!1},t.listeners={},t._isMounted=!0,t.calcCenter=function(e){return[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2]},t.setRef=function(e){t.container=e},t}return w(t,e),t.prototype.componentDidMount=function(){var e=this,t=this.props,n=t.style,r=t.onStyleLoad,l=t.center,c=t.pitch,u=t.zoom,d=t.fitBounds,f=t.fitBoundsOptions,g=t.bearing,v=t.maxBounds;if(y.accessToken=o,a&&(y.config.API_URL=a),!Array.isArray(u))throw new Error("zoom need to be an array type of length 1 for reliable update");var _={preserveDrawingBuffer:m,hash:p,zoom:u[0],minZoom:i,maxZoom:s,maxBounds:v,container:this.container,center:d&&l===C?this.calcCenter(d):l,style:n,scrollZoom:x,attributionControl:z,customAttribution:F,interactive:O,dragRotate:E,pitchWithRotate:A,renderWorldCopies:T,trackResize:G,touchZoomRotate:U,doubleClickZoom:Z,keyboard:q,dragPan:$,boxZoom:V,refreshExpiredTiles:Q,logoPosition:R,bearingSnap:oe,failIfMajorPerformanceCaveat:te,antialias:le,transformRequest:se};if(g){if(!Array.isArray(g))throw new Error("bearing need to be an array type of length 1 for reliable update");_.bearing=g[0]}if(c){if(!Array.isArray(c))throw new Error("pitch need to be an array type of length 1 for reliable update");_.pitch=c[0]}var S=new y.Map(_);this.setState({map:S}),d&&S.fitBounds(d,f),S.on("load",(function(t){e._isMounted&&e.setState({ready:!0}),r&&r(S,t)})),this.listeners=h(b,this.props,S)},t.prototype.componentWillUnmount=function(){var e=this.state.map;this._isMounted=!1,e&&e.remove()},t.prototype.UNSAFE_componentWillReceiveProps=function(e){var t=this.state.map;if(!t)return null;this.listeners=function(e,t,n){Object.keys(b).filter((function(n){return e[n]&&"function"!==typeof t[n]})).forEach((function(t){n.off(b[t],e[t]),delete e[t]}));var o=Object.keys(b).filter((function(n){return!e[n]&&"function"===typeof t[n]})).reduce((function(e,t){return e[t]=b[t],e}),{}),a=h(o,t,n);return g({},e,a)}(this.listeners,e,t);var n=t.getCenter(),o=t.getZoom(),a=t.getBearing(),r=t.getPitch(),i=this.props.zoom!==e.zoom&&(e.zoom&&e.zoom[0])!==o,l=this.props.center!==e.center&&((e.center&&e.center[0])!==n.lng||(e.center&&e.center[1])!==n.lat),s=this.props.bearing!==e.bearing&&(e.bearing&&e.bearing[0])!==a,c=this.props.pitch!==e.pitch&&(e.pitch&&e.pitch[0])!==r;e.maxBounds&&(this.props.maxBounds!==e.maxBounds&&t.setMaxBounds(e.maxBounds));if(e.fitBounds){var p=this.props.fitBounds;!(p!==e.fitBounds||e.fitBounds.length!==(p&&p.length)||!!p.filter((function(t,n){var o=e.fitBounds&&e.fitBounds[n];return t[0]!==(o&&o[0])||t[1]!==(o&&o[1])}))[0])&&k(this.props.fitBoundsOptions,e.fitBoundsOptions)||t.fitBounds(e.fitBounds,e.fitBoundsOptions)}if(i||l||s||c){var u=e.movingMethod||"flyTo",m=e.flyToOptions,d=e.animationOptions;t[u](j({},d,m,{zoom:i&&e.zoom?e.zoom[0]:o,center:l?e.center:n,bearing:s?e.bearing:a,pitch:c?e.pitch:r}))}return k(this.props.style,e.style)||t.setStyle(e.style),null},t.prototype.render=function(){var e=this.props,t=e.containerStyle,n=e.className,o=e.children,a=e.renderChildrenInPortal,r=this.state,i=r.ready,l=r.map;if(a){var s=i&&l&&"function"===typeof l.getCanvasContainer?l.getCanvasContainer():void 0;return f.createElement(v.Provider,{value:l},f.createElement("div",{ref:this.setRef,className:n,style:j({},t)},i&&s&&Object(S.createPortal)(o,s)))}return f.createElement(v.Provider,{value:l},f.createElement("div",{ref:this.setRef,className:n,style:j({},t)},i&&o))},t}(f.Component)).defaultProps={onStyleLoad:function(e,t){return null},center:C,zoom:P,bearing:0,movingMethod:"flyTo",pitch:0,containerStyle:{textAlign:"left"}},t},M=function(e,t){var n={};return Array.from(new Set(Object.keys(e).concat(Object.keys(t)))).map((function(o){e[o]!==t[o]&&(n[o]=t[o])})),n},E=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),L=function(){return(L=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},A=n(58),I={mousemove:"onMouseMove",mouseenter:"onMouseEnter",mouseleave:"onMouseLeave",mousedown:"onMouseDown",mouseup:"onMouseUp",click:"onClick"},z=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.source=L({type:"geojson"},t.props.geoJSONSourceOptions,{data:{type:"FeatureCollection",features:[]}}),t.geometry=function(e){switch(t.props.type){case"symbol":case"circle":return{type:"Point",coordinates:e};case"fill":return e.length>1?{type:"MultiPolygon",coordinates:e}:{type:"Polygon",coordinates:e};case"line":return{type:"LineString",coordinates:e};default:return{type:"Point",coordinates:e}}},t.makeFeature=function(e,n){return{type:"Feature",geometry:t.geometry(e.coordinates),properties:L({},e.properties,{id:n})}},t.initialize=function(){var e=t.props,n=e.type,o=e.layout,a=e.paint,r=e.sourceId,i=e.before,l=e.images,s=e.id,c=e.metadata,p=e.sourceLayer,u=e.minZoom,m=e.maxZoom,d=e.filter,y=t.props.map,f={id:s,source:r||s,type:n,layout:o,paint:a,metadata:c};(p&&(f["source-layer"]=p),u&&(f.minzoom=u),m&&(f.maxzoom=m),d&&(f.filter=d),l)&&(Array.isArray(l[0])?l:[l]).filter((function(e){return!y.hasImage(e[0])})).forEach((function(e){y.addImage(e[0],e[1],e[2])}));r||y.getSource(s)||y.addSource(s,t.source),y.getLayer(s)||y.addLayer(f,i),Object.entries(I).forEach((function(e){var n=e[0],o=e[1],a=t.props[o];a&&y.on(n,s,a)}))},t.onStyleDataChange=function(){t.props.map.getLayer(t.props.id)||(t.initialize(),t.forceUpdate())},t.getChildren=function(){var e=t.props.children;return e?Array.isArray(e)?e.reduce((function(e,t){return e.concat(t)}),[]):[e]:[]},t}return E(t,e),t.prototype.UNSAFE_componentWillMount=function(){var e=this.props.map;this.initialize(),e.on("styledata",this.onStyleDataChange)},t.prototype.componentWillUnmount=function(){var e=this,t=this.props.map,n=this.props,o=n.images,a=n.id;t&&t.getStyle()&&(t.off("styledata",this.onStyleDataChange),Object.entries(I).forEach((function(n){var o=n[0],r=n[1],i=e.props[r];i&&t.off(o,a,i)})),t.getLayer(a)&&t.removeLayer(a),this.props.sourceId||t.removeSource(a),o&&(Array.isArray(o[0])?o:[o]).map((function(e){var t=e[0];e.slice(1);return t})).forEach(t.removeImage.bind(t)))},t.prototype.UNSAFE_componentWillReceiveProps=function(e){var t=this,n=this.props,o=n.paint,a=n.layout,r=n.before,i=n.filter,l=n.id,s=n.minZoom,c=n.maxZoom,p=this.props.map;if(!A(e.paint,o)){var u=M(o,e.paint);Object.keys(u).forEach((function(e){p.setPaintProperty(l,e,u[e])}))}if(!A(e.layout,a)){var m=M(a,e.layout);Object.keys(m).forEach((function(e){p.setLayoutProperty(l,e,m[e])}))}e.filter&&i&&!A(e.filter,i)&&p.setFilter(l,e.filter||[]),r!==e.before&&p.moveLayer(l,e.before),s===e.minZoom&&c===e.maxZoom||p.setLayerZoomRange(l,e.minZoom,e.maxZoom),Object.entries(I).forEach((function(n){var o=n[0],a=n[1],r=t.props[a],i=e[a];r!==i&&(r&&p.off(o,l,r),i&&p.on(o,l,i))}))},t.prototype.render=function(){var e=this,t=this.props.map,n=this.props,o=n.sourceId,a=n.draggedChildren,r=this.getChildren();if(a){var i=a.map((function(e){return e.key}));r=r.map((function(e){var t=i.indexOf(e.key);return-1!==t?a[t]:e}))}var l=r.map((function(t,n){var o=t.props;return e.makeFeature(o,n)})).filter(Boolean),s=t.getSource(o||this.props.id);return s&&!o&&s.setData&&s.setData({type:"FeatureCollection",features:l}),null},t.defaultProps={type:"symbol",layout:{},paint:{}},t}(f.Component),F=0,D=function(){return F+=1},R=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),N=function(){return(N=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};var T=function(e){return function(t){function n(){var e=null!==t&&t.apply(this,arguments)||this;return e.hover=[],e.draggedChildren=void 0,e.id=e.props.id||"layer-"+D(),e.getChildren=function(){return[].concat(e.props.children).filter((function(e){return"undefined"!==typeof e}))},e.getChildFromId=function(e,t){return e[t]},e.areFeaturesDraggable=function(t,n){return void 0===n&&(n=e.hover),!!n.map((function(n){return!!e.getChildFromId(t,n)&&e.getChildFromId(t,n).props.draggable})).filter(Boolean).length},e.onClick=function(t){var n=t.features,o=e.getChildren(),a=e.props.map;n&&n.forEach((function(n){var r=n.properties.id;if(o){var i=e.getChildFromId(o,r),l=i&&i.props.onClick;l&&l(N({},t,{feature:n,map:a}))}}))},e.onMouseEnter=function(t){var n=e.getChildren(),o=e.props.map;e.hover=[],t.features.forEach((function(a){var r=a.properties.id,i=e.getChildFromId(n,r);e.hover.push(r);var l=i&&i.props.onMouseEnter;l&&l(N({},t,{feature:a,map:o}))})),e.areFeaturesDraggable(n)&&o.dragPan.disable()},e.onMouseLeave=function(t){var n=e.getChildren(),o=e.props.map;e.areFeaturesDraggable(n)&&o.dragPan.enable(),e.hover.forEach((function(a){var r=e.getChildFromId(n,a),i=r&&r.props.onMouseLeave;i&&i(N({},t,{map:o}))})),e.draggedChildren||(e.hover=[])},e.onMouseDown=function(){e.hover.length&&e.onFeatureDown("mousedown")},e.onTouchStart=function(t){e.hover=t.features.map((function(e){return e.properties.id})),e.hover.length&&e.onFeatureDown("touchstart")},e.onFeatureDown=function(t){var n="mousedown"===t?"mousemove":"touchmove",o="mousedown"===t?"mouseup":"touchend",a=e.props.map;a.once(n,e.onFeatureDragStart),a.on(n,e.onFeatureDrag),a.once(o,(function(t){a.off(n,e.onFeatureDragStart),a.off(n,e.onFeatureDrag),e.onFeatureDragEnd(t)}))},e.onFeatureDragStart=function(t){var n=e.props.map,o=e.getChildren();e.hover.forEach((function(a){var r=e.getChildFromId(o,a);if(!r||r.props.draggable){var i=r&&r.props.onDragStart;i&&i(N({},t,{map:n}))}}))},e.onFeatureDrag=function(t){var n=e.getChildren(),o=e.props.map,a=t.lngLat,r=a.lng,i=a.lat;e.draggedChildren=[],e.hover.forEach((function(a){var l=e.getChildFromId(n,a),s=l&&l.props.onDrag;l&&l.props.draggable&&(e.draggedChildren.push(f.cloneElement(l,{coordinates:[r,i]})),s&&s(N({},t,{map:o})))})),e.forceUpdate()},e.onFeatureDragEnd=function(t){var n=e.props.map,o=e.getChildren();e.hover.forEach((function(a){var r=e.getChildFromId(o,a),i=r&&r.props.onDragEnd;i&&r.props.draggable&&e.draggedChildren&&i(N({},t,{map:n}))})),e.draggedChildren=void 0},e}return R(n,t),n.prototype.UNSAFE_componentWillMount=function(){var e=this.props.map;e.on("click",this.id,this.onClick),e.on("mouseenter",this.id,this.onMouseEnter),e.on("mouseleave",this.id,this.onMouseLeave),e.on("mousedown",this.id,this.onMouseDown),e.on("touchstart",this.id,this.onTouchStart)},n.prototype.componentWillUnmount=function(){var e=this.props.map;e.off("click",this.onClick),e.off("mouseenter",this.onMouseEnter),e.off("mouseleave",this.onMouseLeave),e.off("mousedown",this.onMouseDown),e.off("touchstart",this.onTouchStart)},n.prototype.render=function(){return f.createElement(e,N({},this.props,{id:this.id,map:this.props.map,draggedChildren:this.draggedChildren}))},n}(f.Component)},B=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),G=function(){return(G=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},H=n(58),U=["symbol","line","fill","fill-extrusion","circle"],W=function(e){return e.replace(/(?:^\w|[A-Z]|\b\w)/g,(function(e,t){return 0===t?e.toLowerCase():e.toUpperCase()})).replace(/[\s+]|-/g,"")},Z={mousemove:"OnMouseMove",mouseenter:"OnMouseEnter",mouseleave:"OnMouseLeave",mousedown:"OnMouseDown",mouseup:"OnMouseUp",click:"OnClick"},J=_(function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.id=t.props.id||"geojson-"+D(),t.source=G({type:"geojson"},t.props.sourceOptions,{data:t.props.data}),t.layerIds=[],t.buildLayerId=function(e){return t.id+"-"+e},t.createLayer=function(e){var n=t.props,o=n.before,a=n.layerOptions,r=n.map,i=t.buildLayerId(e);t.layerIds.push(i);var l=t.props[W(e)+"Paint"]||{},s=Object.keys(l).length?"visible":"none",c=t.props[W(e)+"Layout"]||{visibility:s};r.addLayer(G({id:i,source:t.id,type:e,paint:l,layout:c},a),o),t.mapLayerMouseHandlers(e)},t.mapLayerMouseHandlers=function(e){var n=t.props.map,o=t.buildLayerId(e);Object.keys(Z).forEach((function(a){var r=t.props[""+W(e)+Z[a]]||null;r&&n.on(a,o,r)}))},t.onStyleDataChange=function(){t.props.map.getSource(t.id)||(t.unbind(),t.initialize(),t.forceUpdate())},t.isGeoJSONSource=function(e){return!!e&&"function"===typeof e.setData},t}return B(t,e),t.prototype.initialize=function(){this.props.map.addSource(this.id,this.source),this.createLayer("symbol"),this.createLayer("line"),this.createLayer("fill"),this.createLayer("fill-extrusion"),this.createLayer("circle")},t.prototype.unbind=function(){var e=this,t=this.props.map;if(t.getSource(this.id)){var n=t.getStyle().layers;n&&n.filter((function(t){return t.source===e.id})).forEach((function(e){return t.removeLayer(e.id)})),t.removeSource(this.id)}U.forEach((function(n){Object.keys(Z).forEach((function(o){var a=W(n)+Z[o];e.props[a]&&t.off(o,e.buildLayerId(n),e.props[a])}))})),this.layerIds.forEach((function(e){t.getLayer(e)&&t.removeLayer(e)}))},t.prototype.UNSAFE_componentWillMount=function(){var e=this.props.map;this.initialize(),e.on("styledata",this.onStyleDataChange)},t.prototype.componentWillUnmount=function(){var e=this.props.map;e&&e.getStyle()&&(e.off("styledata",this.onStyleDataChange),this.unbind())},t.prototype.UNSAFE_componentWillReceiveProps=function(e){var t=this,n=this.props,o=n.data,a=n.before,r=n.layerOptions,i=n.map,l=i.getSource(this.id);if(this.isGeoJSONSource(l)){e.data!==o&&(l.setData(e.data),this.source=G({type:"geojson"},e.sourceOptions,{data:e.data}));var s=e.layerOptions&&r&&!H(e.layerOptions.filter,r.filter);U.forEach((function(n){var o=t.buildLayerId(n);e.layerOptions&&s&&i.setFilter(o,e.layerOptions.filter||[]);var r=W(n)+"Paint";if(!H(e[r],t.props[r])){var l=M(t.props[r],e[r]);Object.keys(l).forEach((function(e){i.setPaintProperty(o,e,l[e])}))}var c=W(n)+"Layout";if(!H(e[c],t.props[c])){var p=M(t.props[c],e[c]);Object.keys(p).forEach((function(e){i.setLayoutProperty(o,e,p[e])}))}Object.keys(Z).forEach((function(a){var r=W(n)+Z[a];e[r]!==t.props[r]&&(t.props[r]&&i.off(a,o,t.props[r]),e[r]&&i.on(a,o,e[r]))})),a!==e.before&&i.moveLayer(o,e.before)}))}},t.prototype.render=function(){return null},t}(f.Component)),q=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),K=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return q(t,e),t.prototype.render=function(){return null},t}(f.Component),$=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Y=function(){return(Y=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},V={position:"absolute",zIndex:10,display:"flex",flexDirection:"column",boxShadow:"0px 1px 4px rgba(0, 0, 0, .3)",border:"1px solid rgba(0, 0, 0, 0.1)"},X={"top-right":{top:10,right:10,bottom:"auto",left:"auto"},"top-left":{top:10,left:10,bottom:"auto",right:"auto"},"bottom-right":{bottom:10,right:10,top:"auto",left:"auto"},"bottom-left":{bottom:10,left:10,top:"auto",right:"auto"}},Q={backgroundColor:"#f9f9f9",opacity:.95,transition:"background-color 0.16s ease-out",cursor:"pointer",border:0,height:26,width:26,backgroundImage:"url('https://api.mapbox.com/mapbox.js/v2.4.0/images/icons-000000@2x.png')",backgroundPosition:"0px 0px",backgroundSize:"26px 260px",outline:0},ee={backgroundColor:"#fff",opacity:1},te={borderBottom:"1px solid rgba(0, 0, 0, 0.1)",borderTopLeftRadius:2,borderTopRightRadius:2},ne={backgroundPosition:"0px -26px",borderBottomLeftRadius:2,borderBottomRightRadius:2},oe=[0,1],ae=oe[0],re=oe[1],ie=Object.keys(X),le=_(function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={hover:void 0},t.onMouseOut=function(){t.setState({hover:void 0})},t.plusOver=function(){ae!==t.state.hover&&t.setState({hover:ae})},t.minusOver=function(){re!==t.state.hover&&t.setState({hover:re})},t.onClickPlus=function(){t.props.onControlClick(t.props.map,t.props.zoomDiff)},t.onClickMinus=function(){t.props.onControlClick(t.props.map,-t.props.zoomDiff)},t}return $(t,e),t.prototype.render=function(){var e=this.props,t=e.position,n=e.style,o=e.className,a=e.tabIndex,r=this.state.hover,i=Y({},Q,te,r===ae?ee:{}),l=Y({},Q,ne,r===re?ee:{});return f.createElement("div",{className:o,tabIndex:a,style:Y({},V,X[t],n)},f.createElement("button",{id:"zoomIn",type:"button",style:i,"aria-label":"Zoom in",onMouseOver:this.plusOver,onMouseOut:this.onMouseOut,onClick:this.onClickPlus}),f.createElement("button",{id:"zoomOut",type:"button",style:l,"aria-label":"Zoom out",onMouseOver:this.minusOver,onMouseOut:this.onMouseOut,onClick:this.onClickMinus}))},t.defaultProps={position:ie[0],zoomDiff:.5,onControlClick:function(e,t){e.zoomTo(e.getZoom()+t)}},t}(f.Component)),se=["center","top","bottom","left","right","top-left","top-right","bottom-left","bottom-right"],ce={center:"translate(-50%, -50%)",top:"translate(-50%, 0)",left:"translate(0, -50%)",right:"translate(-100%, -50%)",bottom:"translate(-50%, -100%)","top-left":"translate(0, 0)","top-right":"translate(-100%, 0)","bottom-left":"translate(0, -100%)","bottom-right":"translate(-100%, -100%)"},pe={offsetWidth:0,offsetHeight:0},ue=[0,0],me=function(e,t,n){var o=function(e,t){return e.project(y.LngLat.convert(t))}(t,e.coordinates),a=function e(t){if(!t)return e(new y.Point(0,0));if("number"===typeof t){var n=Math.round(Math.sqrt(.5*Math.pow(t,2)));return{center:new y.Point(t,t),top:new y.Point(0,t),bottom:new y.Point(0,-t),left:new y.Point(t,0),right:new y.Point(-t,0),"top-left":new y.Point(n,n),"top-right":new y.Point(-n,n),"bottom-left":new y.Point(n,-n),"bottom-right":new y.Point(-n,-n)}}return t instanceof y.Point||Array.isArray(t)?se.reduce((function(e,n){return e[n]=y.Point.convert(t),e}),{}):se.reduce((function(e,n){return e[n]=y.Point.convert(t[n]||ue),e}),{})}(e.offset),r=e.anchor||function(e,t,n,o){var a=void 0===o?pe:o,r=a.offsetHeight,i=a.offsetWidth,l=[];return n.y+t.bottom.y-r<0?l=[se[1]]:n.y+t.top.y+r>e.transform.height&&(l=[se[2]]),n.x<i/2?l.push(se[3]):n.x>e.transform.width-i/2&&l.push(se[4]),0===l.length?se[2]:l.join("-")}(t,a,o,n);return{anchor:r,position:o,offset:a[r]}},de=function(e){return e?"translate("+e.x.toFixed(0)+"px, "+e.y.toFixed(0)+"px)":""},ye=function(e){var t=e.anchor,n=e.position,o=e.offset,a=[];return n&&a.push(de(n)),o&&void 0!==o.x&&void 0!==o.y&&a.push(de(o)),t&&a.push(ce[t]),a},fe=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ge=function(){return(ge=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},be={zIndex:3},he=_(function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.container=void 0,t.prevent=!1,t.state={},t.setContainer=function(e){e&&(t.container=e)},t.handleMapMove=function(){t.prevent||t.setState(me(t.props,t.props.map,t.container))},t}return fe(t,e),t.prototype.componentDidMount=function(){this.props.map.on("move",this.handleMapMove),this.handleMapMove()},t.prototype.havePropsChanged=function(e,t){return e.coordinates[0]!==t.coordinates[0]||e.coordinates[1]!==t.coordinates[1]||e.offset!==t.offset||e.anchor!==t.anchor},t.prototype.UNSAFE_componentWillReceiveProps=function(e){this.havePropsChanged(this.props,e)&&this.setState(me(e,this.props.map,this.container))},t.prototype.componentWillUnmount=function(){var e=this.props.map;this.prevent=!0,e.off("move",this.handleMapMove)},t.prototype.render=function(){var e=this.props,t=e.style,n=e.children,o=e.className,a=e.onClick,r=e.onDoubleClick,i=e.onMouseEnter,l=e.onMouseLeave,s=e.onScroll,c=e.onWheel,p=e.type,u=e.tabIndex,m=this.state.anchor,d=ge({},be,t,{transform:ye(this.state).join(" ")}),y=m&&"popup"===p?"mapboxgl-popup-anchor-"+m:"";return f.createElement("div",{className:o+" "+y,onClick:a,onDoubleClick:r,onMouseEnter:i,onMouseLeave:l,onScroll:s,onWheel:c,style:d,ref:this.setContainer,tabIndex:u},n)},t.defaultProps={offset:0,onClick:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e}},t}(f.Component)),xe=function(e,t){return t?t.split(" ").concat(e).join(" "):e.join(" ")},ve=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),_e=function(){return(_e=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},Se=["mapboxgl-popup"],we=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return ve(t,e),t.prototype.render=function(){var e=this.props,t=e.children,n=e.className,o=_e({},this.props,{children:void 0}),a=xe(Se,n);return f.createElement(he,_e({},o,{type:"popup",className:a}),f.createElement("div",{className:"mapboxgl-popup-tip"}),f.createElement("div",{className:"mapboxgl-popup-content"},t))},t}(f.Component),je=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ke=function(){return(ke=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},Pe=[.01,.02,.05,.1,.2,.5,1,2,5,10,20,50,100,200,500,1e3,2e3,5e3,1e4],Ce={"top-right":{top:10,right:10,bottom:"auto",left:"auto"},"top-left":{top:10,left:10,bottom:"auto",right:"auto"},"bottom-right":{bottom:10,right:10,top:"auto",left:"auto"},"bottom-left":{bottom:10,left:10,top:"auto",right:"auto"}},Oe={position:"absolute",zIndex:10,boxShadow:"0px 1px 4px rgba(0, 0, 0, .3)",border:"1px solid rgba(0, 0, 0, 0.1)",right:50,backgroundColor:"#fff",opacity:.85,display:"flex",flexDirection:"row",alignItems:"baseline",padding:"3px 7px"},Me={border:"2px solid #7e8490",boxShadow:"0px 1px 4px rgba(0, 0, 0, .3)",borderTop:"none",height:7,borderBottomLeftRadius:1,borderBottomRightRadius:1},Ee=Object.keys(Ce),Le=["km","mi"],Ae=60,Ie=_(function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={chosenScale:0,scaleWidth:Ae},t.setScale=function(){var e=t.props,n=e.measurement,o=e.map,a=o._canvas.clientWidth,r=o.getBounds(),i=r._ne,l=r._sw,s=t._getDistanceTwoPoints([l.lng,i.lat],[i.lng,i.lat],n),c=s/a*Ae,p=Pe.reduce((function(e,t){return!e&&t>c?t:e}),0),u=p/s*a;t.setState({chosenScale:p,scaleWidth:u})},t}return je(t,e),t.prototype.UNSAFE_componentWillMount=function(){this.setScale(),this.props.map.on("zoomend",this.setScale)},t.prototype.componentWillUnmount=function(){this.props.map&&this.props.map.off("zoomend",this.setScale)},t.prototype._getDistanceTwoPoints=function(e,t,n){void 0===n&&(n="km");var o=e[0],a=e[1],r=t[0],i=t[1],l="km"===n?6371:6371/1.60934,s=this._deg2rad(i-a),c=this._deg2rad(r-o),p=Math.sin(s/2)*Math.sin(s/2)+Math.cos(this._deg2rad(a))*Math.cos(this._deg2rad(i))*Math.sin(c/2)*Math.sin(c/2);return l*(2*Math.atan2(Math.sqrt(p),Math.sqrt(1-p)))},t.prototype._deg2rad=function(e){return e*(Math.PI/180)},t.prototype._displayMeasurement=function(e,t){return t>=1?t+" "+e:"mi"===e?Math.floor(5280*t)+" ft":Math.floor(1e3*t)+" m"},t.prototype.render=function(){var e=this.props,t=e.measurement,n=e.style,o=e.position,a=e.className,r=e.tabIndex,i=this.state,l=i.chosenScale,s=i.scaleWidth;return f.createElement("div",{tabIndex:r,style:ke({},Oe,Ce[o],n),className:a},f.createElement("div",{style:ke({},Me,{width:s})}),f.createElement("div",{style:{paddingLeft:10}},this._displayMeasurement(t,l)))},t.defaultProps={measurement:Le[0],position:Ee[2]},t}(f.Component)),ze=function(){return(ze=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},Fe=["mapboxgl-marker"],De=function(e){return f.createElement(he,ze({},ze({},e),{type:"marker",className:xe(Fe,e.className)}))},Re=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Ne=function(){return(Ne=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},Te=_(function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.id=t.props.id,t.onStyleDataChange=function(){t.props.map.getLayer(t.id)||(t.initialize(),t.forceUpdate())},t.initialize=function(){var e=t.props.map,n=t.props,o=n.geoJsonSource,a=n.tileJsonSource,r=n.onSourceAdded;e.getSource(t.id)||!o&&!a||(o?e.addSource(t.id,o):a&&e.addSource(t.id,a),e.on("sourcedata",t.onData),r&&r(e.getSource(t.id)))},t.onData=function(){var e=t.props.map,n=e.getSource(t.props.id);if(n&&e.isSourceLoaded(t.props.id)){var o=t.props.onSourceLoaded;n&&o&&o(n),n&&t.props.geoJsonSource&&t.props.geoJsonSource.data&&n.setData(t.props.geoJsonSource.data),e.off("sourcedata",t.onData)}},t}return Re(t,e),t.prototype.UNSAFE_componentWillMount=function(){this.props.map.on("styledata",this.onStyleDataChange),this.initialize()},t.prototype.removeSource=function(){var e=this,t=this.props.map;if(t.getSource(this.id)){var n=t.getStyle().layers,o=void 0===n?[]:n;return(o=o.map((function(e,t){var n=(o[t+1]||{id:void 0}).id;return Ne({},e,{before:n})})).filter((function(t){return t.source===e.id}))).forEach((function(e){return t.removeLayer(e.id)})),t.removeSource(this.id),o.reverse()}return[]},t.prototype.componentWillUnmount=function(){var e=this.props.map;e&&e.getStyle()&&(e.off("styledata",this.onStyleDataChange),this.removeSource())},t.prototype.UNSAFE_componentWillReceiveProps=function(e){var t=this.props,n=t.geoJsonSource,o=t.tileJsonSource,a=t.map;if(o&&e.tileJsonSource&&(o.url!==e.tileJsonSource.url||o.tiles!==e.tileJsonSource.tiles||o.minzoom!==e.tileJsonSource.minzoom||o.maxzoom!==e.tileJsonSource.maxzoom)){var r=this.removeSource();a.addSource(this.id,e.tileJsonSource),r.forEach((function(e){return a.addLayer(e,e.before)}))}n&&e.geoJsonSource&&e.geoJsonSource.data!==n.data&&e.geoJsonSource.data&&a.getSource(this.id)&&a.getSource(this.id).setData(e.geoJsonSource.data)},t.prototype.render=function(){return null},t}(f.Component)),Be=n(106),Ge=n.n(Be),He=n(70),Ue=n(71),We=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Ze=_(function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={superC:Ge()({radius:t.props.radius,maxZoom:t.props.maxZoom,minZoom:t.props.minZoom,extent:t.props.extent,nodeSize:t.props.nodeSize,log:t.props.log}),clusterPoints:[]},t.featureClusterMap=new WeakMap,t.childrenChange=function(e){var n=t.state.superC;t.featureClusterMap=new WeakMap;var o=t.childrenToFeatures(e);n.load(o)},t.mapChange=function(e){void 0===e&&(e=!1);var n=t.props.map,o=t.state,a=o.superC,r=o.clusterPoints,i=n.getZoom(),l=n.getCanvas(),s=l.width,c=l.height,p=n.unproject([0,0]).toArray(),u=n.unproject([s,0]).toArray(),m=n.unproject([s,c]).toArray(),d=n.unproject([0,c]).toArray(),y=a.getClusters(He(Object(Ue.polygon)([[p,u,m,d,p]])),Math.round(i));(y.length!==r.length||e)&&t.setState({clusterPoints:y})},t.childrenToFeatures=function(e){return e.map((function(e){var n=t.feature(e&&e.props.coordinates);return t.featureClusterMap.set(n,e),n}))},t.getLeaves=function(e,n,o){return t.state.superC.getLeaves(e.properties&&e.properties.cluster_id,n||1/0,o).map((function(e){return t.featureClusterMap.get(e)}))},t.zoomToClusterBounds=function(e){var n=Array.prototype.slice.call(e.currentTarget.children),o=t.findMarkerElement(e.currentTarget,e.target),a=n.indexOf(o),r=t.state.clusterPoints[a];if(r.properties&&r.properties.cluster_id){var i=t.state.superC.getLeaves(r.properties&&r.properties.cluster_id,1/0),l=He(Object(Ue.featureCollection)(i));t.props.map.fitBounds(y.LngLatBounds.convert(l),{padding:t.props.zoomOnClickPadding})}},t}return We(t,e),t.prototype.UNSAFE_componentWillMount=function(){var e=this.props,t=e.children,n=e.map;t&&this.childrenChange(t),n.on("move",this.mapChange),n.on("zoom",this.mapChange),this.mapChange()},t.prototype.componentWillUnmount=function(){var e=this.props.map;e.off("move",this.mapChange),e.off("zoom",this.mapChange)},t.prototype.UNSAFE_componentWillReceiveProps=function(e){this.props.children!==e.children&&e.children&&(this.childrenChange(e.children),this.mapChange(!0))},t.prototype.feature=function(e){return{type:"Feature",geometry:{type:"Point",coordinates:e},properties:{}}},t.prototype.findMarkerElement=function(e,t){return t.parentElement===e?t:this.findMarkerElement(e,t.parentElement)},t.prototype.render=function(){var e=this,t=this.props,n=t.ClusterMarkerFactory,o=t.style,a=t.className,r=t.tabIndex,i=this.state.clusterPoints;return f.createElement("div",{style:o,className:a,tabIndex:r,onClick:this.props.zoomOnClick?this.zoomToClusterBounds:void 0},i.map((function(t){return t.properties&&t.properties.cluster?n(t.geometry.coordinates,t.properties.point_count,e.getLeaves.bind(e,t)):e.featureClusterMap.get(t)})))},t.defaultProps={radius:60,minZoom:0,maxZoom:16,extent:512,nodeSize:64,log:!1,zoomOnClick:!1,zoomOnClickPadding:20},t}(f.Component)),Je=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),qe=function(){return(qe=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},Ke={position:"absolute",zIndex:10,display:"flex",flexDirection:"column",boxShadow:"0px 1px 4px rgba(0, 0, 0, .3)",border:"1px solid rgba(0, 0, 0, 0.1)"},$e={"top-right":{top:62,right:10,bottom:"auto",left:"auto"},"top-left":{top:62,left:10,bottom:"auto",right:"auto"},"bottom-right":{bottom:63,right:10,top:"auto",left:"auto"},"bottom-left":{bottom:63,left:10,top:"auto",right:"auto"}},Ye={backgroundColor:"#f9f9f9",opacity:.95,transition:"background-color 0.16s ease-out",cursor:"pointer",border:0,height:26,width:26,outline:0,padding:3},Ve={backgroundColor:"#fff",opacity:1},Xe={borderBottom:"1px solid rgba(0, 0, 0, 0.1)",borderTopLeftRadius:2,borderTopRightRadius:2,borderBottomLeftRadius:2,borderBottomRightRadius:2},Qe=function(){return f.createElement("svg",{viewBox:"0 0 20 20"},f.createElement("polygon",{fill:"#333333",points:"6,9 10,1 14,9"}),f.createElement("polygon",{fill:"#CCCCCC",points:"6,11 10,19 14,11"}))},et={width:20,height:20,display:"inline-block"},tt=0,nt=Object.keys($e),ot=_(function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={hover:void 0},t.compassIcon=null,t.onMouseOut=function(){t.state.hover||t.setState({hover:void 0})},t.onMouseIn=function(){tt!==t.state.hover&&t.setState({hover:tt})},t.onClickCompass=function(){t.props.map.resetNorth()},t.onMapRotate=function(){var e="rotate("+t.props.map.transform.angle*(180/Math.PI)+"deg)";t.compassIcon&&(t.compassIcon.style.transform=e)},t.assignRef=function(e){t.compassIcon=e},t}return Je(t,e),t.prototype.componentDidMount=function(){this.props.map.on("rotate",this.onMapRotate)},t.prototype.componentWillUnmount=function(){this.props.map.off("rotate",this.onMapRotate)},t.prototype.render=function(){var e=this.props,t=e.position,n=e.style,o=e.className,a=e.tabIndex,r=this.state.hover,i=qe({},Ye,Xe,r===tt?Ve:{});return f.createElement("div",{className:o,tabIndex:a,style:qe({},Ke,$e[t],n)},f.createElement("button",{style:i,onMouseOver:this.onMouseIn,onMouseOut:this.onMouseOut,onClick:this.onClickCompass},f.createElement("span",{ref:this.assignRef,style:et},f.createElement(Qe,null))))},t.defaultProps={position:nt[0]},t}(f.Component)),at=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),rt=(_(function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return at(t,e),t.prototype.UNSAFE_componentWillMount=function(){this.loadImage(this.props)},t.prototype.componentWillUnmount=function(){t.removeImage(this.props)},t.prototype.UNSAFE_componentWillReceiveProps=function(e){var n=this.props.id;e.map!==this.props.map&&t.removeImage(this.props),e.map&&!e.map.hasImage(n)&&this.loadImage(e)},t.prototype.render=function(){return null},t.prototype.loadImage=function(e){var t=this,n=e.map,o=e.id,a=e.url,r=e.data,i=e.options,l=e.onError;r?(n.addImage(o,r,i),this.loaded()):a&&n.loadImage(a,(function(e,a){e?l&&l(e):(n.addImage(o,a,i),t.loaded())}))},t.removeImage=function(e){var t=e.id,n=e.map;n&&n.getStyle()&&n.removeImage(t)},t.prototype.loaded=function(){var e=this.props.onLoaded;e&&e()},t}(f.Component)),_(T(z))),it=O,lt=n(53);function st(){var e=Object(u.a)(["\n  font-family: 'Source Code Pro', monospace;\n  font-size: 13px;\n  line-height: 18px;\n"]);return st=function(){return e},e}function ct(){var e=Object(u.a)(["\n  background-color: #363431;\n  max-height: calc(100vh - 74px);\n  display: ",";\n  overflow: auto;\n"]);return ct=function(){return e},e}var pt=m.a.div(ct(),(function(e){return e.full?"block":"flex"})),ut=Object(m.a)(lt.a)(st()),mt=function(e){var t=e.raw,n=e.scope,a=e.preview,r=e.full;return o.createElement(pt,{full:r},o.createElement(lt.c,{code:t,noInline:!0,scope:n},o.createElement(ut,{contentEditable:!1}),a&&o.createElement(lt.b,null)))},dt=n(52);function yt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function ft(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?yt(n,!0).forEach((function(t){Object(dt.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):yt(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var gt={fillRule:"evenodd",clipRule:"evenodd",strokeLinejoin:"round",strokeMiterlimit:1.41421},bt={fill:"#5498ff"},ht=Object.assign({},bt,{fillRule:"nonzero"}),xt=function(e){var t=e.width,n=void 0===t?"20%":t,a=e.height,r=void 0===a?"20%":a,i=e.style,l=void 0===i?{}:i;return o.createElement("svg",{width:n,height:r,viewBox:"0 0 512 534",style:ft({},gt,{},l)},o.createElement("g",{id:"logo"},o.createElement("path",{id:"Shape",d:"M246.679,155.766c52.126,0 94.413,43.442 94.413,97.043c0,87.312 -75.53,145.532 -94.413,145.532c-18.883,0 -94.414,-58.22 -94.414,-145.541c0,-53.592 42.288,-97.034 94.414,-97.034Zm0,135.847c20.856,0 37.765,-17.378 37.765,-38.813c0,-21.435 -16.909,-38.814 -37.765,-38.814c-20.856,0 -37.765,17.379 -37.765,38.814c0,21.435 16.909,38.813 37.765,38.813Z",style:ht}),o.createElement("g",{id:"Path"},o.createElement("path",{d:"M451.249,370.214l18.964,10.538c-39.494,86.003 -124.639,145.513 -223.308,145.513c-31.022,0 -60.707,-5.882 -88.057,-16.622l14.875,-17.984c22.945,8.096 47.564,12.491 73.182,12.491c90.49,0 168.518,-54.834 204.344,-133.936Zm-353.932,-299.347l16.929,14.61c-56.14,42.106 -92.616,110.248 -92.616,187.146c0,56.995 20.038,109.18 53.269,149.519l-12.062,19.442c-39.01,-44.858 -62.725,-104.063 -62.725,-168.961c0,-82.283 38.123,-155.415 97.205,-201.756Zm133.64,-51.366c5.273,-0.346 10.59,-0.521 15.948,-0.521c135.271,0 245.124,111.852 246.774,250.476l-21.881,-10.422c-6.844,-121.544 -104.915,-217.939 -224.893,-217.939c-2.042,0 -4.077,0.028 -6.106,0.084l6.106,-9.881l-15.948,-11.797Z",style:bt})),o.createElement("ellipse",{id:"Oval",cx:"95.338",cy:"87.522",rx:"28.324",ry:"29.11",style:bt}),o.createElement("ellipse",{id:"Oval.-Copy.-2",cx:"68.324",cy:"427.11",rx:"28.324",ry:"29.11",style:bt}),o.createElement("ellipse",{id:"Oval.-Copy.-3",cx:"180.324",cy:"504.11",rx:"28.324",ry:"29.11",style:bt}),o.createElement("ellipse",{id:"Oval.-Copy.-4",cx:"450.324",cy:"398.11",rx:"28.324",ry:"29.11",style:bt}),o.createElement("ellipse",{id:"Oval.-Copy.-5",cx:"483.354",cy:"261.494",rx:"28.324",ry:"29.11",style:bt}),o.createElement("ellipse",{id:"Oval.-Copy",cx:"227.952",cy:"29.11",rx:"28.324",ry:"29.11",style:bt})))};function vt(){var e=Object(u.a)(["\n  flex: 1;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n"]);return vt=function(){return e},e}function _t(){var e=Object(u.a)(["\n  display: flex;\n  flex-direction: column;\n  min-height: 220px;\n  justify-content: flex-end;\n"]);return _t=function(){return e},e}function St(){var e=Object(u.a)(["\n  text-align: center;\n"]);return St=function(){return e},e}function wt(){var e=Object(u.a)(["\n  text-align: center;\n  maxwidth: 900px;\n  color: #34495e;\n  line-height: 30px;\n  font-size: 20px;\n"]);return wt=function(){return e},e}function jt(){var e=Object(u.a)(["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n"]);return jt=function(){return e},e}var kt=n(18).token,Pt=m.a.div(jt()),Ct=m.a.p(wt()),Ot=m.a.div(St()),Mt=m.a.div(_t()),Et=m.a.div(vt()),Lt=function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(c.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.createElement(Pt,null,o.createElement(Mt,null,o.createElement(Ot,null,o.createElement(xt,{width:120,height:120})),o.createElement(Ct,null,"Simple to use with declarative API WebGl Mapbox map in React.")),o.createElement(Et,null,o.createElement(mt,{full:!1,raw:d,scope:{ReactMapboxGl:it,Layer:rt,Feature:K,accessToken:kt},preview:!0})))}}]),t}(o.Component),At=[[-.481747846041145,51.3233379650232],[.23441119994140536,51.654967740310525]],It=[[[-.13235092163085938,51.518250335096376],[-.1174163818359375,51.52433860667918],[-.10591506958007812,51.51974577545329],[-.10831832885742188,51.51429786349477],[-.12531280517578122,51.51429786349477],[-.13200759887695312,51.517823057404094]]],zt=[[[[-.1823509216308594,51.518250335096376],[-.1674163818359375,51.52433860667918],[-.15591506958007811,51.51974577545329],[-.1583183288574219,51.51429786349477],[-.1753128051757812,51.51429786349477],[-.18200759887695311,51.517823057404094]]],[[[-.1823509216308594,51.53825033509638],[-.1674163818359375,51.54433860667918],[-.15591506958007811,51.53974577545329],[-.1583183288574219,51.53429786349477],[-.1753128051757812,51.53429786349477],[-.18200759887695311,51.5378230574041]]]],Ft=n(114),Dt=n(115),Rt=n.n(Dt)()(Ft.parseString),Nt=function(e){return{id:e.id[0],name:e.name[0],position:[parseFloat(e.long[0]),parseFloat(e.lat[0])],bikes:parseInt(e.nbBikes[0],10),slots:parseInt(e.nbDocks[0],10)}};function Tt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function Bt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Tt(n,!0).forEach((function(t){Object(dt.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Tt(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Gt(){var e=Object(u.a)(["\n  background: white;\n  color: #3f618c;\n  font-weight: 400;\n  padding: 5px;\n  border-radius: 2px;\n"]);return Gt=function(){return e},e}var Ht=n(18),Ut=Ht.token,Wt=Ht.styles,Zt=it({minZoom:8,maxZoom:15,accessToken:Ut}),Jt={flex:1},qt={"icon-image":"londonCycle"},Kt=new Image;Kt.src="data:image/svg+xml;charset=utf-8;base64,"+btoa('<?xml version="1.0" encoding="UTF-8"?>\n<svg width="20px" height="17px" viewBox="0 0 20 17" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    \x3c!-- Generator: Sketch 46.2 (44496) - http://www.bohemiancoding.com/sketch --\x3e\n    <title>Cycle_Hire_Logo</title>\n    <desc>Created with Sketch.</desc>\n    <defs></defs>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="Cycle_Hire_Logo">\n            <rect id="rect17" x="0" y="6.22699387" width="20" height="4.38650307"></rect>\n            <path d="M18.2515337,8.38957234 C18.2515337,13.0228585 14.5436104,16.7791411 9.96961789,16.7791411 C5.39562517,16.7791411 1.68711656,13.0228585 1.68711656,8.38957234 C1.68711656,3.75598996 5.39562517,0 9.96961789,0 C14.5436104,0 18.2515337,3.75569357 18.2515337,8.38957234" id="path19"></path>\n            <path d="M14.8512661,8.42009806 C14.8512661,11.1360369 12.6778217,13.3391758 10,13.3391758 C7.3221781,13.3391758 5.15078177,11.1360369 5.15078177,8.42009806 C5.15078177,5.70415964 7.3221781,3.50102053 10,3.50102053 C12.6778217,3.50102053 14.8512661,5.70386277 14.8512661,8.42009806 M10,0.797546012 C5.84912763,0.797546012 2.48466258,4.20968116 2.48466258,8.42009806 C2.48466258,12.6305154 5.84912763,16.0429448 10,16.0429448 C14.1505798,16.0429448 17.5153374,12.6305154 17.5153374,8.42009806 C17.5153374,4.20968116 14.150287,0.797546012 10,0.797546012" id="path21" fill="#009EE0" fill-rule="nonzero"></path>\n            <rect id="rect23" fill="#00275B" fill-rule="nonzero" x="0.736196319" y="6.87116564" width="18.4969325" height="3.06748466"></rect>\n            <path d="M5.33742331,9.07964424 C5.17974293,9.18246407 4.9978041,9.23312883 4.79634024,9.23312883 C4.55405108,9.23312883 4.35524971,9.152661 4.19549859,8.99202388 C4.0366347,8.83138656 3.95705521,8.63319757 3.95705521,8.39566928 C3.95705521,8.16588919 4.0366347,7.9715746 4.19845675,7.81361953 C4.3590953,7.65536652 4.56026348,7.57668712 4.80077778,7.57668712 C4.98389992,7.57668712 5.16258451,7.6243717 5.33712764,7.71795243 L5.33712764,8.03177641 C5.16850123,7.91792945 4.99869173,7.86100597 4.82858634,7.86100597 C4.66587686,7.86100597 4.53245512,7.91256515 4.42772936,8.01419263 C4.32300341,8.1173106 4.27064053,8.24605888 4.27064053,8.40073543 C4.27064053,8.55690228 4.31974937,8.68624664 4.42181264,8.78966255 C4.52269241,8.89218444 4.65611435,8.94374322 4.81438609,8.94374322 C4.99632492,8.94374322 5.16968454,8.88383956 5.33742331,8.76522418 L5.33742331,9.07964424 L5.33742331,9.07964424 Z" id="path25" fill="#FFFFFF" fill-rule="nonzero"></path>\n            <polygon id="polygon27" fill="#FFFFFF" fill-rule="nonzero" points="5.78553941 7.60736196 6.12256511 8.21193405 6.46193738 7.60736196 6.80981595 7.60736196 6.27655858 8.53047524 6.27655858 9.20245399 5.97033157 9.20245399 5.97033157 8.53047524 5.42944785 7.60736196"></polygon>\n            <path d="M8.1595092,9.07964424 C8.0020652,9.18246407 7.8203989,9.23312883 7.61628288,9.23312883 C7.3767197,9.23312883 7.17703418,9.152661 7.01811322,8.99202388 C6.85948769,8.83138656 6.7791411,8.63319757 6.7791411,8.39566928 C6.7791411,8.16588919 6.86155532,7.9715746 7.02106715,7.81361953 C7.18323767,7.65536652 7.38410433,7.57668712 7.62307664,7.57668712 C7.80444771,7.57668712 7.98404639,7.6243717 8.15921397,7.71795243 L8.15921397,8.03177641 C7.99024948,7.91792945 7.82069433,7.86100597 7.64907135,7.86100597 C7.48778712,7.86100597 7.35456502,7.91256515 7.2497009,8.01419263 C7.14513201,8.1173106 7.0922567,8.24605888 7.0922567,8.40073543 C7.0922567,8.55690228 7.14306438,8.68624664 7.24497457,8.78966255 C7.3462941,8.89218444 7.47744836,8.94374322 7.63814172,8.94374322 C7.8177404,8.94374322 7.99172645,8.88383956 8.15921397,8.76522418 L8.15921397,9.07964424 L8.1595092,9.07964424 Z" id="path29" fill="#FFFFFF" fill-rule="nonzero"></path>\n            <polygon id="polygon31" fill="#FFFFFF" fill-rule="nonzero" points="8.67823725 7.60736196 8.67823725 8.91075616 9.32515337 8.91075616 9.32515337 9.20245399 8.37423313 9.20245399 8.37423313 7.60736196"></polygon>\n            <polygon id="polygon33" fill="#FFFFFF" fill-rule="nonzero" points="10.4915109 7.60736196 10.4915109 7.88444508 9.8185956 7.88444508 9.8185956 8.21730272 10.3743793 8.21730272 10.3743793 8.49766669 9.8185956 8.49766669 9.8185956 8.91910742 10.5521472 8.91910742 10.5521472 9.20245399 9.50920245 9.20245399 9.50920245 7.60736196"></polygon>\n            <polygon id="polygon35" fill="#FFFFFF" fill-rule="nonzero" points="11.6534319 8.49915799 11.6534319 9.20245399 11.3496933 9.20245399 11.3496933 7.60736196 11.6534319 7.60736196 11.6534319 8.21730272 12.3646816 8.21730272 12.3646816 7.60736196 12.6687117 7.60736196 12.6687117 9.20245399 12.3646816 9.20245399 12.3646816 8.49915799"></polygon>\n            <path d="M14.7852761,9.20245399 L14.4286491,9.20245399 L14.0002901,8.56686297 L13.8603114,8.56686297 L13.8603114,9.20245399 L13.5582822,9.20245399 L13.5582822,7.60736196 L14.0595344,7.60736196 C14.2241985,7.60736196 14.3522706,7.65001324 14.4472355,7.73352578 C14.5430717,7.81733669 14.5918611,7.93007887 14.5918611,8.07354174 C14.5918611,8.17137063 14.5639814,8.25846261 14.5140304,8.3306415 C14.4623369,8.40431144 14.3906051,8.45829657 14.2962209,8.49528082 L14.7852761,9.20245399 Z M13.860602,7.87818173 L13.860602,8.29783282 L14.0058083,8.29783282 C14.0955456,8.29783282 14.1637926,8.27695474 14.2140342,8.23728635 C14.263985,8.19940719 14.2872183,8.14482572 14.2872183,8.07533116 C14.2872183,8.01418795 14.2657275,7.96587005 14.2201327,7.93007887 C14.1774423,7.89607732 14.1150032,7.87818173 14.0339781,7.87818173 L13.860602,7.87818173 L13.860602,7.87818173 Z" id="path39" fill="#FFFFFF" fill-rule="nonzero"></path>\n            <polygon id="polygon41" fill="#FFFFFF" fill-rule="nonzero" points="15.9533415 7.60736196 15.9533415 7.88444508 15.2772929 7.88444508 15.2772929 8.21730272 15.8354846 8.21730272 15.8354846 8.49766669 15.2772929 8.49766669 15.2772929 8.91910742 16.0122699 8.91910742 16.0122699 9.20245399 14.9693252 9.20245399 14.9693252 7.60736196"></polygon>\n        </g>\n    </g>\n</svg>');var $t=["londonCycle",Kt],Yt=m.a.div(Gt()),Vt={speed:.8},Xt=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).state={fitBounds:void 0,center:[-.109970527,51.52916347],zoom:[11],station:void 0,stations:{}},n.onDrag=function(){n.state.station&&n.setState({station:void 0})},n.markerClick=function(e,t){var o=t.feature;n.setState({center:o.geometry.coordinates,zoom:[14],station:e})},n.onStyleLoad=function(e){var t=n.props.onStyleLoad;return t&&t(e)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"UNSAFE_componentWillMount",value:function(){var e=this;fetch("https://tfl.gov.uk/tfl/syndication/feeds/cycle-hire/livecyclehireupdates.xml").then((function(e){return e.text()})).then(Rt).then((function(e){return e.stations.station.map(Nt)})).then((function(e){return e.reduce((function(e,t){return e[t.id]=t,e}),{})})).then((function(t){e.setState((function(e){return{stations:Bt({},e.stations,{},t)}}))}))}},{key:"onToggleHover",value:function(e,t){t.map.getCanvas().style.cursor=e}},{key:"render",value:function(){var e=this,t=this.state,n=t.fitBounds,a=t.center,r=t.zoom,i=t.stations,l=t.station;return o.createElement(Zt,{style:Wt.londonCycle,onStyleLoad:this.onStyleLoad,fitBounds:n,maxBounds:At,center:a,zoom:r,onDrag:this.onDrag,containerStyle:Jt,flyToOptions:Vt},o.createElement(rt,{type:"symbol",id:"marker",layout:qt,images:$t},Object.keys(i).map((function(t,n){return o.createElement(K,{key:t,onMouseEnter:e.onToggleHover.bind(e,"pointer"),onMouseLeave:e.onToggleHover.bind(e,""),onClick:e.markerClick.bind(e,i[t]),coordinates:i[t].position})}))),l&&o.createElement(we,{key:l.id,coordinates:l.position},o.createElement(Yt,null,o.createElement("div",null,l.name),o.createElement("div",null,l.bikes," bikes / ",l.slots," slots"))))}}]),t}(o.Component),Qt=n(18).token,en=n(607),tn=n(608).points.map((function(e){return[e.lng,e.lat]})),nn=it({accessToken:Qt}),on={flex:1},an={"line-cap":"round","line-join":"round"},rn={"line-color":"#4790E5","line-width":12},ln={"fill-color":"#6F788A","fill-opacity":.7},sn={"fill-color":"#3bb2d0","fill-opacity":.5},cn=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).state={center:[-.120736,51.5118219],zoom:[8],circleRadius:30,routeIndex:0},n.intervalHandle=void 0,n.timeoutHandle=void 0,n.mounted=!1,n.getCirclePaint=function(){return{"circle-radius":n.state.circleRadius,"circle-color":"#E54E52","circle-opacity":.8}},n.onStyleLoad=function(e){var t=n.props.onStyleLoad;return t&&t(e)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"UNSAFE_componentWillMount",value:function(){var e=this;this.mounted=!0,this.timeoutHandle=setTimeout((function(){e.mounted&&e.setState({center:tn[0],zoom:[10],circleRadius:10})}),3e3),this.intervalHandle=setInterval((function(){e.mounted&&e.setState({routeIndex:e.state.routeIndex+1})}),8e3)}},{key:"componentWillUnmount",value:function(){clearTimeout(this.timeoutHandle),clearInterval(this.intervalHandle)}},{key:"render",value:function(){return o.createElement(nn,{style:en,containerStyle:on,onStyleLoad:this.onStyleLoad,center:this.state.center,zoom:this.state.zoom},o.createElement(Ie,null),o.createElement(le,null),o.createElement(ot,{style:{top:80}}),o.createElement(rt,{type:"line",layout:an,paint:rn},o.createElement(K,{coordinates:tn})),o.createElement(rt,{type:"circle",paint:this.getCirclePaint()},o.createElement(K,{coordinates:tn[this.state.routeIndex]})),o.createElement(rt,{type:"fill",paint:ln},o.createElement(K,{coordinates:It})),o.createElement(rt,{type:"fill",paint:sn},o.createElement(K,{coordinates:zt})))}}]),t}(o.Component);function pn(){var e=Object(u.a)(["\n  padding: 4px 0px;\n  color: #666;\n  font-size: 13px;\n  cursor: pointer;\n"]);return pn=function(){return e},e}function un(){var e=Object(u.a)(["\n  list-style-type: none;\n  padding: 6px 20px;\n  background-color: white;\n  margin-top: 0px;\n"]);return un=function(){return e},e}function mn(){var e=Object(u.a)(["\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  background-color: white;\n  flex: 1;\n"]);return mn=function(){return e},e}function dn(){var e=Object(u.a)(["\n  width: 100%;\n  height: 100%;\n  border: 1px solid #ddd;\n  outline: none;\n  padding: 0px 20px;\n  color: #666;\n  font-size: 13px;\n  ::placeholder {\n    color: #bbb;\n  }\n"]);return dn=function(){return e},e}var yn=m.a.input(dn()),fn=m.a.div(mn()),gn=m.a.ul(un()),bn=m.a.li(pn()),hn=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).state={value:""},n.onSelectItem=function(e){n.setState({value:""}),n.props.onSelectItem(e)},n.onSearch=function(e){var t=e.target;n.setState({value:t.value}),t.value.length>2&&n.props.onSearch(t.value)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this,t=this.props.options,n=this.state.value;return o.createElement(fn,null,o.createElement(yn,{onChange:this.onSearch,value:n,placeholder:"Search for a venue"}),n.length>2&&o.createElement(gn,null,t.map((function(t,n){return o.createElement(bn,{key:n,onClick:e.onSelectItem.bind(e,n)},t.name)}))))}}]),t}(o.Component);function xn(){var e=Object(u.a)(["\n  background-color: #e74c3c;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  border: 4px solid #eaa29b;\n"]);return xn=function(){return e},e}function vn(){var e=Object(u.a)(["\n  position: relative;\n  height: 100%;\n  flex: 1;\n"]);return vn=function(){return e},e}var _n=n(18),Sn=_n.token,wn=_n.styles,jn=function(e){return"".concat("https://api.mapbox.com/geocoding/v5","/mapbox.places/").concat(e,".json?access_token=").concat(Sn)},kn=m.a.div(vn()),Pn=m.a.div(xn()),Cn=it({accessToken:Sn}),On={width:"100%",height:"100%"},Mn=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"GET";return new Request(e,{method:n,headers:new Headers({Accept:"application/json","Content-Type":"application/json","Accept-Charset":"utf-8"}),body:t})},En=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).state={query:"",options:[],selected:void 0,center:[-.1148677,51.5139573]},n.fetch=function(e){fetch(Mn(jn(e))).then((function(e){return e.json()})).then((function(e){n.setState({options:e.features.filter((function(e){return e.place_type.includes("poi")})).map((function(e){return{id:e.id,center:e.center,name:e.text}}))})}))},n.onSelectItem=function(e){var t=n.state.options[e];n.setState({selected:t,center:t.center})},n.onSearch=function(e){n.setState({query:e}),n.fetch(e)},n.onStyleLoad=function(e){var t=n.props.onStyleLoad;return t&&t(e)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this.state,t=e.options,n=e.selected,a=e.center;return o.createElement(kn,null,o.createElement(hn,{onSearch:this.onSearch,onSelectItem:this.onSelectItem,options:t}),o.createElement(Cn,{style:wn.light,containerStyle:On,center:a,onStyleLoad:this.onStyleLoad},n&&o.createElement(De,{coordinates:n.center},o.createElement(Pn,null))))}}]),t}(o.Component),Ln=n(18),An=Ln.token,In=Ln.styles,zn=it({accessToken:An}),Fn={flex:1},Dn={"fill-extrusion-color":"#aaa","fill-extrusion-height":{type:"identity",property:"height"},"fill-extrusion-base":{type:"identity",property:"min_height"},"fill-extrusion-opacity":.6},Rn=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).zoom=[15],n.bearing=[-60],n.pitch=[60],n.center=[-.0824952,51.5144951],n.onStyleLoad=function(e){var t=n.props.onStyleLoad;return t&&t(e)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.createElement(zn,{style:In.light,containerStyle:Fn,onStyleLoad:this.onStyleLoad,zoom:this.zoom,center:this.center,pitch:this.pitch,bearing:this.bearing},o.createElement(rt,{id:"3d-buildings",sourceId:"composite",sourceLayer:"building",filter:["==","extrude","true"],type:"fill-extrusion",minZoom:14,paint:Dn}))}}]),t}(o.Component),Nn=n(51);function Tn(){var e=Object(u.a)(["\n  background: white;\n  color: #3f618c;\n  font-weight: 400;\n  padding: 5px;\n  border-radius: 2px;\n"]);return Tn=function(){return e},e}var Bn=n(18),Gn=Bn.token,Hn=Bn.styles.outdoor,Un=n(609),Wn=it({accessToken:Gn}),Zn={flex:1},Jn={clusterMarker:{width:30,height:30,borderRadius:"50%",backgroundColor:"#51D5A0",display:"flex",justifyContent:"center",alignItems:"center",color:"white",border:"2px solid #56C498",cursor:"pointer"},marker:{width:30,height:30,borderRadius:"50%",backgroundColor:"#E0E0E0",display:"flex",justifyContent:"center",alignItems:"center",border:"2px solid #C9C9C9"}},qn=m.a.div(Tn()),Kn=function(e){function t(){var e,n;Object(i.a)(this,t);for(var a=arguments.length,r=new Array(a),l=0;l<a;l++)r[l]=arguments[l];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(r)))).state={popup:void 0},n.zoom=[4],n.clusterMarker=function(e,t,a){return o.createElement(De,{key:e.toString(),coordinates:e,style:Jn.clusterMarker,onClick:n.clusterClick.bind(Object(Nn.a)(n),e,t,a)},o.createElement("div",null,t))},n.onMove=function(){n.state.popup&&n.setState({popup:void 0})},n.clusterClick=function(e,t,o){n.setState({popup:{coordinates:e,total:t,leaves:o()}})},n.onStyleLoad=function(e){var t=n.props.onStyleLoad;return t&&t(e)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this.state.popup;return o.createElement(Wn,{style:Hn,zoom:this.zoom,onStyleLoad:this.onStyleLoad,onMove:this.onMove,containerStyle:Zn,renderChildrenInPortal:!0},o.createElement(Ze,{ClusterMarkerFactory:this.clusterMarker},Un.features.map((function(e,t){return o.createElement(De,{key:t,style:Jn.marker,coordinates:e.geometry.coordinates,"data-feature":e},o.createElement("div",{title:e.properties.name},e.properties.name[0]))}))),e&&o.createElement(we,{offset:[0,-50],coordinates:e.coordinates},o.createElement(qn,null,e.leaves.map((function(e,t){return o.createElement("div",{key:t},e.props["data-feature"].properties.name)})),e.total>e.leaves.length?o.createElement("div",null,"And more..."):null)))}}]),t}(o.Component);function $n(){var e=Object(u.a)(["\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  right: 20px;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n"]);return $n=function(){return e},e}function Yn(){var e=Object(u.a)(["\n  padding: 6px 10px;\n  background-color: white;\n"]);return Yn=function(){return e},e}function Vn(){var e=Object(u.a)(["\n  border: 1px solid #3770c6;\n  background-color: rgb(84, 152, 255);\n  height: 100%;\n  color: white;\n  font-size: 13px;\n  padding: 6px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  outline: none;\n  :hover {\n    background-color: #3770c6;\n  }\n"]);return Vn=function(){return e},e}function Xn(){var e=Object(u.a)(["\n  position: relative;\n  height: 100%;\n  flex: 1;\n"]);return Xn=function(){return e},e}var Qn=n(18),eo=Qn.token,to=Qn.styles,no=n(93),oo=it({accessToken:eo}),ao=m.a.div(Xn()),ro=m.a.button(Vn()),io=m.a.div(Yn()),lo=m.a.div($n()),so={height:"100%",width:"100%"},co={type:"geojson",data:{type:"Feature",geometry:{type:"Point",coordinates:[-77.0323,38.9131]},properties:{title:"Mapbox DC","marker-symbol":"monument"}}},po={"circle-stroke-width":4,"circle-radius":10,"circle-blur":.15,"circle-color":"#3770C6","circle-stroke-color":"white"},uo=["basic","dark","light"],mo=Object.keys(to).filter((function(e){return uo.includes(e)})),yo=[-.2416815,51.5285582],fo=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).state={styleKey:"basic",featuresPostion:[yo,yo],mapCenter:yo,renderLayer:!0},n.nextStyle=function(){var e=n.state.styleKey,t=mo.indexOf(e),o=t===mo.length-1?0:t+1;n.setState({styleKey:mo[o]})},n.toggleLayer=function(){var e=n.state.renderLayer;n.setState({renderLayer:!e})},n.onDragStart=function(){console.log("onDragStart")},n.onDrag=function(){console.log("onDrag")},n.onDragEnd=function(e,t){var o=e.lngLat;console.log("onDragEnd"),n.setState({featuresPostion:n.state.featuresPostion.map((function(e,n){return t===n?[o.lng,o.lat]:e}))})},n.onStyleLoad=function(e){var t=n.props.onStyleLoad;return t&&t(e)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"UNSAFE_componentWillMount",value:function(){var e=this;navigator.geolocation.getCurrentPosition((function(t){var n=t.coords,o=n.latitude,a=n.longitude;e.setState({featuresPostion:[[a,o],yo],mapCenter:[a,o]})}),(function(e){console.error("Cannot retrieve your current position",e)}))}},{key:"render",value:function(){var e=this,t=this.state,n=t.styleKey,a=t.featuresPostion,r=t.mapCenter,i=t.renderLayer;return o.createElement(ao,null,o.createElement(oo,{style:to[n],containerStyle:so,center:r,onStyleLoad:this.onStyleLoad},i?o.createElement("div",null,o.createElement(Te,{id:"example_id",geoJsonSource:co}),o.createElement(rt,{type:"circle",id:"example_id_marker",paint:po,sourceId:"example_id"})):void 0,o.createElement(rt,{type:"circle",id:"position-marker",paint:po},a.map((function(t,n){return o.createElement(K,{key:n,coordinates:t,draggable:0===n,onDragEnd:function(t){return e.onDragEnd(t,n)},onDragStart:e.onDragStart,onDrag:e.onDrag})}))),o.createElement(J,{data:no,circleLayout:{visibility:"visible"},symbolLayout:{"text-field":"{place}","text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-offset":[0,.6],"text-anchor":"top"}})),o.createElement(lo,null,o.createElement(ro,{onClick:this.nextStyle},"Change style"),o.createElement(ro,{onClick:this.toggleLayer},"Toggle layer"),o.createElement(io,null,"Using style: ".concat(n))))}}]),t}(o.Component),go=n(18),bo=go.token,ho=go.styles,xo=n(93),vo=it({accessToken:bo}),_o={flex:1},So={"text-field":"{place}","text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-offset":[0,.6],"text-anchor":"top"},wo={"text-color":"white"},jo={visibility:"visible"},ko={"circle-color":"white"},Po=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).center=[-77.01239,38.91275],n.onClickCircle=function(e){console.log(e)},n.onStyleLoad=function(e){var t=n.props.onStyleLoad;return t&&t(e)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.createElement(vo,{style:ho.dark,center:this.center,containerStyle:_o,onStyleLoad:this.onStyleLoad},o.createElement(J,{data:xo,circleLayout:jo,circlePaint:ko,circleOnClick:this.onClickCircle,symbolLayout:So,symbolPaint:wo}))}}]),t}(o.Component),Co=n(610),Oo=n(18),Mo=Oo.token,Eo=Oo.styles,Lo=it({accessToken:Mo}),Ao={flex:1},Io={"heatmap-weight":{property:"priceIndicator",type:"exponential",stops:[[0,0],[5,2]]},"heatmap-intensity":{stops:[[0,0],[5,1.2]]},"heatmap-color":["interpolate",["linear"],["heatmap-density"],0,"rgba(33,102,172,0)",.25,"rgb(103,169,207)",.5,"rgb(209,229,240)",.8,"rgb(253,219,199)",1,"rgb(239,138,98)",2,"rgb(178,24,43)"],"heatmap-radius":{stops:[[0,1],[5,50]]}},zo=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).center=[-.109970527,51.52916347],n.onStyleLoad=function(e){var t=n.props.onStyleLoad;return t&&t(e)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.createElement(Lo,{style:Eo.dark,center:this.center,containerStyle:Ao,onStyleLoad:this.onStyleLoad},o.createElement(rt,{type:"heatmap",paint:Io},Co.map((function(e,t){return o.createElement(K,{key:t,coordinates:e.latlng,properties:e})}))))}}]),t}(o.Component),Fo=[{shortTitle:"london-cycle",title:"Bike stations in London",components:["ReactMapboxGl","Layer","Feature"],DemoComponent:Xt,reactLive:o.createElement(mt,{full:!0,raw:"import * as React from 'react';\nimport ReactMapboxGl, { Layer, Feature, Popup } from '../../../';\nimport styled from 'styled-components';\nimport { londonCycleMaxBounds as maxBounds } from './data';\nimport { svg } from './cycle';\nimport { Station, getCycleStations, StationDict } from './londonCycleData';\n\n// tslint:disable-next-line:no-var-requires\nconst { token, styles } = require('./config.json');\n\nconst Mapbox = ReactMapboxGl({\n  minZoom: 8,\n  maxZoom: 15,\n  accessToken: token\n});\n\nconst mapStyle = {\n  flex: 1\n};\n\n// Define layout to use in Layer component\nconst layoutLayer = { 'icon-image': 'londonCycle' };\n\n// Create an image for the Layer\nconst image = new Image();\nimage.src = 'data:image/svg+xml;charset=utf-8;base64,' + btoa(svg);\nconst images: any = ['londonCycle', image];\n\nconst StyledPopup = styled.div`\n  background: white;\n  color: #3f618c;\n  font-weight: 400;\n  padding: 5px;\n  border-radius: 2px;\n`;\n\nexport interface State {\n  fitBounds?: [[number, number], [number, number]];\n  center: [number, number];\n  zoom: [number];\n  station?: Station;\n  stations: StationDict;\n}\n\nconst flyToOptions = {\n  speed: 0.8\n};\n\nexport interface Props {\n  // tslint:disable-next-line:no-any\n  onStyleLoad?: (map: any) => any;\n}\n\nexport default class LondonCycle extends React.Component<Props, State> {\n  public state: State = {\n    fitBounds: undefined,\n    center: [-0.109970527, 51.52916347],\n    zoom: [11],\n    station: undefined,\n    stations: {}\n  };\n\n  public UNSAFE_componentWillMount() {\n    getCycleStations().then(res => {\n      this.setState(({ stations }) => ({\n        stations: {\n          ...stations,\n          ...res\n        }\n      }));\n    });\n  }\n\n  private onDrag = () => {\n    if (this.state.station) {\n      this.setState({ station: undefined });\n    }\n  };\n\n  private onToggleHover(cursor: string, { map }: { map: any }) {\n    map.getCanvas().style.cursor = cursor;\n  }\n\n  private markerClick = (station: Station, { feature }: { feature: any }) => {\n    this.setState({\n      center: feature.geometry.coordinates,\n      zoom: [14],\n      station\n    });\n  };\n\n  private onStyleLoad = (map: any) => {\n    const { onStyleLoad } = this.props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  public render() {\n    const { fitBounds, center, zoom, stations, station } = this.state;\n\n    return (\n      <Mapbox\n        style={styles.londonCycle}\n        onStyleLoad={this.onStyleLoad}\n        fitBounds={fitBounds}\n        maxBounds={maxBounds}\n        center={center}\n        zoom={zoom}\n        onDrag={this.onDrag}\n        containerStyle={mapStyle}\n        flyToOptions={flyToOptions}\n      >\n        <Layer type=\"symbol\" id=\"marker\" layout={layoutLayer} images={images}>\n          {Object.keys(stations).map((stationK, index) => (\n            <Feature\n              key={stationK}\n              onMouseEnter={this.onToggleHover.bind(this, 'pointer')}\n              onMouseLeave={this.onToggleHover.bind(this, '')}\n              onClick={this.markerClick.bind(this, stations[stationK])}\n              coordinates={stations[stationK].position}\n            />\n          ))}\n        </Layer>\n        {station && (\n          <Popup key={station.id} coordinates={station.position}>\n            <StyledPopup>\n              <div>{station.name}</div>\n              <div>\n                {station.bikes} bikes / {station.slots} slots\n              </div>\n            </StyledPopup>\n          </Popup>\n        )}\n      </Mapbox>\n    );\n  }\n}\n"})},{shortTitle:"heatmap",title:"Heatmap of London house prices",components:["ReactMapboxGl","Layer","Feature"],DemoComponent:zo,reactLive:o.createElement(mt,{full:!0,raw:"import * as React from 'react';\nimport ReactMapboxGl, { Layer, Feature } from '../../../';\n\n// tslint:disable-next-line:no-var-requires\nconst data = require('./heatmapData.json');\n// tslint:disable-next-line:no-var-requires\nconst { token, styles } = require('./config.json');\n\nconst Map = ReactMapboxGl({ accessToken: token });\n\nconst mapStyle = {\n  flex: 1\n};\n\nexport interface Props {\n  // tslint:disable-next-line:no-any\n  onStyleLoad?: (map: any) => any;\n}\n\nconst layerPaint = {\n  'heatmap-weight': {\n    property: 'priceIndicator',\n    type: 'exponential',\n    stops: [[0, 0], [5, 2]]\n  },\n  // Increase the heatmap color weight weight by zoom level\n  // heatmap-ntensity is a multiplier on top of heatmap-weight\n  'heatmap-intensity': {\n    stops: [[0, 0], [5, 1.2]]\n  },\n  // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n  // Begin color ramp at 0-stop with a 0-transparancy color\n  // to create a blur-like effect.\n  'heatmap-color': [\n    'interpolate',\n    ['linear'],\n    ['heatmap-density'],\n    0,\n    'rgba(33,102,172,0)',\n    0.25,\n    'rgb(103,169,207)',\n    0.5,\n    'rgb(209,229,240)',\n    0.8,\n    'rgb(253,219,199)',\n    1,\n    'rgb(239,138,98)',\n    2,\n    'rgb(178,24,43)'\n  ],\n  // Adjust the heatmap radius by zoom level\n  'heatmap-radius': {\n    stops: [[0, 1], [5, 50]]\n  }\n};\n\nexport default class Heatmap extends React.Component<Props> {\n  private center = [-0.109970527, 51.52916347] as [number, number];\n\n  // tslint:disable-next-line:no-any\n  private onStyleLoad = (map: any) => {\n    const { onStyleLoad } = this.props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  public render() {\n    return (\n      <Map\n        style={styles.dark}\n        center={this.center}\n        containerStyle={mapStyle}\n        onStyleLoad={this.onStyleLoad}\n      >\n        <Layer type=\"heatmap\" paint={layerPaint}>\n          {data.map((el: any, index: number) => (\n            <Feature key={index} coordinates={el.latlng} properties={el} />\n          ))}\n        </Layer>\n      </Map>\n    );\n  }\n}\n"})},{shortTitle:"all-shapes",title:"Mapbox webgl shapes",components:["ReactMapboxGl","Layer","Feature","ScaleControl","ZoomControl","RotationControl"],DemoComponent:cn,reactLive:o.createElement(mt,{full:!0,raw:"import * as React from 'react';\nimport ReactMapboxGl, {\n  ScaleControl,\n  ZoomControl,\n  RotationControl,\n  Layer,\n  Feature\n} from '../../../';\nimport { AllShapesPolygonCoords, AllShapesMultiPolygonCoords } from './data';\n// tslint:disable-next-line:no-var-requires\nconst { token } = require('./config.json');\n// tslint:disable-next-line:no-var-requires\nconst mapData = require('./allShapesStyle.json');\ninterface Point {\n  lat: number;\n  lng: number;\n}\ninterface Route {\n  // tslint:disable-next-line:no-any\n  [key: string]: any;\n  points: Point[];\n}\n// tslint:disable-next-line:no-var-requires\nconst route: Route = require('./route.json');\n\nconst mappedRoute = route.points.map(\n  point => [point.lng, point.lat] as [number, number]\n);\n\nconst Map = ReactMapboxGl({ accessToken: token });\n\nconst mapStyle = {\n  flex: 1\n};\n\nconst lineLayout = {\n  'line-cap': 'round' as 'round',\n  'line-join': 'round' as 'round'\n};\n\nconst linePaint = {\n  'line-color': '#4790E5',\n  'line-width': 12\n};\n\nconst polygonPaint = {\n  'fill-color': '#6F788A',\n  'fill-opacity': 0.7\n};\n\nconst multiPolygonPaint = {\n  'fill-color': '#3bb2d0',\n  'fill-opacity': 0.5\n};\n\nexport interface State {\n  center: [number, number];\n  circleRadius: number;\n  routeIndex: number;\n  zoom: [number];\n}\n\nexport interface Props {\n  // tslint:disable-next-line:no-any\n  onStyleLoad?: (map: any) => any;\n}\n\nclass AllShapes extends React.Component<Props, State> {\n  public state: State = {\n    center: [-0.120736, 51.5118219],\n    zoom: [8],\n    circleRadius: 30,\n    routeIndex: 0\n  };\n\n  private intervalHandle: any = undefined;\n  private timeoutHandle: any = undefined;\n  private mounted = false;\n\n  public UNSAFE_componentWillMount() {\n    this.mounted = true;\n    this.timeoutHandle = setTimeout(() => {\n      if (this.mounted) {\n        this.setState({\n          center: mappedRoute[0],\n          zoom: [10],\n          circleRadius: 10\n        });\n      }\n    }, 3000);\n\n    this.intervalHandle = setInterval(() => {\n      if (this.mounted) {\n        this.setState({\n          routeIndex: this.state.routeIndex + 1\n        });\n      }\n    }, 8000);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this.timeoutHandle);\n    clearInterval(this.intervalHandle);\n  }\n\n  private getCirclePaint = () => ({\n    'circle-radius': this.state.circleRadius,\n    'circle-color': '#E54E52',\n    'circle-opacity': 0.8\n  });\n\n  private onStyleLoad = (map: any) => {\n    const { onStyleLoad } = this.props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  public render() {\n    return (\n      <Map\n        style={mapData}\n        containerStyle={mapStyle}\n        // tslint:disable-next-line:jsx-no-lambda\n        onStyleLoad={this.onStyleLoad}\n        center={this.state.center}\n        zoom={this.state.zoom}\n      >\n        {/* Controls */}\n        <ScaleControl />\n        <ZoomControl />\n        <RotationControl style={{ top: 80 }} />\n\n        {/* Line example */}\n        <Layer type=\"line\" layout={lineLayout} paint={linePaint}>\n          <Feature coordinates={mappedRoute} />\n        </Layer>\n\n        {/* Circle example */}\n        <Layer type=\"circle\" paint={this.getCirclePaint()}>\n          <Feature coordinates={mappedRoute[this.state.routeIndex]} />\n        </Layer>\n\n        {/* Polygon example */}\n        <Layer type=\"fill\" paint={polygonPaint}>\n          <Feature coordinates={AllShapesPolygonCoords} />\n        </Layer>\n\n        {/* Multi Polygon example */}\n        <Layer type=\"fill\" paint={multiPolygonPaint}>\n          <Feature coordinates={AllShapesMultiPolygonCoords} />\n        </Layer>\n      </Map>\n    );\n  }\n}\n\nexport default AllShapes;\n"})},{shortTitle:"html-marker",title:"Html features (Marker)",components:["ReactMapboxGl","Marker"],DemoComponent:En,reactLive:o.createElement(mt,{full:!0,raw:"import * as React from 'react';\nimport ReactMapboxGl, { Marker } from '../../../';\nimport styled from 'styled-components';\nimport Dropdown from '../dropdown';\n\n// tslint:disable-next-line:no-var-requires\nconst { token, styles } = require('./config.json');\nconst geocodingUrl = 'https://api.mapbox.com/geocoding/v5';\n// tslint:disable-next-line:max-line-length\nconst mapboxGeocoding = (query: string) =>\n  `${geocodingUrl}/mapbox.places/${query}.json?access_token=${token}`;\n\nconst Container = styled.div`\n  position: relative;\n  height: 100%;\n  flex: 1;\n`;\n\nconst Mark = styled.div`\n  background-color: #e74c3c;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  border: 4px solid #eaa29b;\n`;\n\nconst Map = ReactMapboxGl({ accessToken: token });\n\nconst mapStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nexport interface Place {\n  id: string;\n  name: string;\n  center: [number, number];\n}\n\nexport interface State {\n  query: string;\n  options: Place[];\n  selected?: Place;\n  center: [number, number];\n}\n\nconst req = (url: string, body?: any, method = 'GET') =>\n  new Request(url, {\n    method,\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'Accept-Charset': 'utf-8'\n    }),\n    body\n  });\n\nexport interface Props {\n  // tslint:disable-next-line:no-any\n  onStyleLoad?: (map: any) => any;\n}\n\nclass HtmlFeatures extends React.Component<Props, State> {\n  public state: State = {\n    query: '',\n    options: [],\n    selected: undefined,\n    center: [-0.1148677, 51.5139573]\n  };\n\n  private fetch = (query: string) => {\n    fetch(req(mapboxGeocoding(query)))\n      .then((res: any) => res.json())\n      .then((data: any) => {\n        this.setState({\n          options: data.features\n            .filter((place: any) => place.place_type.includes('poi'))\n            .map((poi: any) => ({\n              id: poi.id,\n              center: poi.center,\n              name: poi.text\n            }))\n        });\n      });\n  };\n\n  private onSelectItem = (index: number) => {\n    const selected = this.state.options[index];\n    this.setState({\n      selected,\n      center: selected.center\n    });\n  };\n\n  private onSearch = (query: string) => {\n    this.setState({ query });\n    this.fetch(query);\n  };\n\n  private onStyleLoad = (map: any) => {\n    const { onStyleLoad } = this.props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  public render() {\n    const { options, selected, center } = this.state;\n    return (\n      <Container>\n        <Dropdown\n          onSearch={this.onSearch}\n          onSelectItem={this.onSelectItem}\n          options={options}\n        />\n        <Map\n          style={styles.light}\n          containerStyle={mapStyle}\n          center={center}\n          onStyleLoad={this.onStyleLoad}\n        >\n          {selected && (\n            <Marker coordinates={selected.center}>\n              <Mark />\n            </Marker>\n          )}\n        </Map>\n      </Container>\n    );\n  }\n}\n\nexport default HtmlFeatures;\n"})},{shortTitle:"3d-map",title:"3D extrusion map",components:["ReactMapboxGl","Layer"],DemoComponent:Rn,reactLive:o.createElement(mt,{full:!0,raw:"import * as React from 'react';\nimport ReactMapboxGl, { Layer } from '../../../';\n\n// tslint:disable-next-line:no-var-requires\nconst { token, styles } = require('./config.json');\n\nconst Map = ReactMapboxGl({ accessToken: token });\n\nconst mapStyle = {\n  flex: 1\n};\n\nconst paintLayer = {\n  'fill-extrusion-color': '#aaa',\n  'fill-extrusion-height': {\n    type: 'identity' as 'identity',\n    property: 'height'\n  },\n  'fill-extrusion-base': {\n    type: 'identity' as 'identity',\n    property: 'min_height'\n  },\n  'fill-extrusion-opacity': 0.6\n};\n\nexport interface Props {\n  // tslint:disable-next-line:no-any\n  onStyleLoad?: (map: any) => any;\n}\n\nclass ThreeDMap extends React.Component<Props> {\n  private zoom: [number] = [15];\n  private bearing: [number] = [-60];\n  private pitch: [number] = [60];\n  private center = [-0.0824952, 51.5144951] as [number, number];\n\n  // tslint:disable-next-line:no-any\n  private onStyleLoad = (map: any) => {\n    const { onStyleLoad } = this.props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  public render() {\n    return (\n      <Map\n        style={styles.light}\n        containerStyle={mapStyle}\n        onStyleLoad={this.onStyleLoad}\n        zoom={this.zoom}\n        center={this.center}\n        pitch={this.pitch}\n        bearing={this.bearing}\n      >\n        <Layer\n          id=\"3d-buildings\"\n          sourceId=\"composite\"\n          sourceLayer=\"building\"\n          filter={['==', 'extrude', 'true']}\n          type=\"fill-extrusion\"\n          minZoom={14}\n          paint={paintLayer}\n        />\n      </Map>\n    );\n  }\n}\n\nexport default ThreeDMap;\n"})},{shortTitle:"html-cluster",title:"Cluster of Html markers",components:["ReactMapboxGl","Marker","Cluster"],DemoComponent:Kn,reactLive:o.createElement(mt,{full:!0,raw:"import * as React from 'react';\nimport ReactMapboxGl, { Marker, Cluster, Popup } from '../../../';\nimport styled from 'styled-components';\n\n// tslint:disable-next-line:no-var-requires\nconst { token, styles: { outdoor } } = require('./config.json');\n// tslint:disable-next-line:no-var-requires\nconst falls = require('./falls.json');\n\nconst Map = ReactMapboxGl({ accessToken: token });\n\nconst mapStyle = {\n  flex: 1\n};\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  clusterMarker: {\n    width: 30,\n    height: 30,\n    borderRadius: '50%',\n    backgroundColor: '#51D5A0',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n    border: '2px solid #56C498',\n    cursor: 'pointer'\n  },\n  marker: {\n    width: 30,\n    height: 30,\n    borderRadius: '50%',\n    backgroundColor: '#E0E0E0',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: '2px solid #C9C9C9'\n  }\n};\n\nconst StyledPopup = styled.div`\n  background: white;\n  color: #3f618c;\n  font-weight: 400;\n  padding: 5px;\n  border-radius: 2px;\n`;\n\nexport interface State {\n  popup?: {\n    coordinates: GeoJSON.Position;\n    total: number;\n    leaves: Array<React.ReactElement<any>>;\n  };\n}\n\nexport interface Props {\n  // tslint:disable-next-line:no-any\n  onStyleLoad?: (map: any) => any;\n}\n\nclass HtmlCluster extends React.Component<Props, State> {\n  public state: State = {\n    popup: undefined\n  };\n\n  private zoom: [number] = [4];\n\n  private clusterMarker = (\n    coordinates: GeoJSON.Position,\n    pointCount: number,\n    getLeaves: (\n      limit?: number,\n      offset?: number\n    ) => Array<React.ReactElement<any>>\n  ) => (\n    <Marker\n      key={coordinates.toString()}\n      coordinates={coordinates}\n      style={styles.clusterMarker}\n      onClick={this.clusterClick.bind(this, coordinates, pointCount, getLeaves)}\n    >\n      <div>{pointCount}</div>\n    </Marker>\n  );\n\n  private onMove = () => {\n    if (this.state.popup) {\n      this.setState({ popup: undefined });\n    }\n  };\n\n  private clusterClick = (\n    coordinates: GeoJSON.Position,\n    total: number,\n    getLeaves: (\n      limit?: number,\n      offset?: number\n    ) => Array<React.ReactElement<any>>\n  ) => {\n    this.setState({\n      popup: {\n        coordinates,\n        total,\n        leaves: getLeaves()\n      }\n    });\n  };\n\n  // tslint:disable-next-line:no-any\n  private onStyleLoad = (map: any) => {\n    const { onStyleLoad } = this.props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  public render() {\n    const { popup } = this.state;\n\n    return (\n      <Map\n        style={outdoor}\n        zoom={this.zoom}\n        onStyleLoad={this.onStyleLoad}\n        onMove={this.onMove}\n        containerStyle={mapStyle}\n        renderChildrenInPortal={true}\n      >\n        <Cluster ClusterMarkerFactory={this.clusterMarker}>\n          {falls.features.map((feature: any, key: number) => (\n            <Marker\n              key={key}\n              style={styles.marker}\n              coordinates={feature.geometry.coordinates}\n              data-feature={feature}\n            >\n              <div title={feature.properties.name}>\n                {feature.properties.name[0]}\n              </div>\n            </Marker>\n          ))}\n        </Cluster>\n        {popup && (\n          <Popup offset={[0, -50]} coordinates={popup.coordinates}>\n            <StyledPopup>\n              {popup.leaves.map(\n                (leaf: React.ReactElement<any>, index: number) => (\n                  <div key={index}>\n                    {leaf.props['data-feature'].properties.name}\n                  </div>\n                )\n              )}\n              {popup.total > popup.leaves.length ? (\n                <div>And more...</div>\n              ) : null}\n            </StyledPopup>\n          </Popup>\n        )}\n      </Map>\n    );\n  }\n}\n\nexport default HtmlCluster;\n"})},{shortTitle:"switch-style",title:"Swap Mapbox map style",components:["ReactMapboxGl","Source","Layer","Feature"],DemoComponent:fo,reactLive:o.createElement(mt,{full:!0,raw:"import * as React from 'react';\nimport ReactMapboxGl, { Layer, Source, Feature, GeoJSONLayer } from '../../../';\nimport { GeoJSONSourceRaw } from 'mapbox-gl';\n\nimport styled from 'styled-components';\n// tslint:disable-next-line:no-var-requires\nconst { token, styles } = require('./config.json');\n// tslint:disable-next-line:no-var-requires\nconst geojson = require('./geojson.json');\n\nconst Map = ReactMapboxGl({ accessToken: token });\n\nconst Container = styled.div`\n  position: relative;\n  height: 100%;\n  flex: 1;\n`;\n\nconst Button = styled.button`\n  border: 1px solid #3770c6;\n  background-color: rgb(84, 152, 255);\n  height: 100%;\n  color: white;\n  font-size: 13px;\n  padding: 6px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  outline: none;\n  :hover {\n    background-color: #3770c6;\n  }\n`;\nconst Indicator = styled.div`\n  padding: 6px 10px;\n  background-color: white;\n`;\nconst BottomBar = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  right: 20px;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst mapStyle = {\n  height: '100%',\n  width: '100%'\n};\n\nconst GEOJSON_SOURCE_OPTIONS: GeoJSONSourceRaw = {\n  type: 'geojson',\n  data: {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.0323, 38.9131]\n    },\n    properties: {\n      title: 'Mapbox DC',\n      'marker-symbol': 'monument'\n    }\n  }\n};\n\nconst POSITION_CIRCLE_PAINT = {\n  'circle-stroke-width': 4,\n  'circle-radius': 10,\n  'circle-blur': 0.15,\n  'circle-color': '#3770C6',\n  'circle-stroke-color': 'white'\n};\n\nconst selectedStyles = ['basic', 'dark', 'light'];\nconst switchStyles = Object.keys(styles).filter(k =>\n  (selectedStyles as any).includes(k)\n);\n\nexport interface State {\n  styleKey: string;\n  featuresPostion: number[][];\n  mapCenter: [number, number];\n  renderLayer: boolean;\n}\n\nexport interface Props {\n  // tslint:disable-next-line:no-any\n  onStyleLoad?: (map: any) => any;\n}\n\nconst InitialUserPostion = [-0.2416815, 51.5285582] as [number, number];\n\nclass StyleUpdate extends React.Component<Props, State> {\n  public state: State = {\n    styleKey: 'basic',\n    featuresPostion: [InitialUserPostion, InitialUserPostion],\n    // userPosition: InitialUserPostion,\n    mapCenter: InitialUserPostion,\n    renderLayer: true\n  };\n\n  public UNSAFE_componentWillMount() {\n    navigator.geolocation.getCurrentPosition(\n      ({ coords }: any) => {\n        const { latitude, longitude } = coords;\n\n        this.setState({\n          featuresPostion: [[longitude, latitude], InitialUserPostion],\n          mapCenter: [longitude, latitude]\n        });\n      },\n      err => {\n        console.error('Cannot retrieve your current position', err);\n      }\n    );\n  }\n\n  public nextStyle = () => {\n    const { styleKey } = this.state;\n    const currentIndex = switchStyles.indexOf(styleKey);\n    const nextIndex =\n      currentIndex === switchStyles.length - 1 ? 0 : currentIndex + 1;\n\n    this.setState({\n      styleKey: switchStyles[nextIndex]\n    });\n  };\n\n  public toggleLayer = () => {\n    const { renderLayer } = this.state;\n\n    this.setState({ renderLayer: !renderLayer });\n  };\n\n  private onDragStart = () => {\n    console.log('onDragStart');\n  };\n\n  private onDrag = () => {\n    console.log('onDrag');\n  };\n\n  private onDragEnd = ({ lngLat }: any, key: string | number) => {\n    console.log('onDragEnd');\n    this.setState({\n      featuresPostion: this.state.featuresPostion.map((el, index) => {\n        if (key === index) {\n          return [lngLat.lng, lngLat.lat];\n        }\n        return el;\n      })\n    });\n  };\n\n  private onStyleLoad = (map: any) => {\n    const { onStyleLoad } = this.props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  public render() {\n    const { styleKey, featuresPostion, mapCenter, renderLayer } = this.state;\n\n    return (\n      <Container>\n        <Map\n          style={styles[styleKey]}\n          containerStyle={mapStyle}\n          center={mapCenter}\n          onStyleLoad={this.onStyleLoad}\n        >\n          {renderLayer ? (\n            <div>\n              <Source id=\"example_id\" geoJsonSource={GEOJSON_SOURCE_OPTIONS} />\n              <Layer\n                type=\"circle\"\n                id=\"example_id_marker\"\n                paint={POSITION_CIRCLE_PAINT}\n                sourceId={'example_id'}\n              />\n            </div>\n          ) : (\n            undefined\n          )}\n\n          <Layer\n            type=\"circle\"\n            id=\"position-marker\"\n            paint={POSITION_CIRCLE_PAINT}\n          >\n            {featuresPostion.map((loc, index) => (\n              <Feature\n                key={index}\n                coordinates={loc}\n                draggable={index === 0}\n                onDragEnd={evt => this.onDragEnd(evt, index)}\n                onDragStart={this.onDragStart}\n                onDrag={this.onDrag}\n              />\n            ))}\n          </Layer>\n\n          <GeoJSONLayer\n            data={geojson}\n            circleLayout={{ visibility: 'visible' }}\n            symbolLayout={{\n              'text-field': '{place}',\n              'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n              'text-offset': [0, 0.6],\n              'text-anchor': 'top'\n            }}\n          />\n        </Map>\n        <BottomBar>\n          <Button onClick={this.nextStyle}>Change style</Button>\n          <Button onClick={this.toggleLayer}>Toggle layer</Button>\n          <Indicator>{`Using style: ${styleKey}`}</Indicator>\n        </BottomBar>\n      </Container>\n    );\n  }\n}\n\nexport default StyleUpdate;\n"})},{shortTitle:"geojson-data",title:"Display data from GeoJson",components:["ReactMapboxGl","GeoJsonLayer"],DemoComponent:Po,reactLive:o.createElement(mt,{full:!0,raw:"import * as React from 'react';\nimport ReactMapboxGl, { GeoJSONLayer } from '../../../';\nimport * as MapboxGL from 'mapbox-gl';\n\n// tslint:disable-next-line:no-var-requires\nconst { token, styles } = require('./config.json');\n// tslint:disable-next-line:no-var-requires\nconst geojson = require('./geojson.json');\n\nconst Map = ReactMapboxGl({ accessToken: token });\n\nconst mapStyle = {\n  flex: 1\n};\n\nconst symbolLayout: MapboxGL.SymbolLayout = {\n  'text-field': '{place}',\n  'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n  'text-offset': [0, 0.6],\n  'text-anchor': 'top'\n};\nconst symbolPaint: MapboxGL.SymbolPaint = {\n  'text-color': 'white'\n};\n\nconst circleLayout: MapboxGL.CircleLayout = { visibility: 'visible' };\nconst circlePaint: MapboxGL.CirclePaint = {\n  'circle-color': 'white'\n};\n\nexport interface Props {\n  // tslint:disable-next-line:no-any\n  onStyleLoad?: (map: any) => any;\n}\n\nclass GeoJsonLayer extends React.Component<Props> {\n  private center = [-77.01239, 38.91275] as [number, number];\n\n  // tslint:disable-next-line:no-any\n  private onClickCircle = (evt: any) => {\n    console.log(evt);\n  };\n\n  // tslint:disable-next-line:no-any\n  private onStyleLoad = (map: any) => {\n    const { onStyleLoad } = this.props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  public render() {\n    return (\n      <Map\n        style={styles.dark}\n        center={this.center}\n        containerStyle={mapStyle}\n        onStyleLoad={this.onStyleLoad}\n      >\n        <GeoJSONLayer\n          data={geojson}\n          circleLayout={circleLayout}\n          circlePaint={circlePaint}\n          circleOnClick={this.onClickCircle}\n          symbolLayout={symbolLayout}\n          symbolPaint={symbolPaint}\n        />\n      </Map>\n    );\n  }\n}\n\nexport default GeoJsonLayer;\n"})}];function Do(){var e=Object(u.a)(["\n  margin: 0px 10px;\n  padding: 20px 0px;\n  font-weight: ",";\n  cursor: pointer;\n"]);return Do=function(){return e},e}function Ro(){var e=Object(u.a)(["\n  list-style-type: none;\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  margin: 0px;\n  background-color: white;\n  border-right: 1px solid rgb(235, 235, 235);\n  width: 200px;\n"]);return Ro=function(){return e},e}var No=m.a.ul(Ro()),To=m.a.li(Do(),(function(e){return e.selected?700:100})),Bo=function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(c.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this.props,t=e.onSelectExample,n=e.selectedIndex;return o.createElement(No,null,Fo.map((function(e,a){return o.createElement(To,{key:a,onClick:function(){return t(a)},selected:n===a},e.shortTitle)})))}}]),t}(o.Component);function Go(){var e=Object(u.a)(["\n  position: absolute;\n  background-color: #5498ff;\n  border: 1px solid #4e83d4;\n  border-radius: 5px;\n  padding: 10px 16px;\n  margin-left: 12px;\n  margin-top: 8px;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  z-index: 1;\n  :hover {\n    background-color: #4e83d4;\n  }\n"]);return Go=function(){return e},e}function Ho(){var e=Object(u.a)(["\n  width: 100%;\n  display: flex;\n  flex-direction: rows;\n"]);return Ho=function(){return e},e}function Uo(){var e=Object(u.a)(["\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n"]);return Uo=function(){return e},e}var Wo=m.a.div(Uo()),Zo=m.a.div(Ho()),Jo=m.a.button(Go()),qo=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).state={selectedDemoIndex:parseInt(localStorage.getItem("selectedDemoIndex")||"0",10),showLive:!0},n.onSelectExample=function(e){n.setState({selectedDemoIndex:e}),localStorage.setItem("selectedDemoIndex",JSON.stringify(e))},n.onToggleLive=function(){n.setState({showLive:!n.state.showLive})},n.onStyleLoad=function(e){n.setState({map:e})},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"componentDidUpdate",value:function(e,t){var n=this.state,o=n.showLive,a=n.map;o!==t.showLive&&a&&a.resize()}},{key:"render",value:function(){var e=this.state,t=e.selectedDemoIndex,n=e.showLive,a=Fo[t],r=a.DemoComponent,i=a.reactLive;return o.createElement(Wo,null,o.createElement(Bo,{onSelectExample:this.onSelectExample,selectedIndex:t}),o.createElement(Zo,null,o.createElement(Jo,{onClick:this.onToggleLive},n?"Hide code":"Show code"),n&&i,o.createElement(r,{onStyleLoad:this.onStyleLoad})))}}]),t}(o.Component);function Ko(){var e=Object(u.a)(["\n  border-bottom: 1px solid rgb(235, 235, 235);\n  background-color: white;\n  display: flex;\n  align-items: center;\n  min-height: 74px;\n"]);return Ko=function(){return e},e}function $o(){var e=Object(u.a)(["\n  text-decoration: none;\n  margin-left: 10px;\n  margin-top: 6px;\n  margin-bottom: 6px;\n  padding-right: 10px;\n  color: #34495e;\n  border-right: 2px solid rgb(235, 235, 235);\n"]);return $o=function(){return e},e}function Yo(){var e=Object(u.a)(["\n  text-decoration: none;\n  margin-left: 10px;\n  margin-top: 6px;\n  margin-bottom: 6px;\n  padding-right: 10px;\n  color: #34495e;\n  border-right: 2px solid rgb(235, 235, 235);\n  font-weight: ","\n"]);return Yo=function(){return e},e}function Vo(){var e=Object(u.a)(["\n  display: flex;\n  justify-content: center;\n  margin: 20px auto;\n"]);return Vo=function(){return e},e}function Xo(){var e=Object(u.a)(["\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n"]);return Xo=function(){return e},e}var Qo=m.a.div(Xo()),ea=m.a.nav(Vo()),ta=Object(m.a)(r.b)(Yo(),(function(e){return e.selected?"bold":"inherit"})),na=m.a.a($o()),oa=m.a.div(Ko()),aa=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).state={selected:ua.indexOf(n.props.location.pathname)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:"UNSAFE_componentWillMount",value:function(){var e=this;r.e.listen((function(t){e.setState({selected:ua.indexOf(t.pathname)})}))}},{key:"render",value:function(){var e=this.props.children,t=this.state.selected;return o.createElement(Qo,null,o.createElement(oa,null,o.createElement(ea,null,o.createElement(ta,{selected:0===t,to:ua[0]},"Home"),o.createElement(ta,{selected:1===t,to:ua[1]},"Demos"),o.createElement(ta,{selected:2===t,to:ua[2]},"Documentation"),o.createElement(na,{href:"https://github.com/alex3165/react-mapbox-gl",target:"_blank",style:{borderRight:0}},"GitHub"))),e)}}]),t}(o.Component),ra=n(116),ia=n.n(ra);function la(){var e=Object(u.a)(["\n  max-width: 900px;\n  margin: auto;\n"]);return la=function(){return e},e}var sa=m.a.div(la()),ca=function(){return o.createElement(sa,null,o.createElement(ia.a,{source:"# ReactMapboxGL\n\nFactory function that returns a React Mapbox component. Parameters of the factory function are static; properties of your component are dynamic and get updated if they change between rendering.\n\n## Pre-requirement\n\nYou will need a CSS loader to use this library as it injects mapbox-gl css.\n\n### How to use\n\n```jsx\nimport ReactMapboxGl from \"react-mapbox-gl\";\n\n...\n\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiZmFicmljOCIsImEiOiJjaWc5aTV1ZzUwMDJwdzJrb2w0dXRmc2d0In0.p6GGlfyV-WksaDV_KdN27A\"\n});\n\n<Map style=\"mapbox://styles/mapbox/streets-v8\"/>\n```\n\n### Factory parameters\n\n* **accessToken** _(required)_ : `string` Mapbox access token.\n* **apiUrl**: `string` Define a custom URL to fetch the vector tiles.\n* **minZoom** _(Default: `0`)_: `number` Minimum zoom level. Must be between 0 and 20.\n* **maxZoom** _(Default: `20`)_: `number` Maximum zoom level. Must be between 0 and 20.\n* **scrollZoom** _(Default: `true`)_: `boolean` See [mapbox scrollZoom](https://www.mapbox.com/mapbox-gl-js/api/#Map)\n* **hash** _(Default: `false`)_: `boolean`, [See mapbox doc](https://www.mapbox.com/mapbox-gl-js/api/#Map)\n* **preserveDrawingBuffer** _(Default: `false`)_: `boolean`, [See mapbox doc](https://www.mapbox.com/mapbox-gl-js/api/#Map)\n* **interactive** _(Default: `true`)_: `boolean` Set to `false` to disable interaction with the map.\n* **attributionControl** _(Default: `true`)_: `boolean` Set to `false` to remove the attribution on the map.\n* **customAttribution**: `string | string[]` String or strings to show in an AttributionControl. Only applicable if `attributionControl` option is set to `true`.\n* **logoPosition** _(Default: `bottom-left`)_: `string` Set the position of the mapbox logo. Possible values:\n  * `top-left`\n  * `top-right`\n  * `bottom-right`\n  * `bottom-left`\n* **renderWorldCopies** _(Default: `true`)_: `boolean` If `true`, multiple copies of the world will be rendered, when zoomed out.\n* **dragRotate** _(Default: `true`)_: `boolean` Set to `false` to disable drag rotation, see [mapbox DragRotateHandler](https://www.mapbox.com/mapbox-gl-js/api/#DragRotateHandler)\n* **pitchWithRotate** _(Default: `true`)_: `boolean` Set to `false` to disable pitch with rotation, see [mapbox PitchWithRotate](https://docs.mapbox.com/mapbox-gl-js/api/#map)\n* **trackResize** _(Default: `true`)_: `boolean` If `true`, the map will automatically resize when the browser window resizes.\n* **touchZoomRotate** _(Default: `true`)_: `boolean` If `true`, the \"pinch to rotate and zoom\" interaction is enabled. An Object value is passed as options to TouchZoomRotateHandler#enable .\n* **doubleClickZoom** _(Default: `true`)_: `boolean` If `true`, the \"double click to zoom\" interaction is enabled (see DoubleClickZoomHandler).\n* **keyboard** _(Default: `true`)_: `boolean` If `true` , keyboard shortcuts are enabled (see KeyboardHandler).\n* **dragPan** _(Default: `true`)_: `boolean` If `true` , the \"drag to pan\" interaction is enabled (see DragPanHandler).\n* **refreshExpiredTiles** _(Default: `true`)_: `boolean` If `false` , the map won't attempt to re-request tiles once they expire per their HTTP cacheControl / expires headers.\n* **failIfMajorPerformanceCaveat** _(Default: `false`)_: `boolean` If `true` , map creation will fail if the performance of Mapbox GL JS would be dramatically worse than expected (i.e. a software renderer would be used).\n* **bearingSnap** _(Default: `7`)_: `number` The threshold, measured in degrees, that determines when the map's bearing (rotation) will snap to north. For example, with a bearingSnap of 7, if the user rotates the map within 7 degrees of north, the map will automatically snap to exact north.\n* **antialias** _(Default: `false`)_: `boolean` If  true, the gl context will be created with MSA antialiasing, which can be useful for antialiasing custom layers. This is false by default as a performance optimization.\n\n### Component Properties\n\n* **style** _(required)_ : `string | object` Mapbox map style, if changed, the style will be updated using `setStyle`.\n* **onStyleLoad**: `(map, loadEvent) => void` called with the Mapbox Map instance when the `load` event is fired. You can use the callback's first argument to then interact with the Mapbox API.\n* **center** _(Default: `[ -0.2416815, 51.5285582 ]`)_: `[number, number]` Center the map at the position at initialisation\n  * Must be in longitude, latitude coordinate order (as opposed to latitude, longitude) to match GeoJSON (source: https://www.mapbox.com/mapbox-gl-js/api/#lnglat).\n  * Re-center the map if the value change regarding the prev value or the actual center position [flyTo](https://www.mapbox.com/mapbox-gl-js/api/#Map.flyTo)\n* **zoom** _(Default: `[11]`)_: `[number]` Zoom level of the map at initialisation wrapped in an array.\n  * Check for reference equality between the previous value of zoom and the new one in order to update it or not.\n* **maxBounds** : `LngLatBounds | number[][]` If set, the map is constrained to the given bounds [SouthWest, NorthEast]\n* **fitBounds** : `[[number, number], [number, number]]` If set, the map will center on the given coordinates, [fitBounds](https://www.mapbox.com/mapbox-gl-js/api/#Map#fitBounds)\n* **fitBoundsOptions** : `object` Options for [fitBounds](https://www.mapbox.com/mapbox-gl-js/api/#Map#fitBounds)\n* **bearing**: `[number]` Bearing (rotation) of the map at initialisation measured in degrees counter-clockwise from north.\n  * Check the previous value and the new one, if the value changed update the bearing value [flyTo](https://www.mapbox.com/mapbox-gl-js/api/#Map.flyTo)\n* **pitch**: `[number]` Pitch (tilt) of the map at initialisation, range : `0 - 60`\n* **containerStyle** : `object` The style of the container of the map passed as an object\n* **className** : `string` ClassName passed down to the container div\n* **movingMethod** _(Default: `flyTo`)_: `string` define the method used when changing the center or zoom position. Possible value :\n  * `jumpTo`\n  * `easeTo`\n  * `flyTo`\n* **animationOptions** : `object` Options for moving animation [see](https://www.mapbox.com/mapbox-gl-js/api/#animationoptions)\n* **flyToOptions** : `object` Options for flyTo animation [see](https://www.mapbox.com/mapbox-gl-js/api/#map#flyto)\n* **renderChildrenInPortal** : `boolean` If `true`, Popup and Marker elements will be rendered in a React portal, allowing mouse events to pass through them.\n\n### Events\n\nAll mapbox map events are implemented in this library, see events section on mapbox documentation [api](https://www.mapbox.com/mapbox-gl-js/api). All the events have the following signature `(map: Mapbox.Map, evt: React.SyntheticEvent<any>) => void`.\n\nThe event names are written in camelCase:\n\n```js\nconst events = {\n  // Triggered when style of the map has loaded\n  onStyleLoad,\n\n  // mapbox-gl events\n  onResize: 'resize',\n  onDblClick: 'dblclick',\n  onClick: 'click',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMoveStart: 'movestart',\n  onMove: 'move',\n  onMoveEnd: 'moveend',\n  onMouseUp: 'mouseup',\n  onMouseDown: 'mousedown',\n  onDragStart: 'dragstart',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onZoomStart: 'zoomstart',\n  onZoom: 'zoom',\n  onZoomEnd: 'zoomend',\n  onPitch: 'pitch',\n  onPitchStart: 'pitchstart',\n  onPitchEnd: 'pitchend',\n  onWebGlContextLost: 'webglcontextlost',\n  onWebGlContextRestored: 'webglcontextrestored',\n  onRemove: 'remove',\n  onContextMenu: 'contextmenu',\n  onRender: 'render',\n  onError: 'error',\n  onSourceData: 'sourcedata',\n  onDataLoading: 'dataloading',\n  onStyleDataLoading: 'styledataloading',\n  onStyleImageMissing: 'styleimagemissing',\n  onTouchCancel: 'touchcancel',\n  onData: 'data',\n  onSourceDataLoading: 'sourcedataloading',\n  onTouchMove: 'touchmove',\n  onTouchEnd: 'touchend',\n  onTouchStart: 'touchstart',\n  onStyleData: 'styledata',\n  onBoxZoomStart: 'boxzoomstart',\n  onBoxZoomEnd: 'boxzoomend',\n  onBoxZoomCancel: 'boxzoomcancel',\n  onRotateStart: 'rotatestart',\n  onRotate: 'rotate',\n  onRotateEnd: 'rotateend'\n};\n```\n\n---\n\n# Layer\n\nCreates a new Mapbox layer and creates all the sources depending on the child `Feature` components. Layer also creates a source if no sourceId is passed.\n\nIf you change the value of the paint or the layout property of the layer, it will automatically update this property using `setPaintProperty` or `setLayoutProperty` respectively.\n\n> Only works with the first depth of the object.\n\n### How to use\n\n```jsx\nimport { Layer } from \"react-mapbox-gl\";\n\n...\n\n<Layer\n  type=\"symbol\"\n  layout={{ \"icon-image\": \"harbor-15\" }}>\n</Layer>\n```\n\n### Properties\n\n* **id** : `string` The id of the layer or generate an incremented number as id\n* **type** _(Default: `symbol`)_ : `string` The type of the features childrens elements, possible values :\n  * `symbol`, Include a Mapbox `symbol` (`Point` GeoJson)\n  * `line`, Include a Mapbox `line` (`LineString` GeoJson)\n  * `fill`, Include a Mapbox `polygon` (`Fill` GeoJson)\n  * `circle`, Include a Mapbox `circle` (`Point` GeoJson)\n  * `raster`, Include a Mapbox raster layer\n  * `fill-extrusion`, Include a Mapbox fill extrusion layer\n  * `background`, Include a Mapbox background layer\n  * `heatmap`, Include a Mapbox heatmap layer\n* **layout**: `object` Mapbox layout object passed down to mapbox `map.addLayer` method [mapbox layout api](https://www.mapbox.com/mapbox-gl-style-spec/#layer-layout)\n* **paint**: `object` Mapbox paint object passed down to mapbox `map.addLayer` method [mapbox paint api](https://www.mapbox.com/mapbox-gl-style-spec/#layer-paint)\n* **geoJSONSourceOptions**: `object` Source options merged to object passed to `map.addSource`\n* **metadata**: `object` metadata parameter passed to `map.addLayer`\n* **sourceLayer**: `string` source-layer parameter passed to `map.addLayer`\n* **minZoom**: `number` minzoom parameter passed to `map.addLayer`\n* **maxZoom**: `number` maxzoom parameter passed to `map.addLayer`\n* **filter**: `any[]` filter parameter passed to `map.addLayer`, see how to [use expressions to filter elements](https://www.mapbox.com/mapbox-gl-js/style-spec/#layer-filter)\n* **sourceId**: `string` When passed to the layer, the source will not be created but only the layer and it will use the given source id.\n* **before**: `string` Pass the id of a layer, it will display the current layer before the layer defined by the id. [mapbox api](https://www.mapbox.com/mapbox-gl-js/api/#Map#addLayer)\n* **images**: `[imageKey: string, image: HTMLImageElement, options: object]` Also accepts array of the previous image tuple. Add images for use in layout with prop `icon-image`. The value should be the `imageKey` string of the tuple. Alternatively, use mapbox studio to upload the image, it will be fetched with the map style object. (see [map.addImage](https://www.mapbox.com/mapbox-gl-js/api/#map#addimage) options for the tuple options).\n* **onMouseMove** `function` Mouse move handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **onMouseEnter** `function` Mouse enter handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **onMouseLeave** `function` Mouse leave handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **onMouseDown** `function` Mouse down handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **onMouseUp** `function` Mouse up handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **onClick** `function` Mouse click handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n\n---\n\n# Source\n\nAdd a source to the map (for layers to use, for example).\n\n### How to use\n\n```jsx\nimport { Source } from \"react-mapbox-gl\";\n\n...\n\nconst RASTER_SOURCE_OPTIONS = {\n  \"type\": \"raster\",\n  \"tiles\": [\n    \"https://someurl.com/512/{z}/{x}/{y}\",\n  ],\n  \"tileSize\": 512\n};\n\n<Source id=\"source_id\" tileJsonSource={RASTER_SOURCE_OPTIONS} />\n<Layer type=\"raster\" id=\"layer_id\" sourceId=\"source_id\" />\n```\n\n### Properties\n\n* **id** _(required)_: `string`\n* **geoJsonSource** : `object` GeoJson source, see [mapbox-gl GeoJson](https://www.mapbox.com/mapbox-gl-js/style-spec/#sources-geojson) for options\n* **tileJsonSource** : `object` TileJson source, see [mapbox-gl TileJson](https://www.mapbox.com/mapbox-gl-js/style-spec/#sources) for options\n* **onSourceAdded** : `function` Executed once the source is added to the map, the source is passed as a first argument.\n* **onSourceLoaded** : `function` Executed once the source data has been loaded for the first time (after [mapbox-gl map.event:load](https://www.mapbox.com/mapbox-gl-js/api/#map.event:load)), the source is passed as a first argument.\n\n---\n\n# GeoJSONLayer\n\nDisplay on the map all the information contained in a geoJSON file.\n\n_Note:_ GeoJSONLayer will not render any layers (`line`, `circle`, `fill`, etc...)\nunless an associated `[layer]Layout` or `[layer]Paint` prop is provided.\n\n### How to use\n\n```jsx\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\n\n...\n\n<GeoJSONLayer\n  data={geojson}\n  symbolLayout={{\n    \"text-field\": \"{place}\",\n    \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n    \"text-offset\": [0, 0.6],\n    \"text-anchor\": \"top\"\n  }}/>\n```\n\n### Properties\n\n* **data** _(required)_: `string | object` The url to the geojson file or the geojson file itself.\n* **lineLayout** | **symbolLayout** | **circleLayout** | **fillLayout** | **fillExtrusionLayout**: `Object` Layer layout information. [mapbox layout api](https://www.mapbox.com/mapbox-gl-style-spec/#layer-layout)\n* **linePaint** | **symbolPaint** | **circlePaint** | **fillPaint** | **fillExtrusionPaint**: `Object` Paint information. [mapbox paint api](https://www.mapbox.com/mapbox-gl-style-spec/#layer-paint)\n* **lineOnMouseDown** | **symbolOnMouseDown** | **circleOnMouseDown** | **fillOnMouseDown** | **fillExtrusionOnMouseDown**: `function` Mouse down handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **lineOnMouseUp** | **symbolOnMouseUp** | **circleOnMouseUp** | **fillOnMouseUp** | **fillExtrusionOnMouseUp**: `function` Mouse up handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **lineOnMouseMove** | **symbolOnMouseMove** | **circleOnMouseMove** | **fillOnMouseMove** | **fillExtrusionOnMouseMove**: `function` Mouse move handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **lineOnMouseEnter** | **symbolOnMouseEnter** | **circleOnMouseEnter** | **fillOnMouseEnter** | **fillExtrusionOnMouseEnter**: `function` Mouse enter handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **lineOnMouseLeave** | **symbolOnMouseLeave** | **circleOnMouseLeave** | **fillOnMouseLeave** | **fillExtrusionOnMouseLeave**: `function` Mouse leave handler. [mapbox map api](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **lineOnClick** | **symbolOnClick** | **circleOnClick** | **fillOnClick** | **fillExtrusionOnClick**: `function` Mouse click handler. [mapbox map mouse event](https://www.mapbox.com/mapbox-gl-js/api/#mapmouseevent)\n* **sourceOptions**: `object` Options object merged to the object used when calling `GeoJSONSource` method\n* **layerOptions**: `object` Passed down to the layer object when setting it out.\n* **before**: `string` Pass the id of a layer, it will display the current layer before the layer defined by the id. [mapbox api](https://www.mapbox.com/mapbox-gl-js/api/#Map#addLayer)\n\n---\n\n# Feature\n\nDisplays a feature on the map. Can only be used when wrapped in a `Layer` component. The type of the feature is defined at the `Layer` level. If you want to create a new type, create an associated new layer.\n\n### How to use\n\n```jsx\nimport { Feature } from \"react-mapbox-gl\";\n\n...\n\n<Feature coordinates={[-0.13235092163085938,51.518250335096376]}/>\n```\n\n### Properties\n\n* **coordinates** _(required)_ : `number[]` Display the feature at the given position.\n* **properties** : `object` Properties object passed down to the feature at the creation of the source.\n* **onClick** : `(mapWithEvt: object) => void` Triggered when user click on the feature\n  * Args contain the feature object, the map object and the arguments passed by mapbox from the event `click`\n* **onMouseEnter** : `(mapWithEvt: object) => void` Triggered when the mouse enter the feature element\n  * Args contain the feature object, the map object and the arguments passed by mapbox from the event `onmousemove`\n* **onMouseLeave** : `(mapWithEvt: object) => void` Triggered when the mouse leave the feature element\n  * Args contain the map object and the arguments passed by Mapbox from the event `onmousemove`\n* **draggable** _(Default: `false`)_ : `boolean` Define wether the feature is draggable or not.\n* **onDragStart** : `(mapWithEvt: object) => void` Triggered when the user start dragging the feature.\n* **onDrag** : `(mapWithEvt: object) => void` Triggered when the user continue dragging the feature (ie. move).\n* **onDragEnd** : `(mapWithEvt: object) => void` Triggered when the user stop dragging the feature.\n\n---\n\n# Image\n\nAdds to the map a image that can be used as [`icon-image`](https://www.mapbox.com/mapbox-gl-js/style-spec#layout-symbol-icon-image)\n\n### How to use\n\nLoad local image. [see docs](https://www.mapbox.com/mapbox-gl-js/api#map#addimage)\n\n```jsx harmony\n<Image id={'image-uid'} data={someImage} />\n```\n\nLoad image from url. [see docs](https://www.mapbox.com/mapbox-gl-js/api#map#loadimage)\n\n```jsx harmony\n<Image id={'image-uid'} url={'url/to/image'} />\n```\n\n### Properties\n\n* **id** _(required)_: `string` the image name\n* **url** `string` A url to load the image from [see docs](https://www.mapbox.com/mapbox-gl-js/api#map#loadimage)\n* **data** `ImageDataType` The image data [see docs](https://www.mapbox.com/mapbox-gl-js/api#map#loadimage)\n* **options** `ImageOptionsType` The image options [see docs](https://www.mapbox.com/mapbox-gl-js/api#map#loadimage)\n* **onLoaded** `() => void` Will be called when image loaded to map\n* **onError** `(error: Error) => void` Will be called if image did not load\n\n---\n\n# ZoomControl\n\nA custom react zoom control component.\n\n### How to use\n\n```jsx\nimport { ZoomControl } from \"react-mapbox-gl\";\n\n...\n\n<ZoomControl/>\n```\n\n### Properties\n\n* **onControlClick** : `(map: object, zoomDiff: number) => void` triggered when user clicks on minus or plus button\n* **style** : `object` Style object merged with internal style into the container\n* **className**: `string` Custom style using className for the container\n* **zoomDiff** : `number` The shift number passed to the callback `onControlClick`\n* **position** _(Default: `top-right`)_: `string` The control position, Possible values :\n  * `top-right`\n  * `top-left`\n  * `bottom-right`\n  * `bottom-left`\n* **tabIndex** : `number` define the tab index value of the top container tag\n\n---\n\n# ScaleControl\n\nA custom react scale feedback control component.\n\n### How to use\n\n```jsx\nimport { ScaleControl } from \"react-mapbox-gl\";\n\n...\n\n<ScaleControl/>\n```\n\n### Properties\n\n* **measurement** _(Default: `km`)_: `string`, Possible values:\n  * `km`\n  * `mi`\n* **style**: `object` Style object merged with internal style into the container\n* **className**: `string` Custom style using className for the container\n* **position** _(Default: `bottom-right`)_: `string` The control position, Possible values :\n  * `top-right`\n  * `top-left`\n  * `bottom-right`\n  * `bottom-left`\n* **tabIndex** : `number` define the tab index value of the top container tag\n\n---\n\n# RotationControl\n\nDisplays the current map rotation, also resets the rotation to it's origin value on click.\n\n### How to use\n\n```jsx\nimport { RotationControl } from \"react-mapbox-gl\";\n\n...\n\n<RotationControl/>\n```\n\n### Properties\n\n* **style** : `object` Style object merged with internal style into the container\n* **className** : `string` Get passed to the container div\n* **position** _(Default: `top-right`)_: `string` The control position, Possible values :\n  * `top-right`\n  * `top-left`\n  * `bottom-right`\n  * `bottom-left`\n* **tabIndex** : `number` define the tab index value of the top container tag\n\n---\n\n# Popup\n\nThe popup component allows you to display a popup tooltip on top of the map using mapbox-gl-js.\n\n### How to use\n\n```jsx\nimport { Popup } from \"react-mapbox-gl\";\n\n...\n\n<Popup\n  coordinates={[-0.13235092163085938,51.518250335096376]}\n  offset={{\n    'bottom-left': [12, -38],  'bottom': [0, -38], 'bottom-right': [-12, -38]\n  }}>\n  <h1>Popup</h1>\n</Popup>\n```\n\n### Properties\n\n* **coordinates** _(required)_: `[number, number]` Display the popup at the given position.\n* **anchor**: `string` Set the anchor point of the popup, Possible values:\n  * `top`\n  * `bottom`\n  * `left`\n  * `right`\n  * `center`\n  * `top-left`\n  * `top-right`\n  * `bottom-left`\n  * `bottom-right`\n  * `null | undefined`: When not set, the anchor is automatically calculated to keep the content of the popup visible.\n* **offset** _(Default: 0)_: `number | number[] | object` Set the offset of popup, where the tip of the popup will be pointing.\n  * When `number` is passed, the popup will be offset by that number for all anchor positions.\n  * When an `number[]` is passed (e.g. [-12, 30]), the popup will be offset by that point.\n  * When `object` is passed, it must contain keys for different anchor positions and values as the offset (`number` or `number[]`)\n* **onClick**: `function` Triggered whenever user click on the popup\n* **style**: `object` Apply style to the marker container\n* **className**: `string` Apply the className to the container of the popup\n* **tabIndex** : `number` define the tab index value of the top container tag\n\n---\n\n# Marker\n\nAdd an HTML marker to the map.\n\n_Note: When rendering many objects, avoid using `Marker`s as it will negatively affect performance. Use `Layer`s and `Feature`s instead._\n\n### How to use\n\n```jsx\nimport { Marker } from \"react-mapbox-gl\";\n\n...\n\n<Marker\n  coordinates={[-0.2416815, 51.5285582]}\n  anchor=\"bottom\">\n  <img src={markerUrl}/>\n</Marker>\n```\n\n### Properties\n\n* **coordinates** _(required)_: `[number, number]` Display the marker at the given position.\n* **anchor**: `string` Same as Popup's anchor property.\n* **offset**: `string` Same as Popup's offset property.\n* **onClick**: `function` Triggered whenever user click on the marker\n* **style**: `object` Apply style to the marker container\n* **className**: `string` Apply the className to the container of the Marker\n* **tabIndex** : `number` define the tab index value of the top container tag\n\n---\n\n# Cluster\n\nCreate a cluster of `Marker`.\n\n### How to use\n\n```jsx\nimport { Cluster } from \"react-mapbox-gl\";\n\n...\n\nclusterMarker = (coordinates) => (\n  <Marker coordinates={coordinates} style={styles.clusterMarker}>\n    C\n  </Marker>\n);\n\n...\n\n<Cluster ClusterMarkerFactory={this.clusterMarker}>\n  {\n    places.features.map((feature, key) =>\n      <Marker\n        key={key}\n        style={styles.marker}\n        coordinates={feature.geometry.coordinates}\n        onClick={this.onMarkerClick.bind(this, feature.geometry.coordinates)}>\n        M\n      </Marker>\n    )\n  }\n</Cluster>\n```\n\n### Properties\n\n* **ClusterMarkerFactory** _(required)_: `(coordinates: number[], pointCount: number, getLeaves: (limit?: number, offset?: number) => Array<React.ReactElement<any>>) => Marker` A function called for every cluster, the function must return a Marker component\n\n  * `getLeaves()` return `Cluster` children of a cluster, with pagination support: limit is the number of points to return (set to Infinity for all points, default to 10), and offset is the amount of points to skip (for pagination).\n\n* **radius**: _Default: 60_:`number` Cluster radius, in pixels.\n* **minZoom**: _Default: 0_:`number` Minimum zoom level at which clusters are generated.\n* **maxZoom**: _Default: 16_:`number` Maximum zoom level at which clusters are generated.\n* **extent**: _Default: 512_:`number` (Tiles) Tile extent. Radius is calculated relative to this value.\n* **nodeSize**: _Default: 64_:`number` Size of the KD-tree leaf node. Affects performance.\n* **log**: _Default: false_:`boolean` Whether timing info should be logged.\n* **zoomOnClick**: _Default: false_:`boolean` Zoom to bounds of cluster on click.\n* **zoomOnClickPadding**: _Default: 20_:`number` The amount of padding in pixels to add to the cluster bounds for the zoom.\n* **style**: `object` Apply style to the marker container\n* **className**: `string` Apply the className to the container of the Marker\n* **tabIndex** : `number` define the tab index value of the top container tag\n\n---\n\n# Using the original Mapbox API\n\nSometimes, react-mapbox-gl hasn't wrapped all of the functionality you need. In that case, you might want to access the original [mapbox-gl-js API](https://docs.mapbox.com/mapbox-gl-js/api).\n\nFor this, there are two options:\n\n### onStyleLoad\n\n`onStyleLoad` property on the component. The callback function will receive the map object as a first argument, then you can add your own logic alongside react-mapbox-gl.\n\n### Context API\n\nArguably the nicer way to do this is to use the React context, which v4 added support for. You can grab the Map instance from the context anywhere within the `<Map />` component.\n\n```\nimport ReactMapboxGL, { MapContext } from 'react-mapbox-gl';\n\nconst Map = ReactMapboxGL({ /* factory options */ });\n\nconst MyMap = () => (\n  <Map style=\"your-style-here\">\n    <MapContext.Consumer>\n      {(map) => {\n        // use `map` here\n      }}\n    </MapContext.Consumer>\n  </Map>\n);\n```\n"}))};n(631);n.d(t,"paths",(function(){return ua}));var pa=function(e){return"/react-mapbox-gl".concat(e)},ua=[pa("/"),pa("/demos"),pa("/documentation")];a.render(o.createElement(r.d,{history:r.e},o.createElement(r.c,{path:ua[0],component:aa},o.createElement(r.a,{component:Lt}),o.createElement(r.c,{path:ua[1],component:qo}),o.createElement(r.c,{path:ua[2],component:ca}))),document.getElementById("root"))},93:function(e){e.exports=JSON.parse('{"type":"FeatureCollection","features":[{"type":"Feature","properties":{"place":"The coffee bar","login":"espresso","lat":"38.91427","lon":"-77.02827"},"geometry":{"type":"Point","coordinates":[-77.02827,38.91427]}},{"type":"Feature","properties":{"place":"Bistro Bohem","login":"2027355895","lat":"38.91538","lon":"-77.02013"},"geometry":{"type":"Point","coordinates":[-77.02013,38.91538]}},{"type":"Feature","properties":{"place":"Black Cat","login":"luckycat","lat":"38.91458","lon":"-77.03155"},"geometry":{"type":"Point","coordinates":[-77.03155,38.91458]}},{"type":"Feature","properties":{"place":"Snap","login":"nutella1","lat":"38.92239","lon":"-77.04227"},"geometry":{"type":"Point","coordinates":[-77.04227,38.92239]}},{"type":"Feature","properties":{"place":"Columbia Heights Coffee","login":"FAIRTRADE1","lat":"38.93222","lon":"-77.02854"},"geometry":{"type":"Point","coordinates":[-77.02854,38.93222]}},{"type":"Feature","properties":{"place":"Azi\'s Cafe","login":"sunny","lat":"38.90842","lon":"-77.02419"},"geometry":{"type":"Point","coordinates":[-77.02419,38.90842]}},{"type":"Feature","properties":{"place":"Blind Dog Cafe","login":"baxtercantsee","lat":"38.91931","lon":"-77.02518"},"geometry":{"type":"Point","coordinates":[-77.02518,38.91931]}},{"type":"Feature","properties":{"place":"Le Caprice","login":"baguette","lat":"38.93260","lon":"-77.03304"},"geometry":{"type":"Point","coordinates":[-77.03304,38.9326]}},{"type":"Feature","properties":{"place":"Filter","login":"","lat":"38.91368","lon":"-77.04509"},"geometry":{"type":"Point","coordinates":[-77.04509,38.91368]}},{"type":"Feature","properties":{"place":"Peregrine","login":"espresso","lat":"38.88516","lon":"-76.99656"},"geometry":{"type":"Point","coordinates":[-76.99656,38.88516]}},{"type":"Feature","properties":{"place":"Tryst","login":"coupetnt","lat":"38.921894","lon":"-77.042438"},"geometry":{"type":"Point","coordinates":[-77.042438,38.921894]}},{"type":"Feature","properties":{"place":"The Coupe","login":"voteforus","lat":"38.93206","lon":"-77.02821"},"geometry":{"type":"Point","coordinates":[-77.02821,38.93206]}},{"type":"Feature","properties":{"place":"Big Bear Cafe","login":"","lat":"38.91275","lon":"-77.01239"},"geometry":{"type":"Point","coordinates":[-77.01239,38.91275]}}]}')}},[[117,1,2]]]);
//# sourceMappingURL=main.e4b9c1c6.chunk.js.map